{"ast":null,"code":"var _jsxFileName = \"F:\\\\Project-Management-App\\\\frontend\\\\src\\\\components\\\\ProjectDetails.js\",\n  _s = $RefreshSig$();\n// import 'bootstrap/dist/css/bootstrap.min.css';\n// import React, { useEffect, useState } from 'react';\n// import { useNavigate, useParams } from 'react-router-dom';\n// import axios from 'axios';\n// import './ProjectDetails.css'; // Import custom CSS\n\n// function ProjectDetails() {\n//   const { projectId } = useParams(); // Get projectId from URL\n//   const [project, setProject] = useState(null);\n//   const navigate = useNavigate();\n//   const [isProjectTask,setisProjectTask]=useState(false);\n//   const [projectTasks, setProjectTasks] = useState([]);\n//   const [isTeamMembers,setisTeamMembers]=useState(false);\n//   const [teamMembers, setTeamMembers] = useState([]);\n//   const [isEditing, setIsEditing] = useState(false); // State for handling edit mode\n//   const [editedProject, setEditedProject] = useState({});\n//   const [newTeamMember, setNewTeamMember] = useState(''); // Input for adding a new team member\n//   const [showTeamModal, setShowTeamModal] = useState(false); // Modal visibility\n\n//   useEffect(() => {\n//     const fetchProjectDetails = async () => {\n//       try {\n//         // Fetch project details, tasks, and team members\n//         const response = await axios.get(`http://localhost:5000/api/project/${projectId}`);\n//         let{ project, tasks,teamMembers } = response.data;\n//         teamMembers=project.teamMembers;\n//         console.log(project);\n//         console.log(tasks);\n//         console.log(teamMembers);\n\n//         if(tasks){\n//           setProjectTasks(tasks);\n//           setisProjectTask(true);\n//         }\n//         setProject(project);\n//         if(teamMembers){\n\n//           setisTeamMembers(true);\n//         }\n//         setTeamMembers(teamMembers||[]);\n//         setEditedProject(project);\n//       } catch (err) {\n//         console.error('Error fetching project details:', err);\n//       }\n//     };\n\n//     fetchProjectDetails();\n//   }, [projectId]);\n\n//   // Handle input changes for the editable form\n//   const handleInputChange = (e) => {\n//     const { name, value } = e.target;\n//     setEditedProject({ ...editedProject, [name]: value });\n//   };\n\n//   // Function to save the updated project details\n\n//   const handleSave = async () => {\n//     try {\n\n//       await axios.patch(`http://localhost:5000/api/project/${projectId}`, editedProject);\n//       setProject(editedProject);\n//       setIsEditing(false);\n//     } catch (err) {\n//       console.error('Error updating project:', err);\n//     }\n//   };\n\n//   const handleAddTeamMember = async () => {\n//     try {\n//       const response = await axios.post(`http://localhost:5000/api/project/${projectId}/team`, {\n//         userId: newTeamMember,\n//       });\n//       setTeamMembers([...teamMembers, response.data]); // Update team members\n//       setNewTeamMember('');\n//     } catch (err) {\n//       console.error('Error adding team member:', err);\n//     }\n//   };\n\n//   // Handle removing a team member\n//   const handleRemoveTeamMember = async (memberId) => {\n//     try {\n//       await axios.delete(`http://localhost:5000/api/project/${projectId}/team/${memberId}`);\n//       setTeamMembers(teamMembers.filter((member) => member._id !== memberId));\n//     } catch (err) {\n//       console.error('Error removing team member:', err);\n//     }\n//   };\n\n//   // Handle opening of the modal\n//   const openEditModal = () => {\n//     setIsEditing(true);\n//     document.body.classList.add('body-no-scroll'); // Disable scrolling\n//   };\n\n//   // Handle closing of the modal\n//   const closeEditModal = () => {\n//     setIsEditing(false);\n//     document.body.classList.remove('body-no-scroll'); // Re-enable scrolling\n//   };\n\n//   const openTeamModal = () => {\n//     setShowTeamModal(true);\n//   };\n\n//   // Close the modal\n//   const closeTeamModal = () => {\n//     setShowTeamModal(false);\n//   };\n//   if (!project) {\n//     return <div>Loading project details...</div>;\n//   }\n\n//   return (\n//     <div className=\"container mt-5\">\n//       <h1 className=\"text-center mb-4\" id=\"heading1\">Project Details</h1>\n\n//       {/* Project Overview Section */}\n//       <div className=\"card shadow-sm mb-4\">\n//         <div className=\"card-body\">\n//           <div className=\"d-flex justify-content-between\">\n//             <h2 className=\"card-title\">{project?.name}</h2>\n//             <button className=\"btn btn-primary\" onClick={openEditModal}>\n//               Edit\n//             </button>\n//           </div>\n//           <p className=\"card-text\">{project?.description}</p>\n//           <h4 className=\"card-title\">\n//             <pre style={{ fontFamily: 'inherit' }}>\n//               Start Date: {new Date(project.startDate).toLocaleDateString()}          <span style={{ color: 'red' }}>Due Date:</span> {new Date(project.endDate).toLocaleDateString()}\n//             </pre>\n//           </h4>\n\n//           <span className={`badge ${project?.status === 'Ongoing' ? 'bg-warning' : 'bg-success'}`}>\n//             {project?.status}\n//           </span>\n//         </div>\n//       </div>\n\n//       {/* Tasks Section */}\n//       <div className=\"card shadow-sm mb-4\">\n//         <div className=\"card-header d-flex justify-content-between align-items-center\">\n//           <h3>Tasks</h3>\n//           <button\n//             className=\"btn btn-outline-primary\"\n//             onClick={() => navigate(`/taskspage/${project._id}`)}\n//           >\n//             Manage\n//           </button>\n//         </div>\n\n// {isProjectTask &&      (\n//     <ul className=\"list-group list-group-flush\">\n//           {projectTasks.map((task) => (\n//             <li className=\"list-group-item d-flex justify-content-between align-items-center\" key={task._id}\n//             onClick={() => navigate(`/task-details/${task._id}`)} // Navigate when clicking the li element\n//             style={{ cursor: 'pointer' }} // Add pointer cursor for better UX  \n//             >\n//                 {task.name}\n//               <span className={`badge ${task.status === 'Completed' ? 'bg-success' : task.status === 'Ongoing' ? 'bg-warning' : 'bg-secondary'}`}>\n//                 {task.status}\n//               </span>\n//             </li>\n//           ))}\n//         </ul>\n// )}\n//       </div>\n\n//       <div className=\"card shadow-sm\">\n//         <div className=\"card-header d-flex justify-content-between align-items-center\">\n//           <h3>Team Members</h3>\n//           <button \n//             className=\"btn btn-outline-primary\" \n//             onClick={openTeamModal}\n//           >\n//             Manage\n//           </button>\n//         </div>\n//         {teamMembers.length > 0 && (\n//           <ul className=\"list-group list-group-flush\">\n//             {teamMembers.map((member) => (\n//               <li className=\"list-group-item d-flex justify-content-between align-items-center\" key={member._id}>\n//                 {member.user_id.name} - <span className=\"text-muted\">{member.role}</span>\n//                 <button className=\"btn btn-danger\" onClick={() => handleRemoveTeamMember(member._id)}>\n//                   Remove\n//                 </button>\n//               </li>\n//             ))}\n//           </ul>\n//         )}\n//       </div>\n\n//       {/* Modal for Managing Team Members */}\n//       {showTeamModal && (\n//         <div className=\"modal fade show d-block\" tabIndex=\"-1\">\n//           <div className=\"modal-dialog\">\n//             <div className=\"modal-content\">\n//               <div className=\"modal-header\">\n//                 <h5 className=\"modal-title\">Manage Team Members</h5>\n//                 <button type=\"button\" className=\"btn-close\" onClick={closeTeamModal}></button>\n//               </div>\n//               <div className=\"modal-body\">\n//                 <input\n//                   type=\"text\"\n//                   className=\"form-control\"\n//                   placeholder=\"Enter user ID\"\n//                   value={newTeamMember}\n//                   onChange={(e) => setNewTeamMember(e.target.value)}\n//                 />\n//               </div>\n//               <div className=\"modal-footer\">\n//                 <button className=\"btn btn-secondary\" onClick={closeTeamModal}>Close</button>\n//                 <button className=\"btn btn-primary\" onClick={handleAddTeamMember}>Add Member</button>\n//               </div>\n//             </div>\n//           </div>\n//         </div>\n//       )}\n//     </div>\n\n//       {/* Editable Form Modal (Backdrop) */}\n//       {isEditing && (\n//         <div className=\"backdrop\">\n//           <div className=\"modal-content p-4\">\n//             <h3>Edit Project Details</h3>\n//             <div className=\"form-group\">\n//               <label>Project Name</label>\n//               <input\n//                 type=\"text\"\n//                 className=\"form-control\"\n//                 name=\"name\"\n//                 value={editedProject.name}\n//                 onChange={handleInputChange}\n//               />\n//             </div>\n//             <div className=\"form-group\">\n//               <label>Description</label>\n//               <textarea\n//                 className=\"form-control\"\n//                 name=\"description\"\n//                 value={editedProject.description}\n//                 onChange={handleInputChange}\n//               />\n//             </div>\n//             <div className=\"form-group\">\n//               <label>Start Date</label>\n//               <input\n//                 type=\"date\"\n//                 className=\"form-control\"\n//                 name=\"startDate\"\n//                 value={new Date(editedProject.startDate).toISOString().substr(0, 10)}\n//                 onChange={handleInputChange}\n//               />\n//             </div>\n//             <div className=\"form-group\">\n//               <label>End Date</label>\n//               <input\n//                 type=\"date\"\n//                 className=\"form-control\"\n//                 name=\"endDate\"\n//                 value={new Date(editedProject.endDate).toISOString().substr(0, 10)}\n//                 onChange={handleInputChange}\n//               />\n//             </div>\n//             <div className=\"form-group\">\n//               <label>Status</label>\n//               <select\n//                 className=\"form-control\"\n//                 name=\"status\"\n//                 value={editedProject.status}\n//                 onChange={handleInputChange}\n//               >\n//                 <option value=\"Active\">Active</option>\n//                 <option value=\"Completed\">Completed</option>\n//               </select>\n//             </div>\n//             <div className=\"d-flex justify-content-end\">\n//               <button className=\"btn btn-secondary ms-3\" onClick={closeEditModal}>\n//                 Cancel\n//               </button>\n//               <button className=\"btn btn-primary ms-3\" onClick={handleSave}>\n//                 Save\n//               </button>\n//             </div>\n//           </div>\n//         </div>\n//       )}\n//     </div>\n//   );\n// }\n\n// export default ProjectDetails;\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport './ProjectDetails.css'; // Import custom CSS\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ProjectDetails() {\n  _s();\n  const {\n    projectId\n  } = useParams(); // Get projectId from URL\n  const [project, setProject] = useState(null);\n  const navigate = useNavigate();\n  const [projectTasks, setProjectTasks] = useState([]);\n  const [teamMembers, setTeamMembers] = useState([]);\n  const [isEditing, setIsEditing] = useState(false); // State for handling edit mode\n  const [editedProject, setEditedProject] = useState({});\n  const [newTeamMember, setNewTeamMember] = useState(''); // Input for adding a new team member\n  const [showTeamModal, setShowTeamModal] = useState(false); // Modal visibility\n\n  useEffect(() => {\n    const fetchProjectDetails = async () => {\n      try {\n        // Fetch project details, tasks, and team members\n        const response = await axios.get(`http://localhost:5000/api/project/${projectId}`);\n        const {\n          project,\n          tasks,\n          teamMembers\n        } = response.data;\n        setProjectTasks(tasks || []);\n        setTeamMembers(teamMembers || []);\n        setProject(project);\n        setEditedProject(project); // Set the editable state as the initial project data\n      } catch (err) {\n        console.error('Error fetching project details:', err);\n      }\n    };\n    fetchProjectDetails();\n  }, [projectId]);\n\n  // Handle input changes for the editable form\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setEditedProject({\n      ...editedProject,\n      [name]: value\n    });\n  };\n\n  // Function to save the updated project details\n  const handleSave = async () => {\n    try {\n      await axios.patch(`http://localhost:5000/api/project/${projectId}`, editedProject);\n      setProject(editedProject);\n      setIsEditing(false);\n    } catch (err) {\n      console.error('Error updating project:', err);\n    }\n  };\n  const handleAddTeamMember = async () => {\n    try {\n      const response = await axios.post(`http://localhost:5000/api/project/${projectId}/team`, {\n        userId: newTeamMember\n      });\n      setTeamMembers([...teamMembers, response.data]); // Update team members\n      setNewTeamMember('');\n    } catch (err) {\n      console.error('Error adding team member:', err);\n    }\n  };\n\n  // Handle removing a team member\n  const handleRemoveTeamMember = async memberId => {\n    try {\n      await axios.delete(`http://localhost:5000/api/project/${projectId}/team/${memberId}`);\n      setTeamMembers(teamMembers.filter(member => member._id !== memberId));\n    } catch (err) {\n      console.error('Error removing team member:', err);\n    }\n  };\n\n  // Handle opening of the modal\n  const openEditModal = () => {\n    setIsEditing(true);\n    document.body.classList.add('body-no-scroll'); // Disable scrolling\n  };\n\n  // Handle closing of the modal\n  const closeEditModal = () => {\n    setIsEditing(false);\n    document.body.classList.remove('body-no-scroll'); // Re-enable scrolling\n  };\n  const openTeamModal = () => {\n    setShowTeamModal(true);\n  };\n\n  // Close the modal\n  const closeTeamModal = () => {\n    setShowTeamModal(false);\n  };\n  if (!project) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading project details...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-center mb-4\",\n      id: \"heading1\",\n      children: \"Project Details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 402,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card shadow-sm mb-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex justify-content-between\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"card-title\",\n            children: project.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 408,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary\",\n            onClick: openEditModal,\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 409,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"card-text\",\n          children: project.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 413,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"card-title\",\n          children: /*#__PURE__*/_jsxDEV(\"pre\", {\n            style: {\n              fontFamily: 'inherit'\n            },\n            children: [\"Start Date: \", new Date(project.startDate).toLocaleDateString(), \"          \", /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                color: 'red'\n              },\n              children: \"Due Date:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 416,\n              columnNumber: 87\n            }, this), \" \", new Date(project.endDate).toLocaleDateString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 415,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 414,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: `badge ${project.status === 'Ongoing' ? 'bg-warning' : 'bg-success'}`,\n          children: project.status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 405,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card shadow-sm mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-header d-flex justify-content-between align-items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Tasks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 429,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-outline-primary\",\n          onClick: () => navigate(`/taskspage/${project._id}`),\n          children: \"Manage\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 430,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 428,\n        columnNumber: 9\n      }, this), projectTasks.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"list-group list-group-flush\",\n        children: projectTasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"list-group-item d-flex justify-content-between align-items-center\",\n          onClick: () => navigate(`/task-details/${task._id}`) // Navigate when clicking the li element\n          ,\n          style: {\n            cursor: 'pointer'\n          } // Add pointer cursor for better UX\n          ,\n          children: [task.name, /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `badge ${task.status === 'Completed' ? 'bg-success' : task.status === 'Ongoing' ? 'bg-warning' : 'bg-secondary'}`,\n            children: task.status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 448,\n            columnNumber: 17\n          }, this)]\n        }, task._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 441,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 439,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 427,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card shadow-sm\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-header d-flex justify-content-between align-items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Team Members\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 460,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-outline-primary\",\n          onClick: openTeamModal,\n          children: \"Manage\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 461,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 459,\n        columnNumber: 9\n      }, this), teamMembers.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"list-group list-group-flush\",\n        children: teamMembers.map(member => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"list-group-item d-flex justify-content-between align-items-center\",\n          children: [member.user_id.name, \" - \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-muted\",\n            children: member.role\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 472,\n            columnNumber: 41\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-danger\",\n            onClick: () => handleRemoveTeamMember(member._id),\n            children: \"Remove\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 473,\n            columnNumber: 17\n          }, this)]\n        }, member._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 471,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 469,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 458,\n      columnNumber: 7\n    }, this), showTeamModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal fade show d-block\",\n      tabIndex: \"-1\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-dialog\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"modal-title\",\n              children: \"Manage Team Members\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 488,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"btn-close\",\n              onClick: closeTeamModal\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 489,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 487,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-body\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              placeholder: \"Enter user ID\",\n              value: newTeamMember,\n              onChange: e => setNewTeamMember(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 492,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 491,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-footer\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-secondary\",\n              onClick: closeTeamModal,\n              children: \"Close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 501,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-primary\",\n              onClick: handleAddTeamMember,\n              children: \"Add Member\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 502,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 500,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 486,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 485,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 484,\n      columnNumber: 9\n    }, this), isEditing && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"backdrop\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content p-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Edit Project Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 513,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Project Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 515,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            name: \"name\",\n            value: editedProject.name,\n            onChange: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 516,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 514,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 525,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"form-control\",\n            name: \"description\",\n            value: editedProject.description,\n            onChange: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 526,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 524,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Start Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 534,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            className: \"form-control\",\n            name: \"startDate\",\n            value: new Date(editedProject.startDate).toISOString().substring(0, 10) // Adjust for date input\n            ,\n            onChange: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 535,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 533,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"End Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 544,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            className: \"form-control\",\n            name: \"endDate\",\n            value: new Date(editedProject.endDate).toISOString().substring(0, 10) // Adjust for date input\n            ,\n            onChange: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 545,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 543,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 554,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"form-control\",\n            name: \"status\",\n            value: editedProject.status,\n            onChange: handleInputChange,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Active\",\n              children: \"Active\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 561,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Completed\",\n              children: \"Completed\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 562,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 555,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 553,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-success\",\n            onClick: handleSave,\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 567,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-secondary ml-2\",\n            onClick: closeEditModal,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 568,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 566,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 512,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 511,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 401,\n    columnNumber: 5\n  }, this);\n}\n_s(ProjectDetails, \"DvLi0eE2mARtshG/2kYPdIdDiMU=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = ProjectDetails;\nexport default ProjectDetails;\nvar _c;\n$RefreshReg$(_c, \"ProjectDetails\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","useParams","axios","jsxDEV","_jsxDEV","ProjectDetails","_s","projectId","project","setProject","navigate","projectTasks","setProjectTasks","teamMembers","setTeamMembers","isEditing","setIsEditing","editedProject","setEditedProject","newTeamMember","setNewTeamMember","showTeamModal","setShowTeamModal","fetchProjectDetails","response","get","tasks","data","err","console","error","handleInputChange","e","name","value","target","handleSave","patch","handleAddTeamMember","post","userId","handleRemoveTeamMember","memberId","delete","filter","member","_id","openEditModal","document","body","classList","add","closeEditModal","remove","openTeamModal","closeTeamModal","children","fileName","_jsxFileName","lineNumber","columnNumber","className","id","onClick","description","style","fontFamily","Date","startDate","toLocaleDateString","color","endDate","status","length","map","task","cursor","user_id","role","tabIndex","type","placeholder","onChange","toISOString","substring","_c","$RefreshReg$"],"sources":["F:/Project-Management-App/frontend/src/components/ProjectDetails.js"],"sourcesContent":["// import 'bootstrap/dist/css/bootstrap.min.css';\r\n// import React, { useEffect, useState } from 'react';\r\n// import { useNavigate, useParams } from 'react-router-dom';\r\n// import axios from 'axios';\r\n// import './ProjectDetails.css'; // Import custom CSS\r\n\r\n// function ProjectDetails() {\r\n//   const { projectId } = useParams(); // Get projectId from URL\r\n//   const [project, setProject] = useState(null);\r\n//   const navigate = useNavigate();\r\n//   const [isProjectTask,setisProjectTask]=useState(false);\r\n//   const [projectTasks, setProjectTasks] = useState([]);\r\n//   const [isTeamMembers,setisTeamMembers]=useState(false);\r\n//   const [teamMembers, setTeamMembers] = useState([]);\r\n//   const [isEditing, setIsEditing] = useState(false); // State for handling edit mode\r\n//   const [editedProject, setEditedProject] = useState({});\r\n//   const [newTeamMember, setNewTeamMember] = useState(''); // Input for adding a new team member\r\n//   const [showTeamModal, setShowTeamModal] = useState(false); // Modal visibility\r\n\r\n//   useEffect(() => {\r\n//     const fetchProjectDetails = async () => {\r\n//       try {\r\n//         // Fetch project details, tasks, and team members\r\n//         const response = await axios.get(`http://localhost:5000/api/project/${projectId}`);\r\n//         let{ project, tasks,teamMembers } = response.data;\r\n//         teamMembers=project.teamMembers;\r\n//         console.log(project);\r\n//         console.log(tasks);\r\n//         console.log(teamMembers);\r\n\r\n//         if(tasks){\r\n//           setProjectTasks(tasks);\r\n//           setisProjectTask(true);\r\n//         }\r\n//         setProject(project);\r\n//         if(teamMembers){\r\n          \r\n//           setisTeamMembers(true);\r\n//         }\r\n//         setTeamMembers(teamMembers||[]);\r\n//         setEditedProject(project);\r\n//       } catch (err) {\r\n//         console.error('Error fetching project details:', err);\r\n//       }\r\n//     };\r\n\r\n//     fetchProjectDetails();\r\n//   }, [projectId]);\r\n\r\n//   // Handle input changes for the editable form\r\n//   const handleInputChange = (e) => {\r\n//     const { name, value } = e.target;\r\n//     setEditedProject({ ...editedProject, [name]: value });\r\n//   };\r\n\r\n//   // Function to save the updated project details\r\n\r\n//   const handleSave = async () => {\r\n//     try {\r\n\r\n//       await axios.patch(`http://localhost:5000/api/project/${projectId}`, editedProject);\r\n//       setProject(editedProject);\r\n//       setIsEditing(false);\r\n//     } catch (err) {\r\n//       console.error('Error updating project:', err);\r\n//     }\r\n//   };\r\n\r\n//   const handleAddTeamMember = async () => {\r\n//     try {\r\n//       const response = await axios.post(`http://localhost:5000/api/project/${projectId}/team`, {\r\n//         userId: newTeamMember,\r\n//       });\r\n//       setTeamMembers([...teamMembers, response.data]); // Update team members\r\n//       setNewTeamMember('');\r\n//     } catch (err) {\r\n//       console.error('Error adding team member:', err);\r\n//     }\r\n//   };\r\n\r\n//   // Handle removing a team member\r\n//   const handleRemoveTeamMember = async (memberId) => {\r\n//     try {\r\n//       await axios.delete(`http://localhost:5000/api/project/${projectId}/team/${memberId}`);\r\n//       setTeamMembers(teamMembers.filter((member) => member._id !== memberId));\r\n//     } catch (err) {\r\n//       console.error('Error removing team member:', err);\r\n//     }\r\n//   };\r\n\r\n//   // Handle opening of the modal\r\n//   const openEditModal = () => {\r\n//     setIsEditing(true);\r\n//     document.body.classList.add('body-no-scroll'); // Disable scrolling\r\n//   };\r\n\r\n//   // Handle closing of the modal\r\n//   const closeEditModal = () => {\r\n//     setIsEditing(false);\r\n//     document.body.classList.remove('body-no-scroll'); // Re-enable scrolling\r\n//   };\r\n\r\n//   const openTeamModal = () => {\r\n//     setShowTeamModal(true);\r\n//   };\r\n\r\n//   // Close the modal\r\n//   const closeTeamModal = () => {\r\n//     setShowTeamModal(false);\r\n//   };\r\n//   if (!project) {\r\n//     return <div>Loading project details...</div>;\r\n//   }\r\n\r\n//   return (\r\n//     <div className=\"container mt-5\">\r\n//       <h1 className=\"text-center mb-4\" id=\"heading1\">Project Details</h1>\r\n\r\n//       {/* Project Overview Section */}\r\n//       <div className=\"card shadow-sm mb-4\">\r\n//         <div className=\"card-body\">\r\n//           <div className=\"d-flex justify-content-between\">\r\n//             <h2 className=\"card-title\">{project?.name}</h2>\r\n//             <button className=\"btn btn-primary\" onClick={openEditModal}>\r\n//               Edit\r\n//             </button>\r\n//           </div>\r\n//           <p className=\"card-text\">{project?.description}</p>\r\n//           <h4 className=\"card-title\">\r\n//             <pre style={{ fontFamily: 'inherit' }}>\r\n//               Start Date: {new Date(project.startDate).toLocaleDateString()}          <span style={{ color: 'red' }}>Due Date:</span> {new Date(project.endDate).toLocaleDateString()}\r\n//             </pre>\r\n//           </h4>\r\n          \r\n//           <span className={`badge ${project?.status === 'Ongoing' ? 'bg-warning' : 'bg-success'}`}>\r\n//             {project?.status}\r\n//           </span>\r\n//         </div>\r\n//       </div>\r\n\r\n//       {/* Tasks Section */}\r\n//       <div className=\"card shadow-sm mb-4\">\r\n//         <div className=\"card-header d-flex justify-content-between align-items-center\">\r\n//           <h3>Tasks</h3>\r\n//           <button\r\n//             className=\"btn btn-outline-primary\"\r\n//             onClick={() => navigate(`/taskspage/${project._id}`)}\r\n//           >\r\n//             Manage\r\n//           </button>\r\n//         </div>\r\n\r\n// {isProjectTask &&      (\r\n//     <ul className=\"list-group list-group-flush\">\r\n//           {projectTasks.map((task) => (\r\n//             <li className=\"list-group-item d-flex justify-content-between align-items-center\" key={task._id}\r\n//             onClick={() => navigate(`/task-details/${task._id}`)} // Navigate when clicking the li element\r\n//             style={{ cursor: 'pointer' }} // Add pointer cursor for better UX  \r\n//             >\r\n//                 {task.name}\r\n//               <span className={`badge ${task.status === 'Completed' ? 'bg-success' : task.status === 'Ongoing' ? 'bg-warning' : 'bg-secondary'}`}>\r\n//                 {task.status}\r\n//               </span>\r\n//             </li>\r\n//           ))}\r\n//         </ul>\r\n// )}\r\n//       </div>\r\n\r\n//       <div className=\"card shadow-sm\">\r\n//         <div className=\"card-header d-flex justify-content-between align-items-center\">\r\n//           <h3>Team Members</h3>\r\n//           <button \r\n//             className=\"btn btn-outline-primary\" \r\n//             onClick={openTeamModal}\r\n//           >\r\n//             Manage\r\n//           </button>\r\n//         </div>\r\n//         {teamMembers.length > 0 && (\r\n//           <ul className=\"list-group list-group-flush\">\r\n//             {teamMembers.map((member) => (\r\n//               <li className=\"list-group-item d-flex justify-content-between align-items-center\" key={member._id}>\r\n//                 {member.user_id.name} - <span className=\"text-muted\">{member.role}</span>\r\n//                 <button className=\"btn btn-danger\" onClick={() => handleRemoveTeamMember(member._id)}>\r\n//                   Remove\r\n//                 </button>\r\n//               </li>\r\n//             ))}\r\n//           </ul>\r\n//         )}\r\n//       </div>\r\n\r\n//       {/* Modal for Managing Team Members */}\r\n//       {showTeamModal && (\r\n//         <div className=\"modal fade show d-block\" tabIndex=\"-1\">\r\n//           <div className=\"modal-dialog\">\r\n//             <div className=\"modal-content\">\r\n//               <div className=\"modal-header\">\r\n//                 <h5 className=\"modal-title\">Manage Team Members</h5>\r\n//                 <button type=\"button\" className=\"btn-close\" onClick={closeTeamModal}></button>\r\n//               </div>\r\n//               <div className=\"modal-body\">\r\n//                 <input\r\n//                   type=\"text\"\r\n//                   className=\"form-control\"\r\n//                   placeholder=\"Enter user ID\"\r\n//                   value={newTeamMember}\r\n//                   onChange={(e) => setNewTeamMember(e.target.value)}\r\n//                 />\r\n//               </div>\r\n//               <div className=\"modal-footer\">\r\n//                 <button className=\"btn btn-secondary\" onClick={closeTeamModal}>Close</button>\r\n//                 <button className=\"btn btn-primary\" onClick={handleAddTeamMember}>Add Member</button>\r\n//               </div>\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n \r\n\r\n//       {/* Editable Form Modal (Backdrop) */}\r\n//       {isEditing && (\r\n//         <div className=\"backdrop\">\r\n//           <div className=\"modal-content p-4\">\r\n//             <h3>Edit Project Details</h3>\r\n//             <div className=\"form-group\">\r\n//               <label>Project Name</label>\r\n//               <input\r\n//                 type=\"text\"\r\n//                 className=\"form-control\"\r\n//                 name=\"name\"\r\n//                 value={editedProject.name}\r\n//                 onChange={handleInputChange}\r\n//               />\r\n//             </div>\r\n//             <div className=\"form-group\">\r\n//               <label>Description</label>\r\n//               <textarea\r\n//                 className=\"form-control\"\r\n//                 name=\"description\"\r\n//                 value={editedProject.description}\r\n//                 onChange={handleInputChange}\r\n//               />\r\n//             </div>\r\n//             <div className=\"form-group\">\r\n//               <label>Start Date</label>\r\n//               <input\r\n//                 type=\"date\"\r\n//                 className=\"form-control\"\r\n//                 name=\"startDate\"\r\n//                 value={new Date(editedProject.startDate).toISOString().substr(0, 10)}\r\n//                 onChange={handleInputChange}\r\n//               />\r\n//             </div>\r\n//             <div className=\"form-group\">\r\n//               <label>End Date</label>\r\n//               <input\r\n//                 type=\"date\"\r\n//                 className=\"form-control\"\r\n//                 name=\"endDate\"\r\n//                 value={new Date(editedProject.endDate).toISOString().substr(0, 10)}\r\n//                 onChange={handleInputChange}\r\n//               />\r\n//             </div>\r\n//             <div className=\"form-group\">\r\n//               <label>Status</label>\r\n//               <select\r\n//                 className=\"form-control\"\r\n//                 name=\"status\"\r\n//                 value={editedProject.status}\r\n//                 onChange={handleInputChange}\r\n//               >\r\n//                 <option value=\"Active\">Active</option>\r\n//                 <option value=\"Completed\">Completed</option>\r\n//               </select>\r\n//             </div>\r\n//             <div className=\"d-flex justify-content-end\">\r\n//               <button className=\"btn btn-secondary ms-3\" onClick={closeEditModal}>\r\n//                 Cancel\r\n//               </button>\r\n//               <button className=\"btn btn-primary ms-3\" onClick={handleSave}>\r\n//                 Save\r\n//               </button>\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default ProjectDetails;\r\n\r\n\r\n\r\n\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport './ProjectDetails.css'; // Import custom CSS\r\n\r\nfunction ProjectDetails() {\r\n  const { projectId } = useParams(); // Get projectId from URL\r\n  const [project, setProject] = useState(null);\r\n  const navigate = useNavigate();\r\n  const [projectTasks, setProjectTasks] = useState([]);\r\n  const [teamMembers, setTeamMembers] = useState([]);\r\n  const [isEditing, setIsEditing] = useState(false); // State for handling edit mode\r\n  const [editedProject, setEditedProject] = useState({});\r\n  const [newTeamMember, setNewTeamMember] = useState(''); // Input for adding a new team member\r\n  const [showTeamModal, setShowTeamModal] = useState(false); // Modal visibility\r\n\r\n  useEffect(() => {\r\n    const fetchProjectDetails = async () => {\r\n      try {\r\n        // Fetch project details, tasks, and team members\r\n        const response = await axios.get(`http://localhost:5000/api/project/${projectId}`);\r\n        const { project, tasks, teamMembers } = response.data;\r\n\r\n        setProjectTasks(tasks || []);\r\n        setTeamMembers(teamMembers || []);\r\n        setProject(project);\r\n        setEditedProject(project); // Set the editable state as the initial project data\r\n      } catch (err) {\r\n        console.error('Error fetching project details:', err);\r\n      }\r\n    };\r\n\r\n    fetchProjectDetails();\r\n  }, [projectId]);\r\n\r\n  // Handle input changes for the editable form\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setEditedProject({ ...editedProject, [name]: value });\r\n  };\r\n\r\n  // Function to save the updated project details\r\n  const handleSave = async () => {\r\n    try {\r\n      await axios.patch(`http://localhost:5000/api/project/${projectId}`, editedProject);\r\n      setProject(editedProject);\r\n      setIsEditing(false);\r\n    } catch (err) {\r\n      console.error('Error updating project:', err);\r\n    }\r\n  };\r\n\r\n  const handleAddTeamMember = async () => {\r\n    try {\r\n      const response = await axios.post(`http://localhost:5000/api/project/${projectId}/team`, {\r\n        userId: newTeamMember,\r\n      });\r\n      setTeamMembers([...teamMembers, response.data]); // Update team members\r\n      setNewTeamMember('');\r\n    } catch (err) {\r\n      console.error('Error adding team member:', err);\r\n    }\r\n  };\r\n\r\n  // Handle removing a team member\r\n  const handleRemoveTeamMember = async (memberId) => {\r\n    try {\r\n      await axios.delete(`http://localhost:5000/api/project/${projectId}/team/${memberId}`);\r\n      setTeamMembers(teamMembers.filter((member) => member._id !== memberId));\r\n    } catch (err) {\r\n      console.error('Error removing team member:', err);\r\n    }\r\n  };\r\n\r\n  // Handle opening of the modal\r\n  const openEditModal = () => {\r\n    setIsEditing(true);\r\n    document.body.classList.add('body-no-scroll'); // Disable scrolling\r\n  };\r\n\r\n  // Handle closing of the modal\r\n  const closeEditModal = () => {\r\n    setIsEditing(false);\r\n    document.body.classList.remove('body-no-scroll'); // Re-enable scrolling\r\n  };\r\n\r\n  const openTeamModal = () => {\r\n    setShowTeamModal(true);\r\n  };\r\n\r\n  // Close the modal\r\n  const closeTeamModal = () => {\r\n    setShowTeamModal(false);\r\n  };\r\n\r\n  if (!project) {\r\n    return <div>Loading project details...</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <h1 className=\"text-center mb-4\" id=\"heading1\">Project Details</h1>\r\n\r\n      {/* Project Overview Section */}\r\n      <div className=\"card shadow-sm mb-4\">\r\n        <div className=\"card-body\">\r\n          <div className=\"d-flex justify-content-between\">\r\n            <h2 className=\"card-title\">{project.name}</h2>\r\n            <button className=\"btn btn-primary\" onClick={openEditModal}>\r\n              Edit\r\n            </button>\r\n          </div>\r\n          <p className=\"card-text\">{project.description}</p>\r\n          <h4 className=\"card-title\">\r\n            <pre style={{ fontFamily: 'inherit' }}>\r\n              Start Date: {new Date(project.startDate).toLocaleDateString()}          <span style={{ color: 'red' }}>Due Date:</span> {new Date(project.endDate).toLocaleDateString()}\r\n            </pre>\r\n          </h4>\r\n          \r\n          <span className={`badge ${project.status === 'Ongoing' ? 'bg-warning' : 'bg-success'}`}>\r\n            {project.status}\r\n          </span>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Tasks Section */}\r\n      <div className=\"card shadow-sm mb-4\">\r\n        <div className=\"card-header d-flex justify-content-between align-items-center\">\r\n          <h3>Tasks</h3>\r\n          <button\r\n            className=\"btn btn-outline-primary\"\r\n            onClick={() => navigate(`/taskspage/${project._id}`)}\r\n          >\r\n            Manage\r\n          </button>\r\n        </div>\r\n\r\n        {projectTasks.length > 0 && (\r\n          <ul className=\"list-group list-group-flush\">\r\n            {projectTasks.map((task) => (\r\n              <li\r\n                className=\"list-group-item d-flex justify-content-between align-items-center\"\r\n                key={task._id}\r\n                onClick={() => navigate(`/task-details/${task._id}`)} // Navigate when clicking the li element\r\n                style={{ cursor: 'pointer' }} // Add pointer cursor for better UX\r\n              >\r\n                {task.name}\r\n                <span className={`badge ${task.status === 'Completed' ? 'bg-success' : task.status === 'Ongoing' ? 'bg-warning' : 'bg-secondary'}`}>\r\n                  {task.status}\r\n                </span>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        )}\r\n      </div>\r\n\r\n      {/* Team Members Section */}\r\n      <div className=\"card shadow-sm\">\r\n        <div className=\"card-header d-flex justify-content-between align-items-center\">\r\n          <h3>Team Members</h3>\r\n          <button \r\n            className=\"btn btn-outline-primary\" \r\n            onClick={openTeamModal}\r\n          >\r\n            Manage\r\n          </button>\r\n        </div>\r\n        {teamMembers.length > 0 && (\r\n          <ul className=\"list-group list-group-flush\">\r\n            {teamMembers.map((member) => (\r\n              <li className=\"list-group-item d-flex justify-content-between align-items-center\" key={member._id}>\r\n                {member.user_id.name} - <span className=\"text-muted\">{member.role}</span>\r\n                <button className=\"btn btn-danger\" onClick={() => handleRemoveTeamMember(member._id)}>\r\n                  Remove\r\n                </button>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        )}\r\n      </div>\r\n\r\n      {/* Modal for Managing Team Members */}\r\n      {showTeamModal && (\r\n        <div className=\"modal fade show d-block\" tabIndex=\"-1\">\r\n          <div className=\"modal-dialog\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h5 className=\"modal-title\">Manage Team Members</h5>\r\n                <button type=\"button\" className=\"btn-close\" onClick={closeTeamModal}></button>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Enter user ID\"\r\n                  value={newTeamMember}\r\n                  onChange={(e) => setNewTeamMember(e.target.value)}\r\n                />\r\n              </div>\r\n              <div className=\"modal-footer\">\r\n                <button className=\"btn btn-secondary\" onClick={closeTeamModal}>Close</button>\r\n                <button className=\"btn btn-primary\" onClick={handleAddTeamMember}>Add Member</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Editable Form Modal (Backdrop) */}\r\n      {isEditing && (\r\n        <div className=\"backdrop\">\r\n          <div className=\"modal-content p-4\">\r\n            <h3>Edit Project Details</h3>\r\n            <div className=\"form-group\">\r\n              <label>Project Name</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"name\"\r\n                value={editedProject.name}\r\n                onChange={handleInputChange}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Description</label>\r\n              <textarea\r\n                className=\"form-control\"\r\n                name=\"description\"\r\n                value={editedProject.description}\r\n                onChange={handleInputChange}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Start Date</label>\r\n              <input\r\n                type=\"date\"\r\n                className=\"form-control\"\r\n                name=\"startDate\"\r\n                value={new Date(editedProject.startDate).toISOString().substring(0, 10)} // Adjust for date input\r\n                onChange={handleInputChange}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>End Date</label>\r\n              <input\r\n                type=\"date\"\r\n                className=\"form-control\"\r\n                name=\"endDate\"\r\n                value={new Date(editedProject.endDate).toISOString().substring(0, 10)} // Adjust for date input\r\n                onChange={handleInputChange}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Status</label>\r\n              <select\r\n                className=\"form-control\"\r\n                name=\"status\"\r\n                value={editedProject.status}\r\n                onChange={handleInputChange}\r\n              >\r\n                <option value=\"Active\">Active</option>\r\n                <option value=\"Completed\">Completed</option>\r\n              </select>\r\n            </div>\r\n\r\n            <div className=\"mt-3\">\r\n              <button className=\"btn btn-success\" onClick={handleSave}>Save</button>\r\n              <button className=\"btn btn-secondary ml-2\" onClick={closeEditModal}>Cancel</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProjectDetails;\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}