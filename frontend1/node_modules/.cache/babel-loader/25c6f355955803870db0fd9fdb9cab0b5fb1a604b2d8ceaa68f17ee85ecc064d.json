{"ast":null,"code":"var _jsxFileName = \"F:\\\\Project-Management-App\\\\frontend\\\\src\\\\components\\\\TaskDetails.js\",\n  _s = $RefreshSig$();\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport './TaskDetails.css'; // Add your custom styles\nimport { useAuth } from \"../AuthContext\"; // Import your AuthContext to get the logged-in user\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskDetails = () => {\n  _s();\n  const {\n    taskId\n  } = useParams(); // Get the task ID from the route\n  const [task, setTask] = useState(null); // State to hold task details\n  const {\n    user\n  } = useAuth(); // Get the current user from the auth context\n  const [file, setFile] = useState(null); // File state for attachments\n\n  // Fetch task details from the backend when the component mounts\n  useEffect(() => {\n    const fetchTaskDetails = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        const response = await axios.get(`http://localhost:5000/api/task/${taskId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          } // Send token for auth\n        });\n        setTask(response.data.task); // Set the fetched task\n        console.log(\"Task details:\", response.data.task);\n      } catch (error) {\n        console.error(\"Error fetching task details:\", error);\n      }\n    };\n    fetchTaskDetails();\n  }, [taskId]);\n\n  // Handle marking the task as done\n  const handleMarkAsDone = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      await axios.patch(`http://localhost:5000/api/task/${taskId}`, {\n        status: 'Completed'\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setTask(prevTask => ({\n        ...prevTask,\n        status: 'Completed'\n      })); // Update task status in UI\n    } catch (error) {\n      console.error(\"Error marking task as done:\", error);\n    }\n  };\n\n  // Handle file selection\n  const handleFileChange = e => {\n    setFile(e.target.files[0]); // Set the selected file\n  };\n\n  // Submit the file to the backend\n  // const handleFileUpload = async () => {\n  //   if (!file) return;\n\n  //   const formData = new FormData();\n  //   formData.append('file', file);\n\n  //   try {\n  //     const token = localStorage.getItem('token');\n  //     await axios.post(`http://localhost:5000/api/task/${taskId}/upload`, formData, {\n  //       headers: {\n  //         Authorization: `Bearer ${token}`,\n  //         'Content-Type': 'multipart/form-data' // Important for file uploads\n  //       }\n  //     });\n  //     alert('File uploaded successfully!');\n  //     setFile(null); // Clear the file after upload\n  //   } catch (error) {\n  //     console.error(\"Error uploading file:\", error);\n  //   }\n  //};\n\n  if (!task) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading task details...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 21\n  }, this); // Show a loading message if task is not loaded yet\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container tasks-page mt-4\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card task-detail-card mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-header d-flex justify-content-between align-items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: task.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), task.status != \"Approved\" && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-success\",\n          onClick: handleMarkAsDone,\n          children: \"Mark as Done\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Description:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 14\n          }, this), \" \", task.description]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Status:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `badge ${task.status === 'Ongoing' ? 'bg-warning' : 'bg-success'}`,\n            children: task.status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Due Date:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 14\n          }, this), \" \", new Date(task.due_date).toLocaleDateString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Assigned To:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 14\n          }, this), \" \", task.assignedTo && task.assignedTo.map(user => user.name).join(', ')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, taskId, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskDetails, \"wm7MpH1V7QkkT24awM4KcpMgeDM=\", false, function () {\n  return [useParams, useAuth];\n});\n_c = TaskDetails;\nexport default TaskDetails;\nvar _c;\n$RefreshReg$(_c, \"TaskDetails\");","map":{"version":3,"names":["React","useEffect","useState","useParams","axios","useAuth","jsxDEV","_jsxDEV","TaskDetails","_s","taskId","task","setTask","user","file","setFile","fetchTaskDetails","token","localStorage","getItem","response","get","headers","Authorization","data","console","log","error","handleMarkAsDone","patch","status","prevTask","handleFileChange","e","target","files","children","fileName","_jsxFileName","lineNumber","columnNumber","className","name","onClick","description","Date","due_date","toLocaleDateString","assignedTo","map","join","_c","$RefreshReg$"],"sources":["F:/Project-Management-App/frontend/src/components/TaskDetails.js"],"sourcesContent":["\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport './TaskDetails.css'; // Add your custom styles\r\nimport { useAuth } from \"../AuthContext\"; // Import your AuthContext to get the logged-in user\r\n\r\nconst TaskDetails = () => {\r\n  const { taskId } = useParams(); // Get the task ID from the route\r\n  const [task, setTask] = useState(null); // State to hold task details\r\n  const { user } = useAuth(); // Get the current user from the auth context\r\n  const [file, setFile] = useState(null); // File state for attachments\r\n\r\n  // Fetch task details from the backend when the component mounts\r\n  useEffect(() => {\r\n    const fetchTaskDetails = async () => {\r\n      try {\r\n        const token = localStorage.getItem('token');\r\n        const response = await axios.get(`http://localhost:5000/api/task/${taskId}`, {\r\n          headers: { Authorization: `Bearer ${token}` } // Send token for auth\r\n        });\r\n        setTask(response.data.task); // Set the fetched task\r\n        console.log(\"Task details:\", response.data.task);\r\n      } catch (error) {\r\n        console.error(\"Error fetching task details:\", error);\r\n      }\r\n    };\r\n\r\n    fetchTaskDetails();\r\n  }, [taskId]);\r\n\r\n  \r\n  // Handle marking the task as done\r\n  const handleMarkAsDone = async () => {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      await axios.patch(`http://localhost:5000/api/task/${taskId}`, { status: 'Completed' }, {\r\n        headers: { Authorization: `Bearer ${token}` }\r\n      });\r\n      setTask((prevTask) => ({ ...prevTask, status: 'Completed' })); // Update task status in UI\r\n    } catch (error) {\r\n      console.error(\"Error marking task as done:\", error);\r\n    }\r\n  };\r\n\r\n  // Handle file selection\r\n  const handleFileChange = (e) => {\r\n    setFile(e.target.files[0]); // Set the selected file\r\n  };\r\n\r\n  // Submit the file to the backend\r\n  // const handleFileUpload = async () => {\r\n  //   if (!file) return;\r\n\r\n  //   const formData = new FormData();\r\n  //   formData.append('file', file);\r\n\r\n  //   try {\r\n  //     const token = localStorage.getItem('token');\r\n  //     await axios.post(`http://localhost:5000/api/task/${taskId}/upload`, formData, {\r\n  //       headers: {\r\n  //         Authorization: `Bearer ${token}`,\r\n  //         'Content-Type': 'multipart/form-data' // Important for file uploads\r\n  //       }\r\n  //     });\r\n  //     alert('File uploaded successfully!');\r\n  //     setFile(null); // Clear the file after upload\r\n  //   } catch (error) {\r\n  //     console.error(\"Error uploading file:\", error);\r\n  //   }\r\n  //};\r\n\r\n  if (!task) return <p>Loading task details...</p>; // Show a loading message if task is not loaded yet\r\n\r\n  return (\r\n    <div className=\"container tasks-page mt-4\">\r\n      <div key={taskId} className=\"card task-detail-card mb-4\">\r\n        <div className=\"card-header d-flex justify-content-between align-items-center\">\r\n          <h2>{task.name}</h2>\r\n          {task.status!=\"Approved\" &&\r\n          <button className=\"btn btn-success\" onClick={handleMarkAsDone}>\r\n            Mark as Done\r\n          </button>\r\n          }\r\n        </div>\r\n        <div className=\"card-body\">\r\n          <p><strong>Description:</strong> {task.description}</p>\r\n          <p><strong>Status:</strong> \r\n            <span className={`badge ${task.status === 'Ongoing' ? 'bg-warning' : 'bg-success'}`}>\r\n              {task.status}\r\n            </span>\r\n          </p>\r\n          <p><strong>Due Date:</strong> {new Date(task.due_date).toLocaleDateString()}</p>\r\n          <p><strong>Assigned To:</strong> {task.assignedTo && task.assignedTo.map(user => user.name).join(', ')}</p>\r\n\r\n          {/* File upload section\r\n          <div className=\"mb-3\">\r\n            <input type=\"file\" onChange={handleFileChange} />\r\n            <button className=\"btn btn-primary mt-2\" onClick={handleFileUpload}>\r\n              Upload File\r\n            </button>\r\n          </div>\r\n\r\n          {/* Attachments list */}\r\n          {/* {task.attachments && task.attachments.length > 0 && (\r\n            <div>\r\n              <h5>Attachments</h5>\r\n              <ul className=\"list-group\">\r\n                {task.attachments.map((attachment, index) => (\r\n                  <li key={index} className=\"list-group-item\">\r\n                    <a href={attachment.url} target=\"_blank\" rel=\"noopener noreferrer\">{attachment.name}</a>\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            </div>\r\n          )} */}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TaskDetails;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}