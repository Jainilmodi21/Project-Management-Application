{"ast":null,"code":"var _jsxFileName = \"F:\\\\Project-Management-App\\\\frontend\\\\src\\\\components\\\\TasksPage.js\",\n  _s = $RefreshSig$();\nimport 'bootstrap/dist/css/bootstrap.min.css'; // Bootstrap styles\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom'; // For navigation\nimport axios from 'axios'; // Import axios for making HTTP requests\nimport './TasksPage.css'; // Custom styles\nimport { useAuth } from \"../AuthContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TasksPage = () => {\n  _s();\n  const navigate = useNavigate(); // To navigate programmatically\n  const [projects, setProjects] = useState([]); // State for projects where user is a team member\n  const {\n    user\n  } = useAuth(); // Auth context to get the current user\n  const [showTaskForm, setShowTaskForm] = useState({}); // Control task form visibility for each project\n  const [newTask, setNewTask] = useState({\n    name: '',\n    description: '',\n    status: 'Ongoing',\n    due_date: '',\n    assignedTo: []\n  });\n  const [teamMembers, setTeamMembers] = useState([]); // Store team members for the assigned field\n\n  // Fetch projects and tasks when the component mounts\n  useEffect(() => {\n    const fetchProjectsAndTasks = async () => {\n      try {\n        if (!user) {\n          console.log(\"User is not logged in.\");\n          return; // Exit if user is not logged in\n        }\n        console.log(user);\n        const token = localStorage.getItem('token'); // Fetch token from storage\n        const response = await axios.get(`http://localhost:5000/api/user/${user.id}`, {\n          headers: {\n            Authorization: `Bearer ${token}` // Pass token in the Authorization header\n          }\n        });\n        const fetchedProjects = response.data.user.projects;\n        setProjects(fetchedProjects); // Set the projects state\n      } catch (error) {\n        console.error(\"Error fetching projects or tasks:\", error);\n      }\n    };\n    fetchProjectsAndTasks();\n  }, [user]);\n\n  // Handle adding a new task\n  const handleAddTask = async projectId => {\n    try {\n      console.log(\"Creating task with data:\", newTask);\n      const response = await axios.post(`http://localhost:5000/api/task/${projectId}`, newTask);\n      setProjects(prevProjects => prevProjects.map(project => project._id === projectId ? {\n        ...project,\n        tasks: [...project.tasks, response.data]\n      } : project));\n      setShowTaskForm(prev => ({\n        ...prev,\n        [projectId]: false\n      })); // Hide the task form after adding the task\n      setNewTask({\n        name: '',\n        description: '',\n        status: 'Ongoing',\n        due_date: '',\n        assignedTo: []\n      }); // Reset the task form\n    } catch (error) {\n      console.error(\"Error adding task:\", error);\n    }\n  };\n\n  // Function to remove a task\n  const handleRemoveTask = async (taskId, projectId) => {\n    try {\n      await axios.delete(`http://localhost:5000/api/task/${taskId}`);\n      setProjects(prevProjects => prevProjects.map(project => project._id === projectId ? {\n        ...project,\n        tasks: project.tasks.filter(task => task._id !== taskId)\n      } : project));\n    } catch (error) {\n      console.error(\"Error removing task:\", error);\n    }\n  };\n\n  // Fetch team members for a project\n  const fetchTeamMembers = async projectId => {\n    try {\n      const response = await axios.get(`http://localhost:5000/api/project/${projectId}`);\n      setTeamMembers(response.data.teamMembers); // Set the list of team members\n    } catch (error) {\n      console.error(\"Error fetching team members:\", error);\n    }\n  };\n\n  // Handle the form input changes\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNewTask({\n      ...newTask,\n      [name]: value\n    });\n  };\n  const handleAssignedToChange = e => {\n    // Convert the selected options into an array of values\n    const selectedOptions = Array.from(e.target.selectedOptions, option => option.value);\n\n    // Update the newTask state with the selected assignedTo values\n    setNewTask(prevTask => ({\n      ...prevTask,\n      assignedTo: selectedOptions // Set the array of selected user IDs\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container tasks-page mt-4\",\n    children: projects.length > 0 ? projects.map(project => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card project-detail-card mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-header d-flex justify-content-between align-items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"mb-0\",\n          children: [project.name, /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `badge ${project.status === 'Ongoing' ? 'bg-warning' : 'bg-success'} ms-2`,\n            children: project.status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 15\n        }, this), project.created_by === user.id && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          onClick: () => {\n            setShowTaskForm(prev => ({\n              ...prev,\n              [project._id]: true\n            }));\n            fetchTeamMembers(project._id); // Fetch team members when opening task form\n          },\n          children: \"Add Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: project.tasks && project.tasks.length > 0 ? project.tasks.filter(task => task.assignedTo.includes(user.id)) // Filter tasks assigned to the logged-in user\n          .map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-12 mb-3\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card h-100 task-card\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-body\",\n                children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                  className: \"card-title\",\n                  children: task.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 133,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"card-text\",\n                  children: [\"Description: \", task.description]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 134,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"card-text\",\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: `badge ${task.status === 'Ongoing' ? 'bg-warning' : 'bg-success'}`,\n                    children: task.status\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 136,\n                    columnNumber: 31\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 135,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"card-text\",\n                  children: [\"Due Date: \", new Date(task.due_date).toLocaleDateString()]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 140,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"d-flex justify-content-between\",\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"btn btn-outline-primary\",\n                    onClick: () => navigate(`/task-details/${task._id}`),\n                    children: \"Manage\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 142,\n                    columnNumber: 31\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"btn btn-danger btn-sm\",\n                    onClick: () => handleRemoveTask(task._id, project._id),\n                    children: \"Remove\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 148,\n                    columnNumber: 31\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 141,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 27\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 25\n            }, this)\n          }, task._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 23\n          }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No tasks found for this project.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 15\n        }, this), showTaskForm[project._id] && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card task-form-card mt-4\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              children: \"Add New Task\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"form-label\",\n                  children: \"Task Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 171,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  className: \"form-control\",\n                  name: \"name\",\n                  value: newTask.name,\n                  onChange: handleInputChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 172,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"form-label\",\n                  children: \"Description\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 181,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                  className: \"form-control\",\n                  name: \"description\",\n                  value: newTask.description,\n                  onChange: handleInputChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 182,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"form-label\",\n                  children: \"Due Date\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 190,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"date\",\n                  className: \"form-control\",\n                  name: \"due_date\",\n                  value: newTask.due_date,\n                  onChange: handleInputChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 191,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"form-label\",\n                  children: \"Assign To\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 200,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                  className: \"form-control\",\n                  name: \"assignedTo\",\n                  multiple: true,\n                  value: newTask.assignedTo,\n                  onChange: handleAssignedToChange,\n                  children: teamMembers.map(member => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: member._id,\n                    children: member.name\n                  }, member._id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 209,\n                    columnNumber: 29\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 201,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"form-label\",\n                  children: \"Status\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 216,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                  className: \"form-control\",\n                  name: \"status\",\n                  value: newTask.status,\n                  onChange: handleInputChange,\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"Ongoing\",\n                    children: \"Ongoing\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 223,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"Completed\",\n                    children: \"Completed\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 224,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 217,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"btn btn-primary\",\n                onClick: () => handleAddTask(project._id),\n                children: \"Add Task\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 13\n      }, this)]\n    }, project._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No projects found where you are a team member.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n};\n_s(TasksPage, \"t97YcR4vVazTkXyuoRCugGznCbo=\", false, function () {\n  return [useNavigate, useAuth];\n});\n_c = TasksPage;\nexport default TasksPage;\nvar _c;\n$RefreshReg$(_c, \"TasksPage\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","axios","useAuth","jsxDEV","_jsxDEV","TasksPage","_s","navigate","projects","setProjects","user","showTaskForm","setShowTaskForm","newTask","setNewTask","name","description","status","due_date","assignedTo","teamMembers","setTeamMembers","fetchProjectsAndTasks","console","log","token","localStorage","getItem","response","get","id","headers","Authorization","fetchedProjects","data","error","handleAddTask","projectId","post","prevProjects","map","project","_id","tasks","prev","handleRemoveTask","taskId","delete","filter","task","fetchTeamMembers","handleInputChange","e","value","target","handleAssignedToChange","selectedOptions","Array","from","option","prevTask","className","children","length","fileName","_jsxFileName","lineNumber","columnNumber","created_by","onClick","includes","Date","toLocaleDateString","type","onChange","multiple","member","_c","$RefreshReg$"],"sources":["F:/Project-Management-App/frontend/src/components/TasksPage.js"],"sourcesContent":["import 'bootstrap/dist/css/bootstrap.min.css'; // Bootstrap styles\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom'; // For navigation\nimport axios from 'axios'; // Import axios for making HTTP requests\nimport './TasksPage.css'; // Custom styles\nimport { useAuth } from \"../AuthContext\";\n\nconst TasksPage = () => {\n  const navigate = useNavigate(); // To navigate programmatically\n  const [projects, setProjects] = useState([]); // State for projects where user is a team member\n  const { user } = useAuth(); // Auth context to get the current user\n  const [showTaskForm, setShowTaskForm] = useState({}); // Control task form visibility for each project\n  const [newTask, setNewTask] = useState({ name: '', description: '', status: 'Ongoing', due_date: '', assignedTo: [] });\n  const [teamMembers, setTeamMembers] = useState([]); // Store team members for the assigned field\n\n  // Fetch projects and tasks when the component mounts\n  useEffect(() => {\n    const fetchProjectsAndTasks = async () => {\n      try {\n        if (!user) {\n          console.log(\"User is not logged in.\");\n          return; // Exit if user is not logged in\n        }\n        console.log(user);\n        const token = localStorage.getItem('token'); // Fetch token from storage\n    const response = await axios.get(`http://localhost:5000/api/user/${user.id}`, {\n      headers: {\n        Authorization: `Bearer ${token}` // Pass token in the Authorization header\n      }\n    });\n        const fetchedProjects = response.data.user.projects;\n        setProjects(fetchedProjects); // Set the projects state\n      } catch (error) {\n        console.error(\"Error fetching projects or tasks:\", error);\n      }\n    };\n\n    fetchProjectsAndTasks();\n  }, [user]);\n\n  // Handle adding a new task\n  const handleAddTask = async (projectId) => {\n    try {\n      console.log(\"Creating task with data:\", newTask); \n      const response = await axios.post(`http://localhost:5000/api/task/${projectId}`, newTask);\n      setProjects((prevProjects) => prevProjects.map((project) =>\n        project._id === projectId ? { ...project, tasks: [...project.tasks, response.data] } : project\n      ));\n      setShowTaskForm((prev) => ({ ...prev, [projectId]: false })); // Hide the task form after adding the task\n      setNewTask({ name: '', description: '', status: 'Ongoing', due_date: '', assignedTo: [] }); // Reset the task form\n    } catch (error) {\n      console.error(\"Error adding task:\", error);\n    }\n  };\n\n  // Function to remove a task\n  const handleRemoveTask = async (taskId, projectId) => {\n    try {\n      await axios.delete(`http://localhost:5000/api/task/${taskId}`);\n      setProjects((prevProjects) =>\n        prevProjects.map((project) =>\n          project._id === projectId\n            ? { ...project, tasks: project.tasks.filter((task) => task._id !== taskId) }\n            : project\n        )\n      );\n    } catch (error) {\n      console.error(\"Error removing task:\", error);\n    }\n  };\n\n  // Fetch team members for a project\n  const fetchTeamMembers = async (projectId) => {\n    try {\n      const response = await axios.get(`http://localhost:5000/api/project/${projectId}`);\n      setTeamMembers(response.data.teamMembers); // Set the list of team members\n    } catch (error) {\n      console.error(\"Error fetching team members:\", error);\n    }\n  };\n\n  // Handle the form input changes\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setNewTask({ ...newTask, [name]: value });\n  };\n\n  const handleAssignedToChange = (e) => {\n    // Convert the selected options into an array of values\n    const selectedOptions = Array.from(e.target.selectedOptions, option => option.value);\n\n    // Update the newTask state with the selected assignedTo values\n    setNewTask(prevTask => ({\n        ...prevTask,\n        assignedTo: selectedOptions  // Set the array of selected user IDs\n    }));\n  };\n\n  return (\n    <div className=\"container tasks-page mt-4\">\n      {projects.length > 0 ? (\n        projects.map((project) => (\n          <div key={project._id} className=\"card project-detail-card mb-4\">\n            <div className=\"card-header d-flex justify-content-between align-items-center\">\n              <h2 className=\"mb-0\">{project.name}\n                <span className={`badge ${project.status === 'Ongoing' ? 'bg-warning' : 'bg-success'} ms-2`}>\n                  {project.status}\n                </span>\n              </h2>\n              {project.created_by === user.id && (\n                <button\n                  className=\"btn btn-primary\"\n                  onClick={() => {\n                    setShowTaskForm((prev) => ({ ...prev, [project._id]: true }));\n                    fetchTeamMembers(project._id); // Fetch team members when opening task form\n                  }}\n                >\n                  Add Task\n                </button>\n              )}\n            </div>\n\n            {/* List of Tasks for the current project */}\n            <div className=\"card-body\">\n              <div className=\"row\">\n                {project.tasks && project.tasks.length > 0 ? (\n                  project.tasks\n                    .filter((task) => task.assignedTo.includes(user.id)) // Filter tasks assigned to the logged-in user\n                    .map((task) => (\n                      <div key={task._id} className=\"col-12 mb-3\">\n                        <div className=\"card h-100 task-card\">\n                          <div className=\"card-body\">\n                            <h5 className=\"card-title\">{task.name}</h5>\n                            <p className=\"card-text\">Description: {task.description}</p>\n                            <p className=\"card-text\">\n                              <span className={`badge ${task.status === 'Ongoing' ? 'bg-warning' : 'bg-success'}`}>\n                                {task.status}\n                              </span>\n                            </p>\n                            <p className=\"card-text\">Due Date: {new Date(task.due_date).toLocaleDateString()}</p>\n                            <div className=\"d-flex justify-content-between\">\n                              <button\n                                className=\"btn btn-outline-primary\"\n                                onClick={() => navigate(`/task-details/${task._id}`)}\n                              >\n                                Manage\n                              </button>\n                              <button\n                                className=\"btn btn-danger btn-sm\"\n                                onClick={() => handleRemoveTask(task._id, project._id)}\n                              >\n                                Remove\n                              </button>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    ))\n                ) : (\n                  <p>No tasks found for this project.</p>\n                )}\n              </div>\n\n              {/* Add Task Form specific to each project */}\n              {showTaskForm[project._id] && (\n                <div className=\"card task-form-card mt-4\">\n                  <div className=\"card-body\">\n                    <h5>Add New Task</h5>\n                    <form>\n                      <div className=\"mb-3\">\n                        <label className=\"form-label\">Task Name</label>\n                        <input\n                          type=\"text\"\n                          className=\"form-control\"\n                          name=\"name\"\n                          value={newTask.name}\n                          onChange={handleInputChange}\n                        />\n                      </div>\n                      <div className=\"mb-3\">\n                        <label className=\"form-label\">Description</label>\n                        <textarea\n                          className=\"form-control\"\n                          name=\"description\"\n                          value={newTask.description}\n                          onChange={handleInputChange}\n                        ></textarea>\n                      </div>\n                      <div className=\"mb-3\">\n                        <label className=\"form-label\">Due Date</label>\n                        <input\n                          type=\"date\"\n                          className=\"form-control\"\n                          name=\"due_date\"\n                          value={newTask.due_date}\n                          onChange={handleInputChange}\n                        />\n                      </div>\n                      <div className=\"mb-3\">\n                        <label className=\"form-label\">Assign To</label>\n                        <select\n                          className=\"form-control\"\n                          name=\"assignedTo\"\n                          multiple\n                          value={newTask.assignedTo}\n                          onChange={handleAssignedToChange}\n                        >\n                          {teamMembers.map((member) => (\n                            <option key={member._id} value={member._id}>\n                              {member.name}\n                            </option>\n                          ))}\n                        </select>\n                      </div>\n                      <div className=\"mb-3\">\n                        <label className=\"form-label\">Status</label>\n                        <select\n                          className=\"form-control\"\n                          name=\"status\"\n                          value={newTask.status}\n                          onChange={handleInputChange}\n                        >\n                          <option value=\"Ongoing\">Ongoing</option>\n                          <option value=\"Completed\">Completed</option>\n                        </select>\n                      </div>\n                      <button type=\"button\" className=\"btn btn-primary\" onClick={() => handleAddTask(project._id)}>\n                        Add Task\n                      </button>\n                    </form>\n                  </div>\n                </div>\n              )}\n            </div>\n          </div>\n        ))\n      ) : (\n        <p>No projects found where you are a team member.</p>\n      )}\n    </div>\n  );\n};\n\nexport default TasksPage;\n"],"mappings":";;AAAA,OAAO,sCAAsC,CAAC,CAAC;AAC/C,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB,CAAC,CAAC;AAChD,OAAOC,KAAK,MAAM,OAAO,CAAC,CAAC;AAC3B,OAAO,iBAAiB,CAAC,CAAC;AAC1B,SAASC,OAAO,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAMC,QAAQ,GAAGP,WAAW,CAAC,CAAC,CAAC,CAAC;EAChC,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAC9C,MAAM;IAAEW;EAAK,CAAC,GAAGR,OAAO,CAAC,CAAC,CAAC,CAAC;EAC5B,MAAM,CAACS,YAAY,EAAEC,eAAe,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACtD,MAAM,CAACc,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC;IAAEgB,IAAI,EAAE,EAAE;IAAEC,WAAW,EAAE,EAAE;IAAEC,MAAM,EAAE,SAAS;IAAEC,QAAQ,EAAE,EAAE;IAAEC,UAAU,EAAE;EAAG,CAAC,CAAC;EACtH,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAEpD;EACAD,SAAS,CAAC,MAAM;IACd,MAAMwB,qBAAqB,GAAG,MAAAA,CAAA,KAAY;MACxC,IAAI;QACF,IAAI,CAACZ,IAAI,EAAE;UACTa,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;UACrC,OAAO,CAAC;QACV;QACAD,OAAO,CAACC,GAAG,CAACd,IAAI,CAAC;QACjB,MAAMe,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;QACjD,MAAMC,QAAQ,GAAG,MAAM3B,KAAK,CAAC4B,GAAG,CAAC,kCAAkCnB,IAAI,CAACoB,EAAE,EAAE,EAAE;UAC5EC,OAAO,EAAE;YACPC,aAAa,EAAE,UAAUP,KAAK,EAAE,CAAC;UACnC;QACF,CAAC,CAAC;QACE,MAAMQ,eAAe,GAAGL,QAAQ,CAACM,IAAI,CAACxB,IAAI,CAACF,QAAQ;QACnDC,WAAW,CAACwB,eAAe,CAAC,CAAC,CAAC;MAChC,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdZ,OAAO,CAACY,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;MAC3D;IACF,CAAC;IAEDb,qBAAqB,CAAC,CAAC;EACzB,CAAC,EAAE,CAACZ,IAAI,CAAC,CAAC;;EAEV;EACA,MAAM0B,aAAa,GAAG,MAAOC,SAAS,IAAK;IACzC,IAAI;MACFd,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEX,OAAO,CAAC;MAChD,MAAMe,QAAQ,GAAG,MAAM3B,KAAK,CAACqC,IAAI,CAAC,kCAAkCD,SAAS,EAAE,EAAExB,OAAO,CAAC;MACzFJ,WAAW,CAAE8B,YAAY,IAAKA,YAAY,CAACC,GAAG,CAAEC,OAAO,IACrDA,OAAO,CAACC,GAAG,KAAKL,SAAS,GAAG;QAAE,GAAGI,OAAO;QAAEE,KAAK,EAAE,CAAC,GAAGF,OAAO,CAACE,KAAK,EAAEf,QAAQ,CAACM,IAAI;MAAE,CAAC,GAAGO,OACzF,CAAC,CAAC;MACF7B,eAAe,CAAEgC,IAAI,KAAM;QAAE,GAAGA,IAAI;QAAE,CAACP,SAAS,GAAG;MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;MAC9DvB,UAAU,CAAC;QAAEC,IAAI,EAAE,EAAE;QAAEC,WAAW,EAAE,EAAE;QAAEC,MAAM,EAAE,SAAS;QAAEC,QAAQ,EAAE,EAAE;QAAEC,UAAU,EAAE;MAAG,CAAC,CAAC,CAAC,CAAC;IAC9F,CAAC,CAAC,OAAOgB,KAAK,EAAE;MACdZ,OAAO,CAACY,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;IAC5C;EACF,CAAC;;EAED;EACA,MAAMU,gBAAgB,GAAG,MAAAA,CAAOC,MAAM,EAAET,SAAS,KAAK;IACpD,IAAI;MACF,MAAMpC,KAAK,CAAC8C,MAAM,CAAC,kCAAkCD,MAAM,EAAE,CAAC;MAC9DrC,WAAW,CAAE8B,YAAY,IACvBA,YAAY,CAACC,GAAG,CAAEC,OAAO,IACvBA,OAAO,CAACC,GAAG,KAAKL,SAAS,GACrB;QAAE,GAAGI,OAAO;QAAEE,KAAK,EAAEF,OAAO,CAACE,KAAK,CAACK,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACP,GAAG,KAAKI,MAAM;MAAE,CAAC,GAC1EL,OACN,CACF,CAAC;IACH,CAAC,CAAC,OAAON,KAAK,EAAE;MACdZ,OAAO,CAACY,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C;EACF,CAAC;;EAED;EACA,MAAMe,gBAAgB,GAAG,MAAOb,SAAS,IAAK;IAC5C,IAAI;MACF,MAAMT,QAAQ,GAAG,MAAM3B,KAAK,CAAC4B,GAAG,CAAC,qCAAqCQ,SAAS,EAAE,CAAC;MAClFhB,cAAc,CAACO,QAAQ,CAACM,IAAI,CAACd,WAAW,CAAC,CAAC,CAAC;IAC7C,CAAC,CAAC,OAAOe,KAAK,EAAE;MACdZ,OAAO,CAACY,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACtD;EACF,CAAC;;EAED;EACA,MAAMgB,iBAAiB,GAAIC,CAAC,IAAK;IAC/B,MAAM;MAAErC,IAAI;MAAEsC;IAAM,CAAC,GAAGD,CAAC,CAACE,MAAM;IAChCxC,UAAU,CAAC;MAAE,GAAGD,OAAO;MAAE,CAACE,IAAI,GAAGsC;IAAM,CAAC,CAAC;EAC3C,CAAC;EAED,MAAME,sBAAsB,GAAIH,CAAC,IAAK;IACpC;IACA,MAAMI,eAAe,GAAGC,KAAK,CAACC,IAAI,CAACN,CAAC,CAACE,MAAM,CAACE,eAAe,EAAEG,MAAM,IAAIA,MAAM,CAACN,KAAK,CAAC;;IAEpF;IACAvC,UAAU,CAAC8C,QAAQ,KAAK;MACpB,GAAGA,QAAQ;MACXzC,UAAU,EAAEqC,eAAe,CAAE;IACjC,CAAC,CAAC,CAAC;EACL,CAAC;EAED,oBACEpD,OAAA;IAAKyD,SAAS,EAAC,2BAA2B;IAAAC,QAAA,EACvCtD,QAAQ,CAACuD,MAAM,GAAG,CAAC,GAClBvD,QAAQ,CAACgC,GAAG,CAAEC,OAAO,iBACnBrC,OAAA;MAAuByD,SAAS,EAAC,+BAA+B;MAAAC,QAAA,gBAC9D1D,OAAA;QAAKyD,SAAS,EAAC,+DAA+D;QAAAC,QAAA,gBAC5E1D,OAAA;UAAIyD,SAAS,EAAC,MAAM;UAAAC,QAAA,GAAErB,OAAO,CAAC1B,IAAI,eAChCX,OAAA;YAAMyD,SAAS,EAAE,SAASpB,OAAO,CAACxB,MAAM,KAAK,SAAS,GAAG,YAAY,GAAG,YAAY,OAAQ;YAAA6C,QAAA,EACzFrB,OAAO,CAACxB;UAAM;YAAA+C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACX,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC,EACJ1B,OAAO,CAAC2B,UAAU,KAAK1D,IAAI,CAACoB,EAAE,iBAC7B1B,OAAA;UACEyD,SAAS,EAAC,iBAAiB;UAC3BQ,OAAO,EAAEA,CAAA,KAAM;YACbzD,eAAe,CAAEgC,IAAI,KAAM;cAAE,GAAGA,IAAI;cAAE,CAACH,OAAO,CAACC,GAAG,GAAG;YAAK,CAAC,CAAC,CAAC;YAC7DQ,gBAAgB,CAACT,OAAO,CAACC,GAAG,CAAC,CAAC,CAAC;UACjC,CAAE;UAAAoB,QAAA,EACH;QAED;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CACT;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,eAGN/D,OAAA;QAAKyD,SAAS,EAAC,WAAW;QAAAC,QAAA,gBACxB1D,OAAA;UAAKyD,SAAS,EAAC,KAAK;UAAAC,QAAA,EACjBrB,OAAO,CAACE,KAAK,IAAIF,OAAO,CAACE,KAAK,CAACoB,MAAM,GAAG,CAAC,GACxCtB,OAAO,CAACE,KAAK,CACVK,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAAC9B,UAAU,CAACmD,QAAQ,CAAC5D,IAAI,CAACoB,EAAE,CAAC,CAAC,CAAC;UAAA,CACpDU,GAAG,CAAES,IAAI,iBACR7C,OAAA;YAAoByD,SAAS,EAAC,aAAa;YAAAC,QAAA,eACzC1D,OAAA;cAAKyD,SAAS,EAAC,sBAAsB;cAAAC,QAAA,eACnC1D,OAAA;gBAAKyD,SAAS,EAAC,WAAW;gBAAAC,QAAA,gBACxB1D,OAAA;kBAAIyD,SAAS,EAAC,YAAY;kBAAAC,QAAA,EAAEb,IAAI,CAAClC;gBAAI;kBAAAiD,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAK,CAAC,eAC3C/D,OAAA;kBAAGyD,SAAS,EAAC,WAAW;kBAAAC,QAAA,GAAC,eAAa,EAACb,IAAI,CAACjC,WAAW;gBAAA;kBAAAgD,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI,CAAC,eAC5D/D,OAAA;kBAAGyD,SAAS,EAAC,WAAW;kBAAAC,QAAA,eACtB1D,OAAA;oBAAMyD,SAAS,EAAE,SAASZ,IAAI,CAAChC,MAAM,KAAK,SAAS,GAAG,YAAY,GAAG,YAAY,EAAG;oBAAA6C,QAAA,EACjFb,IAAI,CAAChC;kBAAM;oBAAA+C,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACR;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACN,CAAC,eACJ/D,OAAA;kBAAGyD,SAAS,EAAC,WAAW;kBAAAC,QAAA,GAAC,YAAU,EAAC,IAAIS,IAAI,CAACtB,IAAI,CAAC/B,QAAQ,CAAC,CAACsD,kBAAkB,CAAC,CAAC;gBAAA;kBAAAR,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI,CAAC,eACrF/D,OAAA;kBAAKyD,SAAS,EAAC,gCAAgC;kBAAAC,QAAA,gBAC7C1D,OAAA;oBACEyD,SAAS,EAAC,yBAAyB;oBACnCQ,OAAO,EAAEA,CAAA,KAAM9D,QAAQ,CAAC,iBAAiB0C,IAAI,CAACP,GAAG,EAAE,CAAE;oBAAAoB,QAAA,EACtD;kBAED;oBAAAE,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAQ,CAAC,eACT/D,OAAA;oBACEyD,SAAS,EAAC,uBAAuB;oBACjCQ,OAAO,EAAEA,CAAA,KAAMxB,gBAAgB,CAACI,IAAI,CAACP,GAAG,EAAED,OAAO,CAACC,GAAG,CAAE;oBAAAoB,QAAA,EACxD;kBAED;oBAAAE,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAQ,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACN,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACH;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH;UAAC,GA1BElB,IAAI,CAACP,GAAG;YAAAsB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OA2Bb,CACN,CAAC,gBAEJ/D,OAAA;YAAA0D,QAAA,EAAG;UAAgC;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG;QACvC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC,EAGLxD,YAAY,CAAC8B,OAAO,CAACC,GAAG,CAAC,iBACxBtC,OAAA;UAAKyD,SAAS,EAAC,0BAA0B;UAAAC,QAAA,eACvC1D,OAAA;YAAKyD,SAAS,EAAC,WAAW;YAAAC,QAAA,gBACxB1D,OAAA;cAAA0D,QAAA,EAAI;YAAY;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACrB/D,OAAA;cAAA0D,QAAA,gBACE1D,OAAA;gBAAKyD,SAAS,EAAC,MAAM;gBAAAC,QAAA,gBACnB1D,OAAA;kBAAOyD,SAAS,EAAC,YAAY;kBAAAC,QAAA,EAAC;gBAAS;kBAAAE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAO,CAAC,eAC/C/D,OAAA;kBACEqE,IAAI,EAAC,MAAM;kBACXZ,SAAS,EAAC,cAAc;kBACxB9C,IAAI,EAAC,MAAM;kBACXsC,KAAK,EAAExC,OAAO,CAACE,IAAK;kBACpB2D,QAAQ,EAAEvB;gBAAkB;kBAAAa,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAC7B,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACC,CAAC,eACN/D,OAAA;gBAAKyD,SAAS,EAAC,MAAM;gBAAAC,QAAA,gBACnB1D,OAAA;kBAAOyD,SAAS,EAAC,YAAY;kBAAAC,QAAA,EAAC;gBAAW;kBAAAE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAO,CAAC,eACjD/D,OAAA;kBACEyD,SAAS,EAAC,cAAc;kBACxB9C,IAAI,EAAC,aAAa;kBAClBsC,KAAK,EAAExC,OAAO,CAACG,WAAY;kBAC3B0D,QAAQ,EAAEvB;gBAAkB;kBAAAa,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACnB,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACT,CAAC,eACN/D,OAAA;gBAAKyD,SAAS,EAAC,MAAM;gBAAAC,QAAA,gBACnB1D,OAAA;kBAAOyD,SAAS,EAAC,YAAY;kBAAAC,QAAA,EAAC;gBAAQ;kBAAAE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAO,CAAC,eAC9C/D,OAAA;kBACEqE,IAAI,EAAC,MAAM;kBACXZ,SAAS,EAAC,cAAc;kBACxB9C,IAAI,EAAC,UAAU;kBACfsC,KAAK,EAAExC,OAAO,CAACK,QAAS;kBACxBwD,QAAQ,EAAEvB;gBAAkB;kBAAAa,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAC7B,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACC,CAAC,eACN/D,OAAA;gBAAKyD,SAAS,EAAC,MAAM;gBAAAC,QAAA,gBACnB1D,OAAA;kBAAOyD,SAAS,EAAC,YAAY;kBAAAC,QAAA,EAAC;gBAAS;kBAAAE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAO,CAAC,eAC/C/D,OAAA;kBACEyD,SAAS,EAAC,cAAc;kBACxB9C,IAAI,EAAC,YAAY;kBACjB4D,QAAQ;kBACRtB,KAAK,EAAExC,OAAO,CAACM,UAAW;kBAC1BuD,QAAQ,EAAEnB,sBAAuB;kBAAAO,QAAA,EAEhC1C,WAAW,CAACoB,GAAG,CAAEoC,MAAM,iBACtBxE,OAAA;oBAAyBiD,KAAK,EAAEuB,MAAM,CAAClC,GAAI;oBAAAoB,QAAA,EACxCc,MAAM,CAAC7D;kBAAI,GADD6D,MAAM,CAAClC,GAAG;oBAAAsB,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAEf,CACT;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACI,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACN,CAAC,eACN/D,OAAA;gBAAKyD,SAAS,EAAC,MAAM;gBAAAC,QAAA,gBACnB1D,OAAA;kBAAOyD,SAAS,EAAC,YAAY;kBAAAC,QAAA,EAAC;gBAAM;kBAAAE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAO,CAAC,eAC5C/D,OAAA;kBACEyD,SAAS,EAAC,cAAc;kBACxB9C,IAAI,EAAC,QAAQ;kBACbsC,KAAK,EAAExC,OAAO,CAACI,MAAO;kBACtByD,QAAQ,EAAEvB,iBAAkB;kBAAAW,QAAA,gBAE5B1D,OAAA;oBAAQiD,KAAK,EAAC,SAAS;oBAAAS,QAAA,EAAC;kBAAO;oBAAAE,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAQ,CAAC,eACxC/D,OAAA;oBAAQiD,KAAK,EAAC,WAAW;oBAAAS,QAAA,EAAC;kBAAS;oBAAAE,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAQ,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACtC,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACN,CAAC,eACN/D,OAAA;gBAAQqE,IAAI,EAAC,QAAQ;gBAACZ,SAAS,EAAC,iBAAiB;gBAACQ,OAAO,EAAEA,CAAA,KAAMjC,aAAa,CAACK,OAAO,CAACC,GAAG,CAAE;gBAAAoB,QAAA,EAAC;cAE7F;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACL,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACJ;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CACN;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC;IAAA,GAnIE1B,OAAO,CAACC,GAAG;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAoIhB,CACN,CAAC,gBAEF/D,OAAA;MAAA0D,QAAA,EAAG;IAA8C;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG;EACrD;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAC7D,EAAA,CA1OID,SAAS;EAAA,QACIL,WAAW,EAEXE,OAAO;AAAA;AAAA2E,EAAA,GAHpBxE,SAAS;AA4Of,eAAeA,SAAS;AAAC,IAAAwE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}