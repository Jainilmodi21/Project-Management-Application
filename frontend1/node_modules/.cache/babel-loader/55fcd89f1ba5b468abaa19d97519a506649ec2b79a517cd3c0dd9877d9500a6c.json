{"ast":null,"code":"var _jsxFileName = \"F:\\\\Project-Management-App\\\\frontend\\\\src\\\\components\\\\TasksPage.js\",\n  _s = $RefreshSig$();\nimport 'bootstrap/dist/css/bootstrap.min.css'; // Bootstrap styles\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom'; // For extracting projectId and navigation\nimport axios from 'axios'; // Import axios for making HTTP requests\nimport './TasksPage.css'; // Custom styles\nimport { useAuth } from \"../AuthContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TasksPage = () => {\n  _s();\n  // Accept userId as a prop\n  // Extract projectId from URL\n  const navigate = useNavigate(); // To navigate programmatically\n  const [showTaskForm, setShowTaskForm] = useState(false); // State to control task form visibility\n  const [projects, setProjects] = useState([]); // State for projects where user is a team member\n  const [projectDetails, setProjectDetails] = useState(null); // State for project details\n  const [projectTasks, setProjectTasks] = useState([]); // State for tasks of the current project\n  const [newTask, setNewTask] = useState({\n    name: '',\n    description: '',\n    status: 'Ongoing',\n    due_date: ''\n  });\n  const {\n    user\n  } = useAuth();\n  const userId = user.id;\n  // Fetch projects and tasks when the component mounts\n  useEffect(() => {\n    // Fetching the projects data\n    const fetchProjectsAndTasks = async () => {\n      try {\n        if (!user) {\n          console.log(\"User is not logged in.\");\n          return; // Exit if user is not logged in\n        }\n        console.log(user);\n        const response = await axios.get(`http://localhost:5000/api/user/${user.id}/projects`);\n        const projects = response.data; // Access the actual project data\n\n        const tasksResponse = await axios.get(`http://localhost:5000/api/user/${user.id}/tasks`);\n        setProjectTasks(tasksResponse.data);\n\n        // Fetch tasks for the specific project\n\n        // If a projectId is provided in the URL, fetch its details and tasks\n      } catch (error) {\n        console.error(\"Error fetching projects or tasks:\", error);\n      }\n    };\n    fetchProjectsAndTasks();\n  }, [userId]); // Added userId to dependency array\n\n  //Handle form submission to add a new task\n\n  const handleAddTask = async () => {\n    // try {\n    //   // const response = await axios.post(`/api/tasks`, { ...newTask, project_id: projectId, user_id: userId }); // Include user_id when adding a task\n    //   setProjectTasks([...projectTasks, response.data]); // Add the new task to the current project's tasks\n    //   setShowTaskForm(false); // Hide form after submission\n    //   setNewTask({ name: '', description: '', status: 'Ongoing', due_date: '' }); // Reset new task state\n    // } catch (error) {\n    //   console.error(\"Error adding task:\", error);\n    // }\n  };\n\n  // Handle removing a task with confirmation\n  const handleRemoveTask = async taskId => {\n    // const isConfirmed = window.confirm(\"Are you sure you want to remove this task?\");\n    // if (isConfirmed) {\n    //   try {\n    //     await axios.delete(`/api/tasks/${taskId}`); // Send request to delete task\n    //     setProjectTasks(projectTasks.filter(task => task._id !== taskId)); // Filter out the removed task\n    //   } catch (error) {\n    //     console.error(\"Error removing task:\", error);\n    //   }\n    // }\n  };\n\n  // Render only projects where the user is a team member\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container tasks-page mt-4\",\n    children: [projects.length > 0 ? projects.map(project => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card project-detail-card mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-header d-flex justify-content-between align-items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"mb-0\",\n          children: [project.name, /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `badge ${project.status === 'Ongoing' ? 'bg-warning' : 'bg-success'} ms-2`,\n            children: project.status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          onClick: () => {\n            setShowTaskForm(true);\n            setProjectDetails(project); // Set the current project details\n            setProjectTasks([]); // Clear previous tasks\n          } // Show form for the selected project\n          ,\n          children: \"Add Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }, this), showTaskForm && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"backdrop\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"task-form p-4 bg-white rounded shadow\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Add New Task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Task Name:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              value: newTask.name,\n              onChange: e => setNewTask({\n                ...newTask,\n                name: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Description:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              className: \"form-control\",\n              value: newTask.description,\n              onChange: e => setNewTask({\n                ...newTask,\n                description: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Due Date:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"date\",\n              className: \"form-control\",\n              value: newTask.due_date,\n              onChange: e => setNewTask({\n                ...newTask,\n                due_date: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Status:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              className: \"form-select\",\n              value: newTask.status,\n              onChange: e => setNewTask({\n                ...newTask,\n                status: e.target.value\n              }),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Ongoing\",\n                children: \"Ongoing\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Completed\",\n                children: \"Completed\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex justify-content-end\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-success me-2\",\n              onClick: handleAddTask,\n              children: \"Add\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-secondary\",\n              onClick: () => setShowTaskForm(false),\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: projectTasks.map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-12 mb-3\",\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card h-100 task-card\",\n              children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-body\",\n                children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                  className: \"card-title\",\n                  children: task.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 159,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"card-text\",\n                  children: [\"Description: \", task.description]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 160,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"card-text\",\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: `badge ${task.status === 'Ongoing' ? 'bg-warning' : 'bg-success'}`,\n                    children: task.status\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 162,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 161,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"card-text\",\n                  children: [\"Due Date: \", new Date(task.due_date).toLocaleDateString()]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 166,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"d-flex justify-content-between\",\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"btn btn-outline-primary\",\n                    onClick: () => navigate(`/task-details/${task._id}`),\n                    children: \"Manage\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 168,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"btn btn-danger btn-sm\",\n                    onClick: () => handleRemoveTask(task._id),\n                    children: \"Remove\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 174,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 167,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 21\n            }, this)]\n          }, task._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 13\n      }, this)]\n    }, project._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No projects found for the current user.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => navigate(-1),\n      className: \"btn btn-outline-secondary mt-4\",\n      children: \"Back to Projects\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n_s(TasksPage, \"F2FjNolh5Pn0E4EDbCKHPSO3SaM=\", false, function () {\n  return [useNavigate, useAuth];\n});\n_c = TasksPage;\nexport default TasksPage;\nvar _c;\n$RefreshReg$(_c, \"TasksPage\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","useParams","axios","useAuth","jsxDEV","_jsxDEV","TasksPage","_s","navigate","showTaskForm","setShowTaskForm","projects","setProjects","projectDetails","setProjectDetails","projectTasks","setProjectTasks","newTask","setNewTask","name","description","status","due_date","user","userId","id","fetchProjectsAndTasks","console","log","response","get","data","tasksResponse","error","handleAddTask","handleRemoveTask","taskId","className","children","length","map","project","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","value","onChange","e","target","task","Date","toLocaleDateString","_id","_c","$RefreshReg$"],"sources":["F:/Project-Management-App/frontend/src/components/TasksPage.js"],"sourcesContent":["import 'bootstrap/dist/css/bootstrap.min.css'; // Bootstrap styles\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom'; // For extracting projectId and navigation\nimport axios from 'axios'; // Import axios for making HTTP requests\nimport './TasksPage.css'; // Custom styles\nimport { useAuth } from \"../AuthContext\";\n\nconst TasksPage = () => { // Accept userId as a prop\n  // Extract projectId from URL\n  const navigate = useNavigate(); // To navigate programmatically\n  const [showTaskForm, setShowTaskForm] = useState(false); // State to control task form visibility\n  const [projects, setProjects] = useState([]); // State for projects where user is a team member\n  const [projectDetails, setProjectDetails] = useState(null); // State for project details\n  const [projectTasks, setProjectTasks] = useState([]); // State for tasks of the current project\n  const [newTask, setNewTask] = useState({ name: '', description: '', status: 'Ongoing', due_date: '' });\n  const { user } = useAuth();\n\n  const userId=user.id;\n  // Fetch projects and tasks when the component mounts\n  useEffect(() => {\n    \n\n  // Fetching the projects data\n  const fetchProjectsAndTasks = async () => {\n    try {\n      if (!user) {\n        console.log(\"User is not logged in.\");\n        return; // Exit if user is not logged in\n      }\n      console.log(user);\n      const response = await axios.get(`http://localhost:5000/api/user/${user.id}/projects`);\n      const projects = response.data; // Access the actual project data\n\n      \n        const tasksResponse = await axios.get(`http://localhost:5000/api/user/${user.id}/tasks`);\n        setProjectTasks(tasksResponse.data);\n     \n       // Fetch tasks for the specific project\n     \n        \n        // If a projectId is provided in the URL, fetch its details and tasks\n        \n      } catch (error) {\n        console.error(\"Error fetching projects or tasks:\", error);\n      }\n    };\n\n    fetchProjectsAndTasks();\n  }, [ userId]); // Added userId to dependency array\n\n  //Handle form submission to add a new task\n  \n  const handleAddTask = async () => {\n    // try {\n    //   // const response = await axios.post(`/api/tasks`, { ...newTask, project_id: projectId, user_id: userId }); // Include user_id when adding a task\n    //   setProjectTasks([...projectTasks, response.data]); // Add the new task to the current project's tasks\n    //   setShowTaskForm(false); // Hide form after submission\n    //   setNewTask({ name: '', description: '', status: 'Ongoing', due_date: '' }); // Reset new task state\n    // } catch (error) {\n    //   console.error(\"Error adding task:\", error);\n    // }\n  };\n\n\n  // Handle removing a task with confirmation\n  const handleRemoveTask = async (taskId) => {\n    // const isConfirmed = window.confirm(\"Are you sure you want to remove this task?\");\n    // if (isConfirmed) {\n    //   try {\n    //     await axios.delete(`/api/tasks/${taskId}`); // Send request to delete task\n    //     setProjectTasks(projectTasks.filter(task => task._id !== taskId)); // Filter out the removed task\n    //   } catch (error) {\n    //     console.error(\"Error removing task:\", error);\n    //   }\n    // }\n  };\n\n  // Render only projects where the user is a team member\n  return (\n    <div className=\"container tasks-page mt-4\">\n      {projects.length > 0 ? (\n        projects.map((project) => (\n          <div key={project._id} className=\"card project-detail-card mb-4\">\n            <div className=\"card-header d-flex justify-content-between align-items-center\">\n              <h2 className=\"mb-0\">{project.name}\n                <span className={`badge ${project.status === 'Ongoing' ? 'bg-warning' : 'bg-success'} ms-2`}>\n                  {project.status}\n                </span>\n              </h2>\n              <button\n                className=\"btn btn-primary\"\n                onClick={() => {\n                  setShowTaskForm(true);\n                  setProjectDetails(project); // Set the current project details\n                  setProjectTasks([]); // Clear previous tasks\n                }} // Show form for the selected project\n              >\n                Add Task\n              </button>\n            </div>\n\n            {/* Task Form */}\n            {showTaskForm && (\n              <div className=\"backdrop\">\n                <div className=\"task-form p-4 bg-white rounded shadow\">\n                  <h3>Add New Task</h3>\n                  <div className=\"mb-3\">\n                    <label>Task Name:</label>\n                    <input\n                      type=\"text\"\n                      className=\"form-control\"\n                      value={newTask.name}\n                      onChange={(e) => setNewTask({ ...newTask, name: e.target.value })}\n                    />\n                  </div>\n                  <div className=\"mb-3\">\n                    <label>Description:</label>\n                    <textarea\n                      className=\"form-control\"\n                      value={newTask.description}\n                      onChange={(e) => setNewTask({ ...newTask, description: e.target.value })}\n                    />\n                  </div>\n                  <div className=\"mb-3\">\n                    <label>Due Date:</label>\n                    <input\n                      type=\"date\"\n                      className=\"form-control\"\n                      value={newTask.due_date}\n                      onChange={(e) => setNewTask({ ...newTask, due_date: e.target.value })}\n                    />\n                  </div>\n                  <div className=\"mb-3\">\n                    <label>Status:</label>\n                    <select\n                      className=\"form-select\"\n                      value={newTask.status}\n                      onChange={(e) => setNewTask({ ...newTask, status: e.target.value })}\n                    >\n                      <option value=\"Ongoing\">Ongoing</option>\n                      <option value=\"Completed\">Completed</option>\n                    </select>\n                  </div>\n                  <div className=\"d-flex justify-content-end\">\n                    <button className=\"btn btn-success me-2\" onClick={handleAddTask}>Add</button>\n                    <button className=\"btn btn-secondary\" onClick={() => setShowTaskForm(false)}>Cancel</button>\n                  </div>\n                </div>\n              </div>\n            )}\n\n            {/* List of Tasks */}\n            <div className=\"card-body\">\n              <div className=\"row\">\n                {projectTasks.map((task) => (\n                  <div key={task._id} className=\"col-12 mb-3\"> {/* Adjust to col-12 for full row */}\n                    <div className=\"card h-100 task-card\"> {/* Add mb-3 for spacing between tasks */}\n                      <div className=\"card-body\">\n                        <h5 className=\"card-title\">{task.name}</h5>\n                        <p className=\"card-text\">Description: {task.description}</p>\n                        <p className=\"card-text\">\n                          <span className={`badge ${task.status === 'Ongoing' ? 'bg-warning' : 'bg-success'}`}>\n                            {task.status}\n                          </span>\n                        </p>\n                        <p className=\"card-text\">Due Date: {new Date(task.due_date).toLocaleDateString()}</p>\n                        <div className=\"d-flex justify-content-between\">\n                          <button\n                            className=\"btn btn-outline-primary\"\n                            onClick={() => navigate(`/task-details/${task._id}`)}\n                          >\n                            Manage\n                          </button>\n                          <button\n                            className=\"btn btn-danger btn-sm\"\n                            onClick={() => handleRemoveTask(task._id)}\n                          >\n                            Remove\n                          </button>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n        ))\n      ) : (\n        <p>No projects found for the current user.</p>\n      )}\n      <button onClick={() => navigate(-1)} className=\"btn btn-outline-secondary mt-4\">Back to Projects</button>\n    </div>\n  );\n};\n\nexport default TasksPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}