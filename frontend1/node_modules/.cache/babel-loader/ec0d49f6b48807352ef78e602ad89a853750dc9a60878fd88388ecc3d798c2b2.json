{"ast":null,"code":"var _jsxFileName = \"F:\\\\Project-Management-App\\\\frontend\\\\src\\\\components\\\\ProjectDetails.js\",\n  _s = $RefreshSig$();\n// import 'bootstrap/dist/css/bootstrap.min.css';\n// import React, { useEffect, useState } from 'react';\n// import { useNavigate, useParams } from 'react-router-dom';\n// import axios from 'axios';\n// import './ProjectDetails.css'; // Import custom CSS\n// import { useAuth } from \"../AuthContext\";\n\n// function ProjectDetails() {\n//   const { projectId } = useParams(); // Get projectId from URL\n//   const [project, setProject] = useState(null);\n//   const navigate = useNavigate();\n//   const [isProjectTask, setIsProjectTask] = useState(false);\n//   const [projectTasks, setProjectTasks] = useState([]);\n//   const [isTeamMembers, setIsTeamMembers] = useState(false);\n//   const [teamMembers, setTeamMembers] = useState([]);\n//   const [isEditing, setIsEditing] = useState(false); // State for handling edit mode\n//   const [editedProject, setEditedProject] = useState({});\n//   const [newTeamMember, setNewTeamMember] = useState(''); // Input for adding a new team member\n//   const [newRole, setNewRole] = useState('');\n//   const [showTeamModal, setShowTeamModal] = useState(false); // Modal visibility\n//   const { user } = useAuth();\n//   const loggedInUserId = user.id;\n\n//   useEffect(() => {\n//     const fetchProjectDetails = async () => {\n//       try {\n//         // Fetch project details, tasks, and team members\n//         const response = await axios.get(`http://localhost:5000/api/project/${projectId}`);\n//         let { project, tasks, teamMembers } = response.data;\n//         teamMembers = project.teamMembers;\n//         console.log(project);\n//         console.log(tasks);\n\n//         if (tasks) {\n//           setProjectTasks(tasks);\n//           setIsProjectTask(true);\n//         }\n//         setProject(project);\n//         if (teamMembers) {\n//           setIsTeamMembers(true);\n//           setTeamMembers(project.teamMembers || []);\n//         }\n\n//         console.log(teamMembers);\n//         setEditedProject(project);\n//       } catch (err) {\n//         console.error('Error fetching project details:', err);\n//       }\n//     };\n\n//     fetchProjectDetails();\n//   }, [projectId]);\n\n//   // Handle input changes for the editable form\n//   const handleInputChange = (e) => {\n//     const { name, value } = e.target;\n//     setEditedProject({ ...editedProject, [name]: value });\n//   };\n\n//   // Function to save the updated project details\n//   const handleSave = async () => {\n//     try {\n//       await axios.patch(`http://localhost:5000/api/project/${projectId}`, editedProject);\n//       setProject(editedProject);\n//       setIsEditing(false);\n//       closeEditModal();\n//     } catch (err) {\n//       console.error('Error updating project:', err);\n//     }\n//   };\n\n//   const handleAddTeamMember = async () => {\n//     try {\n//       const response = await axios.post(`http://localhost:5000/api/project/${projectId}/team-members`, {\n//         'user_id': newTeamMember,\n//         'role': newRole,\n//       });\n//       console.log(response.data.project.teamMembers);\n//       setTeamMembers(response.data.project.teamMembers); // Update team members\n//       setNewTeamMember('');\n//       setShowTeamModal(false);\n//     } catch (err) {\n//       console.error('Error adding team member:', err);\n//     }\n//   };\n\n//   const handleRemoveTeamMember = async (member_id) => {\n//     try {\n//       // Use a parameterized URL to pass the member_id\n//       await axios.delete(`http://localhost:5000/api/project/${projectId}/team-members/${member_id}`);\n//       // Update state to remove the team member from the list\n//       setTeamMembers(teamMembers.filter((member) => member.user_id !== member_id));\n//     } catch (err) {\n//       console.error('Error removing team member:', err);\n//     }\n//   };\n\n//   const handleDeleteProject = async () => {\n//     try {\n//       await axios.delete(`http://localhost:5000/api/project/${projectId}`);\n//       navigate('/projectsPage'); // Navigate to project list after deletion\n//     } catch (err) {\n//       console.error('Error deleting project:', err);\n//     }\n//   };\n\n//   const handleMarkAsComplete = async () => {\n//     try {\n//       editedProject.status=\"Completed\";\n//       console.log(editedProject);\n//       await axios.patch(`http://localhost:5000/api/project/${projectId}`, editedProject);\n//       setProject({ ...project, status: 'Completed' });\n//     } catch (err) {\n//       console.error('Error marking project as complete:', err);\n//     }\n//   };\n\n//   const handleRemoveTask = async (taskId) => {\n//     try {\n//       // Send a DELETE request to remove the task by its taskId\n//       await axios.delete(`http://localhost:5000/api/project/${projectId}/${taskId}`);\n//       // Update the state to remove the task from the list\n//       setProjectTasks(projectTasks.filter((task) => task._id !== taskId));\n//     } catch (err) {\n//       console.error('Error removing task:', err);\n//     }\n//   };\n\n//   const openEditModal = () => {\n//     setIsEditing(true);\n//   };\n\n//   const closeEditModal = () => {\n//     setIsEditing(false);\n//   };\n\n//   const openTeamModal = () => {\n//     setShowTeamModal(true);\n//   };\n\n//   const closeTeamModal = () => {\n//     setShowTeamModal(false);\n//   };\n\n//   if (!project) {\n//     return <div>Loading project details...</div>;\n//   }\n\n//   const isCreator = project.created_by === loggedInUserId;\n\n//   return (\n//     <div className=\"container mt-5\">\n//       <h1 className=\"text-center mb-4\" id=\"heading1\">Project Details</h1>\n\n//       {/* Project Overview Section */}\n//       <div className=\"card shadow-sm mb-4\">\n//         <div className=\"card-body\">\n//           <div className=\"d-flex justify-content-between\">\n//             <h2 className=\"card-title\">{project?.name}</h2>\n//             {isCreator && (\n//               <button className=\"btn btn-primary\" onClick={openEditModal}>\n//                 Edit\n//               </button>\n//             )}\n//           </div>\n//           <p className=\"card-text\">{project?.description}</p>\n//           <h4 className=\"card-title\">\n//             <pre style={{ fontFamily: 'inherit' }}>\n//               Start Date: {new Date(project.startDate).toLocaleDateString()}          <span style={{ color: 'red' }}>Due Date:</span> {new Date(project.endDate).toLocaleDateString()}\n//             </pre>\n//           </h4>\n\n//           <span className={`badge ${project?.status === 'Ongoing' ? 'bg-warning' : 'bg-success'}`}>\n//             {project?.status}\n//           </span>\n//         </div>\n//       </div>\n\n//       {isEditing && (\n//         <div className=\"modal fade show d-block\" tabIndex=\"-1\">\n//           <div className=\"modal-dialog\">\n//             <div className=\"modal-content\">\n//               <div className=\"modal-header\">\n//                 <h5 className=\"modal-title\">Edit Project</h5>\n//                 <button type=\"button\" className=\"btn-close\" onClick={closeEditModal}></button>\n//               </div>\n//               <div className=\"modal-body\">\n//                 <input\n//                   type=\"text\"\n//                   name=\"name\"\n//                   value={editedProject.name || ''}\n//                   onChange={handleInputChange}\n//                   placeholder=\"Project Name\"\n//                   className=\"form-control mb-2\"\n//                 />\n//                 <textarea\n//                   name=\"description\"\n//                   value={editedProject.description || ''}\n//                   onChange={handleInputChange}\n//                   placeholder=\"Project Description\"\n//                   className=\"form-control mb-2\"\n//                 />\n//                 <input\n//                   type=\"date\"\n//                   name=\"startDate\"\n//                   value={editedProject.startDate ? editedProject.startDate.split('T')[0] : ''}\n//                   onChange={handleInputChange}\n//                   className=\"form-control mb-2\"\n//                 />\n//                 <input\n//                   type=\"date\"\n//                   name=\"endDate\"\n//                   value={editedProject.endDate ? editedProject.endDate.split('T')[0] : ''}\n//                   onChange={handleInputChange}\n//                   className=\"form-control mb-2\"\n//                 />\n//               </div>\n//               <div className=\"modal-footer\">\n//                 <button type=\"button\" className=\"btn btn-secondary\" onClick={closeEditModal}>\n//                   Close\n//                 </button>\n//                 <button type=\"button\" className=\"btn btn-primary\" onClick={handleSave}>\n//                   Save Changes\n//                 </button>\n//               </div>\n//             </div>\n//           </div>\n//         </div>\n//       )}\n\n//       {/* Add Delete and Mark as Complete Buttons */}\n//       {isCreator && (\n//         <div className=\"mb-4 d-flex justify-content-between\">\n//           <button className=\"btn btn-danger\" onClick={handleDeleteProject}>\n//             Delete Project\n//           </button>\n//           <button className=\"btn btn-success\" onClick={handleMarkAsComplete}>\n//             Mark as Complete\n//           </button>\n//         </div>\n//       )}\n\n//       {/* Tasks Section */}\n// <div className=\"card shadow-sm mb-4\">\n//   <div className=\"card-header d-flex justify-content-between align-items-center\">\n//     <h3>Tasks</h3>\n//     {isCreator && (\n//       <button\n//         className=\"btn btn-outline-primary\"\n//         onClick={() => navigate(`/taskspage/${project._id}`)}\n//       >\n//         Manage\n//       </button>\n//     )}\n//   </div>\n\n//   {isProjectTask && (\n//     <ul className=\"list-group list-group-flush\">\n//       {projectTasks.map((task) => (\n//         <li\n//         className=\"list-group-item d-flex justify-content-between align-items-center\"\n//         key={task._id}\n//         style={{ cursor: 'pointer' }}\n//         onClick={isCreator ? () => navigate(`/task-details/${task._id}`) : null}\n//       >\n//           <span>{task.name}</span>\n//           <div>\n//             <span\n//               className={`badge ${\n//                 task.status === 'Completed'\n//                   ? 'bg-success'\n//                   : task.status === 'Ongoing'\n//                   ? 'bg-warning'\n//                   : 'bg-secondary'\n//               }`}\n//             >\n//               {task.status}\n//             </span>\n//             {/* Remove Button visible only to project manager */}\n//             {isCreator && (\n//               <button\n//                 className=\"btn btn-danger ms-2\"\n//                 onClick={() => handleRemoveTask(task._id)}\n//               >\n//                 Remove\n//               </button>\n//             )}\n//           </div>\n//         </li>\n//       ))}\n//     </ul>\n//   )}\n// </div>\n\n//       {/* Team Members Section */}\n//       <div className=\"card shadow-sm\">\n//         <div className=\"card-header d-flex justify-content-between align-items-center\">\n//           <h3>Team Members</h3>\n//           {isCreator && (\n//             <button className=\"btn btn-outline-primary\" onClick={openTeamModal}>\n//               Manage\n//             </button>\n//           )}\n//         </div>\n//         {isTeamMembers && (\n//           <ul className=\"list-group list-group-flush\">\n//             {teamMembers.map((member) => (\n//               <li className=\"list-group-item d-flex justify-content-between align-items-center\" key={member._id}>\n//                 {member.name} - <span className=\"text-muted\">{member.role}</span>\n//                 {isCreator && (\n//                   <button className=\"btn btn-danger\" onClick={() => handleRemoveTeamMember(member.user_id)}>\n//                     Remove\n//                   </button>\n//                 )}\n//               </li>\n//             ))}\n//           </ul>\n//         )}\n//       </div>\n\n//       {/* Modal for Managing Team Members */}\n//       {showTeamModal && (\n//         <div className=\"modal fade show d-block\" tabIndex=\"-1\">\n//           <div className=\"modal-dialog\">\n//             <div className=\"modal-content\">\n//               <div className=\"modal-header\">\n//                 <h5 className=\"modal-title\">Add Team Member</h5>\n//                 <button type=\"button\" className=\"btn-close\" onClick={closeTeamModal}></button>\n//               </div>\n//               <div className=\"modal-body\">\n//                 <input\n//                   type=\"text\"\n//                   value={newTeamMember}\n//                   onChange={(e) => setNewTeamMember(e.target.value)}\n//                   placeholder=\"Enter User ID\"\n//                   className=\"form-control mb-2\"\n//                 />\n//                 <input\n//                   type=\"text\"\n//                   value={newRole}\n//                   onChange={(e) => setNewRole(e.target.value)}\n//                   placeholder=\"Enter Role\"\n//                   className=\"form-control mb-2\"\n//                 />\n//               </div>\n//               <div className=\"modal-footer\">\n//                 <button type=\"button\" className=\"btn btn-secondary\" onClick={closeTeamModal}>\n//                   Close\n//                 </button>\n//                 <button type=\"button\" className=\"btn btn-primary\" onClick={handleAddTeamMember}>\n//                   Add\n//                 </button>\n//               </div>\n//             </div>\n//           </div>\n//         </div>\n//       )}\n//     </div>\n//   );\n// }\n\n// export default ProjectDetails;\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport './ProjectDetails.css'; // Import custom CSS\nimport { useAuth } from \"../AuthContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ProjectDetails() {\n  _s();\n  const {\n    projectId\n  } = useParams(); // Get projectId from URL\n  const [project, setProject] = useState(null);\n  const navigate = useNavigate();\n  const [isProjectTask, setIsProjectTask] = useState(false);\n  const [projectTasks, setProjectTasks] = useState([]);\n  const [isTeamMembers, setIsTeamMembers] = useState(false);\n  const [teamMembers, setTeamMembers] = useState([]);\n  const [isEditing, setIsEditing] = useState(false); // State for handling edit mode\n  const [editedProject, setEditedProject] = useState({});\n  const [newTeamMember, setNewTeamMember] = useState(''); // Input for adding a new team member\n  const [newRole, setNewRole] = useState('');\n  const [showTeamModal, setShowTeamModal] = useState(false); // Modal visibility\n  const {\n    user\n  } = useAuth();\n  const loggedInUserId = user.id;\n  useEffect(() => {\n    const fetchProjectDetails = async () => {\n      try {\n        const response = await axios.get(`http://localhost:5000/api/project/${projectId}`);\n        const {\n          project,\n          tasks\n        } = response.data;\n        setProject(project);\n        setProjectTasks(tasks || []);\n        setIsProjectTask(!!tasks);\n        setTeamMembers(project.teamMembers || []);\n        setIsTeamMembers(!!project.teamMembers);\n        setEditedProject(project);\n      } catch (err) {\n        console.error('Error fetching project details:', err);\n      }\n    };\n    fetchProjectDetails();\n  }, [projectId]);\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setEditedProject({\n      ...editedProject,\n      [name]: value\n    });\n  };\n  const handleSave = async () => {\n    try {\n      await axios.patch(`http://localhost:5000/api/project/${projectId}`, editedProject);\n      setProject(editedProject);\n      setIsEditing(false);\n      closeEditModal();\n    } catch (err) {\n      console.error('Error updating project:', err);\n    }\n  };\n  const handleAddTeamMember = async () => {\n    try {\n      const response = await axios.post(`http://localhost:5000/api/project/${projectId}/team-members`, {\n        user_id: newTeamMember,\n        role: newRole\n      });\n      setTeamMembers(response.data.project.teamMembers);\n      setNewTeamMember('');\n      setShowTeamModal(false);\n    } catch (err) {\n      console.error('Error adding team member:', err);\n    }\n  };\n  const handleRemoveTeamMember = async member_id => {\n    try {\n      await axios.delete(`http://localhost:5000/api/project/${projectId}/team-members/${member_id}`);\n      setTeamMembers(prevMembers => prevMembers.filter(member => member.user_id !== member_id));\n    } catch (err) {\n      console.error('Error removing team member:', err);\n    }\n  };\n  const handleDeleteProject = async () => {\n    try {\n      await axios.delete(`http://localhost:5000/api/project/${projectId}`);\n      navigate('/projectsPage'); // Navigate to project list after deletion\n    } catch (err) {\n      console.error('Error deleting project:', err);\n    }\n  };\n  const handleMarkAsComplete = async () => {\n    try {\n      editedProject.status = \"Completed\";\n      await axios.patch(`http://localhost:5000/api/project/${projectId}`, editedProject);\n      setProject(prevProject => ({\n        ...prevProject,\n        status: 'Completed'\n      }));\n    } catch (err) {\n      console.error('Error marking project as complete:', err);\n    }\n  };\n  const handleRemoveTask = async taskId => {\n    try {\n      await axios.delete(`http://localhost:5000/api/project/${projectId}/${taskId}`);\n      setProjectTasks(prevTasks => prevTasks.filter(task => task._id !== taskId));\n    } catch (err) {\n      console.error('Error removing task:', err);\n    }\n  };\n  const openEditModal = () => setIsEditing(true);\n  const closeEditModal = () => setIsEditing(false);\n  const openTeamModal = () => setShowTeamModal(true);\n  const closeTeamModal = () => setShowTeamModal(false);\n  if (!project) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading project details...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 481,\n      columnNumber: 12\n    }, this);\n  }\n  const isCreator = project.created_by === loggedInUserId;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5 project-details-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-center mb-4\",\n      id: \"heading1\",\n      children: \"Project Details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 488,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card shadow-sm mb-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex justify-content-between\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"card-title\",\n            children: project.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 494,\n            columnNumber: 13\n          }, this), isCreator && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary\",\n            onClick: openEditModal,\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 496,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 493,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"card-text\",\n          children: project.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 499,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"card-title\",\n          children: /*#__PURE__*/_jsxDEV(\"pre\", {\n            style: {\n              fontFamily: 'inherit'\n            },\n            children: [\"Start Date: \", new Date(project.startDate).toLocaleDateString(), /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                color: 'red'\n              },\n              children: \"Due Date:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 503,\n              columnNumber: 15\n            }, this), \" \", new Date(project.endDate).toLocaleDateString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 501,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 500,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: `badge ${project.status === 'Ongoing' ? 'bg-warning' : 'bg-success'}`,\n          children: project.status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 506,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 492,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 491,\n      columnNumber: 7\n    }, this), isEditing && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal fade show d-block\",\n      tabIndex: \"-1\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-dialog\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"modal-title\",\n              children: \"Edit Project\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 518,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"btn-close\",\n              onClick: closeEditModal\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 519,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 517,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-body\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"name\",\n              value: editedProject.name || '',\n              onChange: handleInputChange,\n              placeholder: \"Project Name\",\n              className: \"form-control mb-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 522,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              name: \"description\",\n              value: editedProject.description || '',\n              onChange: handleInputChange,\n              placeholder: \"Project Description\",\n              className: \"form-control mb-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 530,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"date\",\n              name: \"startDate\",\n              value: editedProject.startDate ? editedProject.startDate.split('T')[0] : '',\n              onChange: handleInputChange,\n              className: \"form-control mb-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 537,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"date\",\n              name: \"endDate\",\n              value: editedProject.endDate ? editedProject.endDate.split('T')[0] : '',\n              onChange: handleInputChange,\n              className: \"form-control mb-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 544,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 521,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-footer\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"btn btn-secondary\",\n              onClick: closeEditModal,\n              children: \"Close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 553,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"btn btn-primary\",\n              onClick: handleSave,\n              children: \"Save Changes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 554,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 552,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 516,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 515,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 514,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card shadow-sm mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Team Members\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 564,\n          columnNumber: 11\n        }, this), isCreator && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-success\",\n          onClick: openTeamModal,\n          children: \"Add Team Member\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 566,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 563,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"list-group\",\n          children: teamMembers.map(member => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"list-group-item d-flex justify-content-between align-items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: [member.name, \" - \", member.role]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 573,\n              columnNumber: 17\n            }, this), isCreator && /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-danger btn-sm\",\n              onClick: () => handleRemoveTeamMember(member.user_id),\n              children: \"Remove\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 575,\n              columnNumber: 19\n            }, this)]\n          }, member.user_id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 572,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 570,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 569,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 562,\n      columnNumber: 7\n    }, this), showTeamModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal fade show d-block\",\n      tabIndex: \"-1\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-dialog\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"modal-title\",\n              children: \"Add Team Member\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 594,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"btn-close\",\n              onClick: closeTeamModal\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 595,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 593,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-body\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: newTeamMember,\n                onChange: e => setNewTeamMember(e.target.value),\n                placeholder: \"User ID\",\n                className: \"form-control\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 599,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: newRole,\n                onChange: e => setNewRole(e.target.value),\n                placeholder: \"Role\",\n                className: \"form-control mt-2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 606,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 598,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 597,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-footer\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"btn btn-secondary\",\n              onClick: closeTeamModal,\n              children: \"Close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 616,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"btn btn-primary\",\n              onClick: handleAddTeamMember,\n              children: \"Add\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 617,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 615,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 592,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 591,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 590,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card shadow-sm mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Tasks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 627,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 626,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: isProjectTask ? /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"list-group\",\n          children: projectTasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"list-group-item d-flex justify-content-between align-items-center\",\n            children: [task.name, isCreator && /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-danger btn-sm\",\n              onClick: () => handleRemoveTask(task._id),\n              children: \"Remove\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 636,\n              columnNumber: 21\n            }, this)]\n          }, task._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 633,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 631,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No tasks assigned for this project.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 647,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 629,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 625,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex justify-content-between\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-warning\",\n        onClick: handleMarkAsComplete,\n        children: \"Mark as Complete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 654,\n        columnNumber: 9\n      }, this), isCreator && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-danger\",\n        onClick: handleDeleteProject,\n        children: \"Delete Project\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 656,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 653,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 487,\n    columnNumber: 5\n  }, this);\n}\n_s(ProjectDetails, \"ZJeHz2d8g/D0guGG9LZOAW6WPKw=\", false, function () {\n  return [useParams, useNavigate, useAuth];\n});\n_c = ProjectDetails;\nexport default ProjectDetails;\nvar _c;\n$RefreshReg$(_c, \"ProjectDetails\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","useParams","axios","useAuth","jsxDEV","_jsxDEV","ProjectDetails","_s","projectId","project","setProject","navigate","isProjectTask","setIsProjectTask","projectTasks","setProjectTasks","isTeamMembers","setIsTeamMembers","teamMembers","setTeamMembers","isEditing","setIsEditing","editedProject","setEditedProject","newTeamMember","setNewTeamMember","newRole","setNewRole","showTeamModal","setShowTeamModal","user","loggedInUserId","id","fetchProjectDetails","response","get","tasks","data","err","console","error","handleInputChange","e","name","value","target","handleSave","patch","closeEditModal","handleAddTeamMember","post","user_id","role","handleRemoveTeamMember","member_id","delete","prevMembers","filter","member","handleDeleteProject","handleMarkAsComplete","status","prevProject","handleRemoveTask","taskId","prevTasks","task","_id","openEditModal","openTeamModal","closeTeamModal","children","fileName","_jsxFileName","lineNumber","columnNumber","isCreator","created_by","className","onClick","description","style","fontFamily","Date","startDate","toLocaleDateString","color","endDate","tabIndex","type","onChange","placeholder","split","map","_c","$RefreshReg$"],"sources":["F:/Project-Management-App/frontend/src/components/ProjectDetails.js"],"sourcesContent":["// import 'bootstrap/dist/css/bootstrap.min.css';\r\n// import React, { useEffect, useState } from 'react';\r\n// import { useNavigate, useParams } from 'react-router-dom';\r\n// import axios from 'axios';\r\n// import './ProjectDetails.css'; // Import custom CSS\r\n// import { useAuth } from \"../AuthContext\";\r\n\r\n// function ProjectDetails() {\r\n//   const { projectId } = useParams(); // Get projectId from URL\r\n//   const [project, setProject] = useState(null);\r\n//   const navigate = useNavigate();\r\n//   const [isProjectTask, setIsProjectTask] = useState(false);\r\n//   const [projectTasks, setProjectTasks] = useState([]);\r\n//   const [isTeamMembers, setIsTeamMembers] = useState(false);\r\n//   const [teamMembers, setTeamMembers] = useState([]);\r\n//   const [isEditing, setIsEditing] = useState(false); // State for handling edit mode\r\n//   const [editedProject, setEditedProject] = useState({});\r\n//   const [newTeamMember, setNewTeamMember] = useState(''); // Input for adding a new team member\r\n//   const [newRole, setNewRole] = useState('');\r\n//   const [showTeamModal, setShowTeamModal] = useState(false); // Modal visibility\r\n//   const { user } = useAuth();\r\n//   const loggedInUserId = user.id;\r\n\r\n//   useEffect(() => {\r\n//     const fetchProjectDetails = async () => {\r\n//       try {\r\n//         // Fetch project details, tasks, and team members\r\n//         const response = await axios.get(`http://localhost:5000/api/project/${projectId}`);\r\n//         let { project, tasks, teamMembers } = response.data;\r\n//         teamMembers = project.teamMembers;\r\n//         console.log(project);\r\n//         console.log(tasks);\r\n\r\n//         if (tasks) {\r\n//           setProjectTasks(tasks);\r\n//           setIsProjectTask(true);\r\n//         }\r\n//         setProject(project);\r\n//         if (teamMembers) {\r\n//           setIsTeamMembers(true);\r\n//           setTeamMembers(project.teamMembers || []);\r\n//         }\r\n\r\n//         console.log(teamMembers);\r\n//         setEditedProject(project);\r\n//       } catch (err) {\r\n//         console.error('Error fetching project details:', err);\r\n//       }\r\n//     };\r\n\r\n//     fetchProjectDetails();\r\n//   }, [projectId]);\r\n\r\n//   // Handle input changes for the editable form\r\n//   const handleInputChange = (e) => {\r\n//     const { name, value } = e.target;\r\n//     setEditedProject({ ...editedProject, [name]: value });\r\n//   };\r\n\r\n//   // Function to save the updated project details\r\n//   const handleSave = async () => {\r\n//     try {\r\n//       await axios.patch(`http://localhost:5000/api/project/${projectId}`, editedProject);\r\n//       setProject(editedProject);\r\n//       setIsEditing(false);\r\n//       closeEditModal();\r\n//     } catch (err) {\r\n//       console.error('Error updating project:', err);\r\n//     }\r\n//   };\r\n\r\n//   const handleAddTeamMember = async () => {\r\n//     try {\r\n//       const response = await axios.post(`http://localhost:5000/api/project/${projectId}/team-members`, {\r\n//         'user_id': newTeamMember,\r\n//         'role': newRole,\r\n//       });\r\n//       console.log(response.data.project.teamMembers);\r\n//       setTeamMembers(response.data.project.teamMembers); // Update team members\r\n//       setNewTeamMember('');\r\n//       setShowTeamModal(false);\r\n//     } catch (err) {\r\n//       console.error('Error adding team member:', err);\r\n//     }\r\n//   };\r\n\r\n//   const handleRemoveTeamMember = async (member_id) => {\r\n//     try {\r\n//       // Use a parameterized URL to pass the member_id\r\n//       await axios.delete(`http://localhost:5000/api/project/${projectId}/team-members/${member_id}`);\r\n//       // Update state to remove the team member from the list\r\n//       setTeamMembers(teamMembers.filter((member) => member.user_id !== member_id));\r\n//     } catch (err) {\r\n//       console.error('Error removing team member:', err);\r\n//     }\r\n//   };\r\n\r\n//   const handleDeleteProject = async () => {\r\n//     try {\r\n//       await axios.delete(`http://localhost:5000/api/project/${projectId}`);\r\n//       navigate('/projectsPage'); // Navigate to project list after deletion\r\n//     } catch (err) {\r\n//       console.error('Error deleting project:', err);\r\n//     }\r\n//   };\r\n\r\n//   const handleMarkAsComplete = async () => {\r\n//     try {\r\n//       editedProject.status=\"Completed\";\r\n//       console.log(editedProject);\r\n//       await axios.patch(`http://localhost:5000/api/project/${projectId}`, editedProject);\r\n//       setProject({ ...project, status: 'Completed' });\r\n//     } catch (err) {\r\n//       console.error('Error marking project as complete:', err);\r\n//     }\r\n//   };\r\n\r\n//   const handleRemoveTask = async (taskId) => {\r\n//     try {\r\n//       // Send a DELETE request to remove the task by its taskId\r\n//       await axios.delete(`http://localhost:5000/api/project/${projectId}/${taskId}`);\r\n//       // Update the state to remove the task from the list\r\n//       setProjectTasks(projectTasks.filter((task) => task._id !== taskId));\r\n//     } catch (err) {\r\n//       console.error('Error removing task:', err);\r\n//     }\r\n//   };\r\n  \r\n\r\n//   const openEditModal = () => {\r\n//     setIsEditing(true);\r\n//   };\r\n\r\n//   const closeEditModal = () => {\r\n//     setIsEditing(false);\r\n//   };\r\n\r\n//   const openTeamModal = () => {\r\n//     setShowTeamModal(true);\r\n//   };\r\n\r\n//   const closeTeamModal = () => {\r\n//     setShowTeamModal(false);\r\n//   };\r\n\r\n//   if (!project) {\r\n//     return <div>Loading project details...</div>;\r\n//   }\r\n\r\n//   const isCreator = project.created_by === loggedInUserId;\r\n\r\n//   return (\r\n//     <div className=\"container mt-5\">\r\n//       <h1 className=\"text-center mb-4\" id=\"heading1\">Project Details</h1>\r\n\r\n//       {/* Project Overview Section */}\r\n//       <div className=\"card shadow-sm mb-4\">\r\n//         <div className=\"card-body\">\r\n//           <div className=\"d-flex justify-content-between\">\r\n//             <h2 className=\"card-title\">{project?.name}</h2>\r\n//             {isCreator && (\r\n//               <button className=\"btn btn-primary\" onClick={openEditModal}>\r\n//                 Edit\r\n//               </button>\r\n//             )}\r\n//           </div>\r\n//           <p className=\"card-text\">{project?.description}</p>\r\n//           <h4 className=\"card-title\">\r\n//             <pre style={{ fontFamily: 'inherit' }}>\r\n//               Start Date: {new Date(project.startDate).toLocaleDateString()}          <span style={{ color: 'red' }}>Due Date:</span> {new Date(project.endDate).toLocaleDateString()}\r\n//             </pre>\r\n//           </h4>\r\n\r\n//           <span className={`badge ${project?.status === 'Ongoing' ? 'bg-warning' : 'bg-success'}`}>\r\n//             {project?.status}\r\n//           </span>\r\n//         </div>\r\n//       </div>\r\n\r\n//       {isEditing && (\r\n//         <div className=\"modal fade show d-block\" tabIndex=\"-1\">\r\n//           <div className=\"modal-dialog\">\r\n//             <div className=\"modal-content\">\r\n//               <div className=\"modal-header\">\r\n//                 <h5 className=\"modal-title\">Edit Project</h5>\r\n//                 <button type=\"button\" className=\"btn-close\" onClick={closeEditModal}></button>\r\n//               </div>\r\n//               <div className=\"modal-body\">\r\n//                 <input\r\n//                   type=\"text\"\r\n//                   name=\"name\"\r\n//                   value={editedProject.name || ''}\r\n//                   onChange={handleInputChange}\r\n//                   placeholder=\"Project Name\"\r\n//                   className=\"form-control mb-2\"\r\n//                 />\r\n//                 <textarea\r\n//                   name=\"description\"\r\n//                   value={editedProject.description || ''}\r\n//                   onChange={handleInputChange}\r\n//                   placeholder=\"Project Description\"\r\n//                   className=\"form-control mb-2\"\r\n//                 />\r\n//                 <input\r\n//                   type=\"date\"\r\n//                   name=\"startDate\"\r\n//                   value={editedProject.startDate ? editedProject.startDate.split('T')[0] : ''}\r\n//                   onChange={handleInputChange}\r\n//                   className=\"form-control mb-2\"\r\n//                 />\r\n//                 <input\r\n//                   type=\"date\"\r\n//                   name=\"endDate\"\r\n//                   value={editedProject.endDate ? editedProject.endDate.split('T')[0] : ''}\r\n//                   onChange={handleInputChange}\r\n//                   className=\"form-control mb-2\"\r\n//                 />\r\n//               </div>\r\n//               <div className=\"modal-footer\">\r\n//                 <button type=\"button\" className=\"btn btn-secondary\" onClick={closeEditModal}>\r\n//                   Close\r\n//                 </button>\r\n//                 <button type=\"button\" className=\"btn btn-primary\" onClick={handleSave}>\r\n//                   Save Changes\r\n//                 </button>\r\n//               </div>\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n\r\n//       {/* Add Delete and Mark as Complete Buttons */}\r\n//       {isCreator && (\r\n//         <div className=\"mb-4 d-flex justify-content-between\">\r\n//           <button className=\"btn btn-danger\" onClick={handleDeleteProject}>\r\n//             Delete Project\r\n//           </button>\r\n//           <button className=\"btn btn-success\" onClick={handleMarkAsComplete}>\r\n//             Mark as Complete\r\n//           </button>\r\n//         </div>\r\n//       )}\r\n\r\n//       {/* Tasks Section */}\r\n// <div className=\"card shadow-sm mb-4\">\r\n//   <div className=\"card-header d-flex justify-content-between align-items-center\">\r\n//     <h3>Tasks</h3>\r\n//     {isCreator && (\r\n//       <button\r\n//         className=\"btn btn-outline-primary\"\r\n//         onClick={() => navigate(`/taskspage/${project._id}`)}\r\n//       >\r\n//         Manage\r\n//       </button>\r\n//     )}\r\n//   </div>\r\n\r\n//   {isProjectTask && (\r\n//     <ul className=\"list-group list-group-flush\">\r\n//       {projectTasks.map((task) => (\r\n//         <li\r\n//         className=\"list-group-item d-flex justify-content-between align-items-center\"\r\n//         key={task._id}\r\n//         style={{ cursor: 'pointer' }}\r\n//         onClick={isCreator ? () => navigate(`/task-details/${task._id}`) : null}\r\n//       >\r\n//           <span>{task.name}</span>\r\n//           <div>\r\n//             <span\r\n//               className={`badge ${\r\n//                 task.status === 'Completed'\r\n//                   ? 'bg-success'\r\n//                   : task.status === 'Ongoing'\r\n//                   ? 'bg-warning'\r\n//                   : 'bg-secondary'\r\n//               }`}\r\n//             >\r\n//               {task.status}\r\n//             </span>\r\n//             {/* Remove Button visible only to project manager */}\r\n//             {isCreator && (\r\n//               <button\r\n//                 className=\"btn btn-danger ms-2\"\r\n//                 onClick={() => handleRemoveTask(task._id)}\r\n//               >\r\n//                 Remove\r\n//               </button>\r\n//             )}\r\n//           </div>\r\n//         </li>\r\n//       ))}\r\n//     </ul>\r\n//   )}\r\n// </div>\r\n\r\n\r\n//       {/* Team Members Section */}\r\n//       <div className=\"card shadow-sm\">\r\n//         <div className=\"card-header d-flex justify-content-between align-items-center\">\r\n//           <h3>Team Members</h3>\r\n//           {isCreator && (\r\n//             <button className=\"btn btn-outline-primary\" onClick={openTeamModal}>\r\n//               Manage\r\n//             </button>\r\n//           )}\r\n//         </div>\r\n//         {isTeamMembers && (\r\n//           <ul className=\"list-group list-group-flush\">\r\n//             {teamMembers.map((member) => (\r\n//               <li className=\"list-group-item d-flex justify-content-between align-items-center\" key={member._id}>\r\n//                 {member.name} - <span className=\"text-muted\">{member.role}</span>\r\n//                 {isCreator && (\r\n//                   <button className=\"btn btn-danger\" onClick={() => handleRemoveTeamMember(member.user_id)}>\r\n//                     Remove\r\n//                   </button>\r\n//                 )}\r\n//               </li>\r\n//             ))}\r\n//           </ul>\r\n//         )}\r\n//       </div>\r\n\r\n//       {/* Modal for Managing Team Members */}\r\n//       {showTeamModal && (\r\n//         <div className=\"modal fade show d-block\" tabIndex=\"-1\">\r\n//           <div className=\"modal-dialog\">\r\n//             <div className=\"modal-content\">\r\n//               <div className=\"modal-header\">\r\n//                 <h5 className=\"modal-title\">Add Team Member</h5>\r\n//                 <button type=\"button\" className=\"btn-close\" onClick={closeTeamModal}></button>\r\n//               </div>\r\n//               <div className=\"modal-body\">\r\n//                 <input\r\n//                   type=\"text\"\r\n//                   value={newTeamMember}\r\n//                   onChange={(e) => setNewTeamMember(e.target.value)}\r\n//                   placeholder=\"Enter User ID\"\r\n//                   className=\"form-control mb-2\"\r\n//                 />\r\n//                 <input\r\n//                   type=\"text\"\r\n//                   value={newRole}\r\n//                   onChange={(e) => setNewRole(e.target.value)}\r\n//                   placeholder=\"Enter Role\"\r\n//                   className=\"form-control mb-2\"\r\n//                 />\r\n//               </div>\r\n//               <div className=\"modal-footer\">\r\n//                 <button type=\"button\" className=\"btn btn-secondary\" onClick={closeTeamModal}>\r\n//                   Close\r\n//                 </button>\r\n//                 <button type=\"button\" className=\"btn btn-primary\" onClick={handleAddTeamMember}>\r\n//                   Add\r\n//                 </button>\r\n//               </div>\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default ProjectDetails;\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport './ProjectDetails.css'; // Import custom CSS\r\nimport { useAuth } from \"../AuthContext\";\r\n\r\nfunction ProjectDetails() {\r\n  const { projectId } = useParams(); // Get projectId from URL\r\n  const [project, setProject] = useState(null);\r\n  const navigate = useNavigate();\r\n  const [isProjectTask, setIsProjectTask] = useState(false);\r\n  const [projectTasks, setProjectTasks] = useState([]);\r\n  const [isTeamMembers, setIsTeamMembers] = useState(false);\r\n  const [teamMembers, setTeamMembers] = useState([]);\r\n  const [isEditing, setIsEditing] = useState(false); // State for handling edit mode\r\n  const [editedProject, setEditedProject] = useState({});\r\n  const [newTeamMember, setNewTeamMember] = useState(''); // Input for adding a new team member\r\n  const [newRole, setNewRole] = useState('');\r\n  const [showTeamModal, setShowTeamModal] = useState(false); // Modal visibility\r\n  const { user } = useAuth();\r\n  const loggedInUserId = user.id;\r\n\r\n  useEffect(() => {\r\n    const fetchProjectDetails = async () => {\r\n      try {\r\n        const response = await axios.get(`http://localhost:5000/api/project/${projectId}`);\r\n        const { project, tasks } = response.data;\r\n        setProject(project);\r\n        setProjectTasks(tasks || []);\r\n        setIsProjectTask(!!tasks);\r\n        setTeamMembers(project.teamMembers || []);\r\n        setIsTeamMembers(!!project.teamMembers);\r\n        setEditedProject(project);\r\n      } catch (err) {\r\n        console.error('Error fetching project details:', err);\r\n      }\r\n    };\r\n\r\n    fetchProjectDetails();\r\n  }, [projectId]);\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setEditedProject({ ...editedProject, [name]: value });\r\n  };\r\n\r\n  const handleSave = async () => {\r\n    try {\r\n      await axios.patch(`http://localhost:5000/api/project/${projectId}`, editedProject);\r\n      setProject(editedProject);\r\n      setIsEditing(false);\r\n      closeEditModal();\r\n    } catch (err) {\r\n      console.error('Error updating project:', err);\r\n    }\r\n  };\r\n\r\n  const handleAddTeamMember = async () => {\r\n    try {\r\n      const response = await axios.post(`http://localhost:5000/api/project/${projectId}/team-members`, {\r\n        user_id: newTeamMember,\r\n        role: newRole,\r\n      });\r\n      setTeamMembers(response.data.project.teamMembers);\r\n      setNewTeamMember('');\r\n      setShowTeamModal(false);\r\n    } catch (err) {\r\n      console.error('Error adding team member:', err);\r\n    }\r\n  };\r\n\r\n  const handleRemoveTeamMember = async (member_id) => {\r\n    try {\r\n      await axios.delete(`http://localhost:5000/api/project/${projectId}/team-members/${member_id}`);\r\n      setTeamMembers((prevMembers) => prevMembers.filter((member) => member.user_id !== member_id));\r\n    } catch (err) {\r\n      console.error('Error removing team member:', err);\r\n    }\r\n  };\r\n\r\n  const handleDeleteProject = async () => {\r\n    try {\r\n      await axios.delete(`http://localhost:5000/api/project/${projectId}`);\r\n      navigate('/projectsPage'); // Navigate to project list after deletion\r\n    } catch (err) {\r\n      console.error('Error deleting project:', err);\r\n    }\r\n  };\r\n\r\n  const handleMarkAsComplete = async () => {\r\n    try {\r\n      editedProject.status = \"Completed\";\r\n      await axios.patch(`http://localhost:5000/api/project/${projectId}`, editedProject);\r\n      setProject((prevProject) => ({ ...prevProject, status: 'Completed' }));\r\n    } catch (err) {\r\n      console.error('Error marking project as complete:', err);\r\n    }\r\n  };\r\n\r\n  const handleRemoveTask = async (taskId) => {\r\n    try {\r\n      await axios.delete(`http://localhost:5000/api/project/${projectId}/${taskId}`);\r\n      setProjectTasks((prevTasks) => prevTasks.filter((task) => task._id !== taskId));\r\n    } catch (err) {\r\n      console.error('Error removing task:', err);\r\n    }\r\n  };\r\n\r\n  const openEditModal = () => setIsEditing(true);\r\n  const closeEditModal = () => setIsEditing(false);\r\n  const openTeamModal = () => setShowTeamModal(true);\r\n  const closeTeamModal = () => setShowTeamModal(false);\r\n\r\n  if (!project) {\r\n    return <div>Loading project details...</div>;\r\n  }\r\n\r\n  const isCreator = project.created_by === loggedInUserId;\r\n\r\n  return (\r\n    <div className=\"container mt-5 project-details-container\">\r\n      <h1 className=\"text-center mb-4\" id=\"heading1\">Project Details</h1>\r\n\r\n      {/* Project Overview Section */}\r\n      <div className=\"card shadow-sm mb-4\">\r\n        <div className=\"card-body\">\r\n          <div className=\"d-flex justify-content-between\">\r\n            <h2 className=\"card-title\">{project.name}</h2>\r\n            {isCreator && (\r\n              <button className=\"btn btn-primary\" onClick={openEditModal}>Edit</button>\r\n            )}\r\n          </div>\r\n          <p className=\"card-text\">{project.description}</p>\r\n          <h4 className=\"card-title\">\r\n            <pre style={{ fontFamily: 'inherit' }}>\r\n              Start Date: {new Date(project.startDate).toLocaleDateString()} \r\n              <span style={{ color: 'red' }}>Due Date:</span> {new Date(project.endDate).toLocaleDateString()}\r\n            </pre>\r\n          </h4>\r\n          <span className={`badge ${project.status === 'Ongoing' ? 'bg-warning' : 'bg-success'}`}>\r\n            {project.status}\r\n          </span>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Edit Project Modal */}\r\n      {isEditing && (\r\n        <div className=\"modal fade show d-block\" tabIndex=\"-1\">\r\n          <div className=\"modal-dialog\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h5 className=\"modal-title\">Edit Project</h5>\r\n                <button type=\"button\" className=\"btn-close\" onClick={closeEditModal}></button>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  value={editedProject.name || ''}\r\n                  onChange={handleInputChange}\r\n                  placeholder=\"Project Name\"\r\n                  className=\"form-control mb-2\"\r\n                />\r\n                <textarea\r\n                  name=\"description\"\r\n                  value={editedProject.description || ''}\r\n                  onChange={handleInputChange}\r\n                  placeholder=\"Project Description\"\r\n                  className=\"form-control mb-2\"\r\n                />\r\n                <input\r\n                  type=\"date\"\r\n                  name=\"startDate\"\r\n                  value={editedProject.startDate ? editedProject.startDate.split('T')[0] : ''}\r\n                  onChange={handleInputChange}\r\n                  className=\"form-control mb-2\"\r\n                />\r\n                <input\r\n                  type=\"date\"\r\n                  name=\"endDate\"\r\n                  value={editedProject.endDate ? editedProject.endDate.split('T')[0] : ''}\r\n                  onChange={handleInputChange}\r\n                  className=\"form-control mb-2\"\r\n                />\r\n              </div>\r\n              <div className=\"modal-footer\">\r\n                <button type=\"button\" className=\"btn btn-secondary\" onClick={closeEditModal}>Close</button>\r\n                <button type=\"button\" className=\"btn btn-primary\" onClick={handleSave}>Save Changes</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Team Members Section */}\r\n      <div className=\"card shadow-sm mb-4\">\r\n        <div className=\"card-header\">\r\n          <h3>Team Members</h3>\r\n          {isCreator && (\r\n            <button className=\"btn btn-success\" onClick={openTeamModal}>Add Team Member</button>\r\n          )}\r\n        </div>\r\n        <div className=\"card-body\">\r\n          <ul className=\"list-group\">\r\n            {teamMembers.map(member => (\r\n              <li key={member.user_id} className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                <span>{member.name} - {member.role}</span>\r\n                {isCreator && (\r\n                  <button\r\n                    className=\"btn btn-danger btn-sm\"\r\n                    onClick={() => handleRemoveTeamMember(member.user_id)}\r\n                  >\r\n                    Remove\r\n                  </button>\r\n                )}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Add Team Member Modal */}\r\n      {showTeamModal && (\r\n        <div className=\"modal fade show d-block\" tabIndex=\"-1\">\r\n          <div className=\"modal-dialog\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h5 className=\"modal-title\">Add Team Member</h5>\r\n                <button type=\"button\" className=\"btn-close\" onClick={closeTeamModal}></button>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    value={newTeamMember}\r\n                    onChange={(e) => setNewTeamMember(e.target.value)}\r\n                    placeholder=\"User ID\"\r\n                    className=\"form-control\"\r\n                  />\r\n                  <input\r\n                    type=\"text\"\r\n                    value={newRole}\r\n                    onChange={(e) => setNewRole(e.target.value)}\r\n                    placeholder=\"Role\"\r\n                    className=\"form-control mt-2\"\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"modal-footer\">\r\n                <button type=\"button\" className=\"btn btn-secondary\" onClick={closeTeamModal}>Close</button>\r\n                <button type=\"button\" className=\"btn btn-primary\" onClick={handleAddTeamMember}>Add</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Project Tasks Section */}\r\n      <div className=\"card shadow-sm mb-4\">\r\n        <div className=\"card-header\">\r\n          <h3>Tasks</h3>\r\n        </div>\r\n        <div className=\"card-body\">\r\n          {isProjectTask ? (\r\n            <ul className=\"list-group\">\r\n              {projectTasks.map(task => (\r\n                <li key={task._id} className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                  {task.name}\r\n                  {isCreator && (\r\n                    <button\r\n                      className=\"btn btn-danger btn-sm\"\r\n                      onClick={() => handleRemoveTask(task._id)}\r\n                    >\r\n                      Remove\r\n                    </button>\r\n                  )}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          ) : (\r\n            <p>No tasks assigned for this project.</p>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Action Buttons */}\r\n      <div className=\"d-flex justify-content-between\">\r\n        <button className=\"btn btn-warning\" onClick={handleMarkAsComplete}>Mark as Complete</button>\r\n        {isCreator && (\r\n          <button className=\"btn btn-danger\" onClick={handleDeleteProject}>Delete Project</button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProjectDetails;\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAC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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}