{"ast":null,"code":"var _jsxFileName = \"F:\\\\Project-Management-App\\\\frontend\\\\src\\\\components\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport React, { useEffect, useState } from 'react';\nimport Calendar from 'react-calendar';\nimport 'react-calendar/dist/Calendar.css';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios'; // Import Axios\nimport './Dashboard.css';\nimport { useAuth } from \"../AuthContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Dashboard() {\n  _s();\n  const [metrics, setMetrics] = useState({\n    totalProjects: 0,\n    completedProjects: 0,\n    activeProjects: 0\n  });\n  const [recentProjects, setRecentProjects] = useState([]); // Make sure this is initialized as an empty array\n  const [completedProject, setcompletedProject] = useState([]);\n  const [showModal, setShowModal] = useState(false);\n  const [selectedProjects, setSelectedProjects] = useState([]);\n  const [showCalendar, setShowCalendar] = useState(false);\n  const [modalTitle, setModalTitle] = useState('');\n  const [ongoingProjectsEndDates, setOngoingProjectsEndDates] = useState([]);\n  const navigate = useNavigate();\n  const {\n    user\n  } = useAuth();\n\n  // Fetching the projects data\n  const fetchProjects = async () => {\n    try {\n      if (!user) {\n        console.log(\"User is not logged in.\");\n        return; // Exit if user is not logged in\n      }\n      console.log(user);\n      const response = await axios.get(`http://localhost:5000/api/user/${user.id}/projects`);\n      const projects = response.data; // Access the actual project data\n\n      // Calculate metrics\n      const totalProjects = projects.length;\n      const completedProjects = projects.filter(project => project.status === 'Completed').length;\n      const activeProjects = projects.filter(project => project.status === 'Active').length;\n      setMetrics({\n        totalProjects,\n        completedProjects,\n        activeProjects\n      });\n\n      // Set recent projects (assuming recent projects means \"active projects\")\n      setRecentProjects(projects.filter(project => project.status === 'Active'));\n      setcompletedProject(projects.filter(project => project.status === 'Completed'));\n\n      // Collect end dates of ongoing projects\n      const ongoingEndDates = projects.filter(project => project.status === 'Active').map(project => new Date(project.endDate));\n      setOngoingProjectsEndDates(ongoingEndDates);\n    } catch (error) {\n      console.error('Error fetching projects:', error);\n    }\n  };\n  useEffect(() => {\n    if (user) {\n      fetchProjects(); // Call the function to fetch projects when the user is available\n    }\n  }, [user]); // Fetch projects when user changes\n\n  // Handle creating a new project\n  const handleCreateProject = () => {\n    navigate('/create-project');\n  };\n\n  // Handle card clicks to open modal with project details\n  const handleCardClick = (projectsList, title) => {\n    setSelectedProjects(projectsList);\n    setModalTitle(title);\n    setShowModal(true);\n  };\n  const closeModal = () => {\n    setShowModal(false);\n    setSelectedProjects([]);\n    setModalTitle('');\n  };\n\n  // Handle calendar view\n  const handleViewCalendar = () => {\n    setShowCalendar(true);\n  };\n  const closeCalendar = () => {\n    setShowCalendar(false);\n  };\n\n  // Tile content to highlight ongoing projects' end dates on the calendar\n  const tileClassName = ({\n    date,\n    view\n  }) => {\n    if (view === 'month') {\n      if (ongoingProjectsEndDates.some(endDate => endDate.getFullYear() === date.getFullYear() && endDate.getMonth() === date.getMonth() && endDate.getDate() === date.getDate())) {\n        return 'highlight-tile';\n      }\n    }\n    return null;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5 dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-center mb-4\",\n      id: \"heading1\",\n      children: \"Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card text-center shadow-sm\",\n          onClick: () => handleCardClick(recentProjects, 'Total Projects'),\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"card-title\",\n              children: \"Total Projects\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"card-text display-4\",\n              children: metrics.totalProjects\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card text-center shadow-sm\",\n          onClick: () => handleCardClick(recentProjects.filter(project => project.status === 'Active'), 'Active Projects'),\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"card-title\",\n              children: \"Active Projects\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"card-text display-4\",\n              children: metrics.activeProjects\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card text-center shadow-sm\",\n          onClick: () => handleCardClick(recentProjects.filter(project => project.status === 'Completed'), 'Completed Projects'),\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"card-title\",\n              children: \"Completed Projects\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"card-text display-4\",\n              children: completedProjects\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card shadow-sm mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Recent Projects\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"list-group list-group-flush\",\n        children: Array.isArray(recentProjects) && recentProjects.length > 0 ? recentProjects.slice(0, 3).map(project => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"list-group-item\",\n          onClick: () => navigate(`/project/${project._id}`),\n          style: {\n            cursor: 'pointer'\n          },\n          children: project.name\n        }, project._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 15\n        }, this)) : /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"list-group-item\",\n          children: \"No recent projects available.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quick-actions-section text-center mt-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary m-2\",\n        onClick: handleCreateProject,\n        children: \"Create New Project\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-secondary m-2\",\n        onClick: handleViewCalendar,\n        children: \"View Calendar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }, this), showModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-backdrop\",\n      onClick: closeModal,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal fade show\",\n        style: {\n          display: 'block'\n        },\n        tabIndex: \"-1\",\n        role: \"dialog\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-dialog\",\n          role: \"document\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-content\",\n            onClick: e => e.stopPropagation(),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"modal-header\",\n              children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                className: \"modal-title\",\n                children: [modalTitle, \": \", selectedProjects.length]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"modal-body\",\n              children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                className: \"project-list\",\n                children: selectedProjects.map(project => /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: \"project-item\",\n                  children: project.name\n                }, project._id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 218,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"modal-footer\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"btn btn-secondary\",\n                onClick: closeModal,\n                children: \"Close\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 9\n    }, this), showCalendar && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendar-backdrop\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"calendar-card card shadow-sm\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            children: \"Calendar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"close\",\n            onClick: closeCalendar,\n            \"aria-label\": \"Close\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              \"aria-hidden\": \"true\",\n              children: \"\\xD7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body\",\n          children: /*#__PURE__*/_jsxDEV(Calendar, {\n            tileClassName: tileClassName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"Png0E2nHb3UebKqBK5FWNxu5yVY=\", false, function () {\n  return [useNavigate, useAuth];\n});\n_c = Dashboard;\nexport default Dashboard;\n\n// import 'bootstrap/dist/css/bootstrap.min.css';\n// import React, { useEffect, useState } from 'react';\n// import Calendar from 'react-calendar';\n// import 'react-calendar/dist/Calendar.css';\n// import { useNavigate } from 'react-router-dom';\n// import axios from 'axios'; // Import Axios\n// import './Dashboard.css';\n// import { useAuth } from \"../AuthContext\";\n\n// function Dashboard() {\n//   const [metrics, setMetrics] = useState({\n//     totalProjects: 0,\n//     completedProjects: 0,\n//     activeProjects: 0,\n//   });\n//   const [recentProjects, setRecentProjects] = useState([{}]);\n//   const [showModal, setShowModal] = useState(false);\n//   const [selectedProjects, setSelectedProjects] = useState([{}]);\n//   const [showCalendar, setShowCalendar] = useState(false);\n//   const [modalTitle, setModalTitle] = useState('');\n//   const [ongoingProjectsEndDates, setOngoingProjectsEndDates] = useState([]);\n//   const navigate = useNavigate();\n//   const { user } = useAuth();\n\n//   const fetchProjects = async () => {\n//     try {\n//       if (!user) {\n//         console.log(\"User is not logged in.\");\n//         return; // Exit if user is not logged in\n//       }\n//       console.log(user);\n//       const response = await axios.get(`http://localhost:5000/api/user/${user.id}/projects`);\n//       const projects = response.data; // Access the actual project data\n\n//       // Calculate metrics\n//       const totalProjects = projects.length;\n//       const completedProjects = projects.filter((project) => project.status === 'Completed').length;\n//       const activeProjects = projects.filter((project) => project.status === 'Active').length;\n\n//       setMetrics({\n//         totalProjects,\n//         completedProjects,\n//         activeProjects,\n//       });\n\n//       // Set recent projects (filter for active projects)\n//       setRecentProjects(activeProjects);\n\n//       // Collect end dates of ongoing projects\n//       const ongoingEndDates = projects\n//         .filter((project) => project.status === 'Active')\n//         .map((project) => new Date(project.endDate));\n//       setOngoingProjectsEndDates(ongoingEndDates);\n//     } catch (error) {\n//       console.error('Error fetching projects:', error);\n//     }\n//   };\n\n//   useEffect(() => {\n//     if (user) {\n//       fetchProjects(); // Call the function to fetch projects when the user is available\n//     }\n//   }, [user]); // Fetch projects when user changes\n\n//   const handleCreateProject = () => {\n//     navigate('/create-project');\n//   };\n\n//   const handleCardClick = (projectsList, title) => {\n//     setSelectedProjects(projectsList);\n//     setModalTitle(title);\n//     setShowModal(true);\n//   };\n\n//   const closeModal = () => {\n//     setShowModal(false);\n//     setSelectedProjects([]);\n//     setModalTitle('');\n//   };\n\n//   const handleViewCalendar = () => {\n//     setShowCalendar(true);\n//   };\n\n//   const closeCalendar = () => {\n//     setShowCalendar(false);\n//   };\n\n//   // Tile content to highlight ongoing projects' end dates on the calendar\n//   const tileClassName = ({ date, view }) => {\n//     if (view === 'month') {\n//       if (\n//         ongoingProjectsEndDates.some(\n//           (endDate) =>\n//             endDate.getFullYear() === date.getFullYear() &&\n//             endDate.getMonth() === date.getMonth() &&\n//             endDate.getDate() === date.getDate()\n//         )\n//       ) {\n//         return 'highlight-tile';\n//       }\n//     }\n//     return null;\n//   };\n\n//   return (\n//     <div className=\"container mt-5 dashboard-container\">\n//       <h1 className=\"text-center mb-4\" id=\"heading1\">\n//         Dashboard\n//       </h1>\n\n//       {/* Metrics Section */}\n//       <div className=\"row mb-4\">\n//         <div className=\"col-md-4\">\n//           <div\n//             className=\"card text-center shadow-sm\"\n//             onClick={() => handleCardClick(recentProjects, 'Total Projects')}\n//           >\n//             <div className=\"card-body\">\n//               <h5 className=\"card-title\">Total Projects</h5>\n//               <p className=\"card-text display-4\">{metrics.totalProjects}</p>\n//             </div>\n//           </div>\n//         </div>\n//         <div className=\"col-md-4\">\n//           <div\n//             className=\"card text-center shadow-sm\"\n//             onClick={() =>\n//               handleCardClick(\n//                 recentProjects.filter((project) => project.status === 'Active'),\n//                 'Active Projects'\n//               )\n//             }\n//           >\n//             <div className=\"card-body\">\n//               <h5 className=\"card-title\">Active Projects</h5>\n//               <p className=\"card-text display-4\">{metrics.activeProjects}</p>\n//             </div>\n//           </div>\n//         </div>\n//         <div className=\"col-md-4\">\n//           <div\n//             className=\"card text-center shadow-sm\"\n//             onClick={() =>\n//               handleCardClick(\n//                 recentProjects.filter((project) => project.status === 'Completed'),\n//                 'Completed Projects'\n//               )\n//             }\n//           >\n//             <div className=\"card-body\">\n//               <h5 className=\"card-title\">Completed Projects</h5>\n//               <p className=\"card-text display-4\">{metrics.completedProjects}</p>\n//             </div>\n//           </div>\n//         </div>\n//       </div>\n\n//       {/* Recent Projects Section */}\n//       <div className=\"card shadow-sm mb-4\">\n//         <div className=\"card-header\">\n//           <h2>Recent Projects</h2>\n//         </div>\n//         <ul className=\"list-group list-group-flush\">\n//           {Array.isArray(recentProjects) && recentProjects.length > 0 ? (\n//             recentProjects.slice(0, 3).map((project) => (\n//               <li\n//                 className=\"list-group-item\"\n//                 key={project._id}\n//                 onClick={() => navigate(`/project/${project._id}`)}\n//                 style={{ cursor: 'pointer' }}\n//               >\n//                 {project.name}\n//               </li>\n//             ))\n//           ) : (\n//             <li className=\"list-group-item\">No recent projects available.</li>\n//           )}\n//         </ul>\n//       </div>\n\n//       {/* Quick Actions Section */}\n//       <div className=\"quick-actions-section text-center mt-4\">\n//         <button className=\"btn btn-primary m-2\" onClick={handleCreateProject}>\n//           Create New Project\n//         </button>\n//         <button className=\"btn btn-secondary m-2\" onClick={handleViewCalendar}>\n//           View Calendar\n//         </button>\n//       </div>\n\n//       {/* Modal for Project Details */}\n//       {showModal && (\n//         <div className=\"modal-backdrop\" onClick={closeModal}>\n//           <div\n//             className=\"modal fade show\"\n//             style={{ display: 'block' }}\n//             tabIndex=\"-1\"\n//             role=\"dialog\"\n//           >\n//             <div className=\"modal-dialog\" role=\"document\">\n//               <div className=\"modal-content\" onClick={(e) => e.stopPropagation()}>\n//                 <div className=\"modal-header\">\n//                   <h5 className=\"modal-title\">\n//                     {modalTitle}: {selectedProjects.length}\n//                   </h5>\n//                 </div>\n\n//                 <div className=\"modal-body\">\n//                   <ul className=\"project-list\">\n//                     {selectedProjects.map((project) => (\n//                       <li key={project._id} className=\"project-item\">\n//                         {project.name}\n//                       </li>\n//                     ))}\n//                   </ul>\n//                 </div>\n//                 <div className=\"modal-footer\">\n//                   <button type=\"button\" className=\"btn btn-secondary\" onClick={closeModal}>\n//                     Close\n//                   </button>\n//                 </div>\n//               </div>\n//             </div>\n//           </div>\n//         </div>\n//       )}\n\n//       {/* Calendar Modal */}\n//       {showCalendar && (\n//         <div className=\"calendar-backdrop\">\n//           <div className=\"calendar-card card shadow-sm\">\n//             <div className=\"card-header\">\n//               <h5>Calendar</h5>\n//               <button\n//                 type=\"button\"\n//                 className=\"close\"\n//                 onClick={closeCalendar}\n//                 aria-label=\"Close\"\n//               >\n//                 <span aria-hidden=\"true\">&times;</span>\n//               </button>\n//             </div>\n//             <div className=\"card-body\">\n//               <Calendar tileClassName={tileClassName} />\n//             </div>\n//           </div>\n//         </div>\n//       )}\n//     </div>\n//   );\n// }\n\n// export default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","Calendar","useNavigate","axios","useAuth","jsxDEV","_jsxDEV","Dashboard","_s","metrics","setMetrics","totalProjects","completedProjects","activeProjects","recentProjects","setRecentProjects","completedProject","setcompletedProject","showModal","setShowModal","selectedProjects","setSelectedProjects","showCalendar","setShowCalendar","modalTitle","setModalTitle","ongoingProjectsEndDates","setOngoingProjectsEndDates","navigate","user","fetchProjects","console","log","response","get","id","projects","data","length","filter","project","status","ongoingEndDates","map","Date","endDate","error","handleCreateProject","handleCardClick","projectsList","title","closeModal","handleViewCalendar","closeCalendar","tileClassName","date","view","some","getFullYear","getMonth","getDate","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","Array","isArray","slice","_id","style","cursor","name","display","tabIndex","role","e","stopPropagation","type","_c","$RefreshReg$"],"sources":["F:/Project-Management-App/frontend/src/components/Dashboard.js"],"sourcesContent":["import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport React, { useEffect, useState } from 'react';\r\nimport Calendar from 'react-calendar';\r\nimport 'react-calendar/dist/Calendar.css';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios'; // Import Axios\r\nimport './Dashboard.css';\r\nimport { useAuth } from \"../AuthContext\";\r\n\r\nfunction Dashboard() {\r\n  const [metrics, setMetrics] = useState({\r\n    totalProjects: 0,\r\n    completedProjects: 0,\r\n    activeProjects: 0,\r\n  });\r\n  const [recentProjects, setRecentProjects] = useState([]); // Make sure this is initialized as an empty array\r\n  const [completedProject, setcompletedProject] = useState([]);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [selectedProjects, setSelectedProjects] = useState([]);\r\n  const [showCalendar, setShowCalendar] = useState(false);\r\n  const [modalTitle, setModalTitle] = useState('');\r\n  const [ongoingProjectsEndDates, setOngoingProjectsEndDates] = useState([]);\r\n  const navigate = useNavigate();\r\n  const { user } = useAuth();\r\n\r\n  // Fetching the projects data\r\n  const fetchProjects = async () => {\r\n    try {\r\n      if (!user) {\r\n        console.log(\"User is not logged in.\");\r\n        return; // Exit if user is not logged in\r\n      }\r\n      console.log(user);\r\n      const response = await axios.get(`http://localhost:5000/api/user/${user.id}/projects`);\r\n      const projects = response.data; // Access the actual project data\r\n\r\n      // Calculate metrics\r\n      const totalProjects = projects.length;\r\n      const completedProjects = projects.filter((project) => project.status === 'Completed').length;\r\n      const activeProjects = projects.filter((project) => project.status === 'Active').length;\r\n\r\n      setMetrics({\r\n        totalProjects,\r\n        completedProjects,\r\n        activeProjects,\r\n      });\r\n\r\n      // Set recent projects (assuming recent projects means \"active projects\")\r\n      setRecentProjects(projects.filter((project) => project.status === 'Active'));\r\n      setcompletedProject(projects.filter((project)=> project.status==='Completed'));\r\n\r\n      // Collect end dates of ongoing projects\r\n      const ongoingEndDates = projects\r\n        .filter((project) => project.status === 'Active')\r\n        .map((project) => new Date(project.endDate));\r\n      setOngoingProjectsEndDates(ongoingEndDates);\r\n    } catch (error) {\r\n      console.error('Error fetching projects:', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      fetchProjects(); // Call the function to fetch projects when the user is available\r\n    }\r\n  }, [user]); // Fetch projects when user changes\r\n\r\n  // Handle creating a new project\r\n  const handleCreateProject = () => {\r\n    navigate('/create-project');\r\n  };\r\n\r\n  // Handle card clicks to open modal with project details\r\n  const handleCardClick = (projectsList, title) => {\r\n    setSelectedProjects(projectsList);\r\n    setModalTitle(title);\r\n    setShowModal(true);\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setShowModal(false);\r\n    setSelectedProjects([]);\r\n    setModalTitle('');\r\n  };\r\n\r\n  // Handle calendar view\r\n  const handleViewCalendar = () => {\r\n    setShowCalendar(true);\r\n  };\r\n\r\n  const closeCalendar = () => {\r\n    setShowCalendar(false);\r\n  };\r\n\r\n  // Tile content to highlight ongoing projects' end dates on the calendar\r\n  const tileClassName = ({ date, view }) => {\r\n    if (view === 'month') {\r\n      if (\r\n        ongoingProjectsEndDates.some(\r\n          (endDate) =>\r\n            endDate.getFullYear() === date.getFullYear() &&\r\n            endDate.getMonth() === date.getMonth() &&\r\n            endDate.getDate() === date.getDate()\r\n        )\r\n      ) {\r\n        return 'highlight-tile';\r\n      }\r\n    }\r\n    return null;\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mt-5 dashboard-container\">\r\n      <h1 className=\"text-center mb-4\" id=\"heading1\">\r\n        Dashboard\r\n      </h1>\r\n\r\n      {/* Metrics Section */}\r\n      <div className=\"row mb-4\">\r\n        <div className=\"col-md-4\">\r\n          <div\r\n            className=\"card text-center shadow-sm\"\r\n            onClick={() => handleCardClick(recentProjects, 'Total Projects')}\r\n          >\r\n            <div className=\"card-body\">\r\n              <h5 className=\"card-title\">Total Projects</h5>\r\n              <p className=\"card-text display-4\">{metrics.totalProjects}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-4\">\r\n          <div\r\n            className=\"card text-center shadow-sm\"\r\n            onClick={() =>\r\n              handleCardClick(\r\n                recentProjects.filter((project) => project.status === 'Active'),\r\n                'Active Projects'\r\n              )\r\n            }\r\n          >\r\n            <div className=\"card-body\">\r\n              <h5 className=\"card-title\">Active Projects</h5>\r\n              <p className=\"card-text display-4\">{metrics.activeProjects}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-4\">\r\n          <div\r\n            className=\"card text-center shadow-sm\"\r\n            onClick={() =>\r\n              handleCardClick(\r\n                recentProjects.filter((project) => project.status === 'Completed'),\r\n                'Completed Projects'\r\n              )\r\n            }\r\n          >\r\n            <div className=\"card-body\">\r\n              <h5 className=\"card-title\">Completed Projects</h5>\r\n              <p className=\"card-text display-4\">{completedProjects}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Recent Projects Section */}\r\n      <div className=\"card shadow-sm mb-4\">\r\n        <div className=\"card-header\">\r\n          <h2>Recent Projects</h2>\r\n        </div>\r\n        <ul className=\"list-group list-group-flush\">\r\n          {Array.isArray(recentProjects) && recentProjects.length > 0 ? (\r\n            recentProjects.slice(0, 3).map((project) => (\r\n              <li\r\n                className=\"list-group-item\"\r\n                key={project._id}\r\n                onClick={() => navigate(`/project/${project._id}`)}\r\n                style={{ cursor: 'pointer' }}\r\n              >\r\n                {project.name}\r\n              </li>\r\n            ))\r\n          ) : (\r\n            <li className=\"list-group-item\">No recent projects available.</li>\r\n          )}\r\n        </ul>\r\n      </div>\r\n\r\n      {/* Quick Actions Section */}\r\n      <div className=\"quick-actions-section text-center mt-4\">\r\n        <button className=\"btn btn-primary m-2\" onClick={handleCreateProject}>\r\n          Create New Project\r\n        </button>\r\n        <button className=\"btn btn-secondary m-2\" onClick={handleViewCalendar}>\r\n          View Calendar\r\n        </button>\r\n      </div>\r\n\r\n      {/* Modal for Project Details */}\r\n      {showModal && (\r\n        <div className=\"modal-backdrop\" onClick={closeModal}>\r\n          <div\r\n            className=\"modal fade show\"\r\n            style={{ display: 'block' }}\r\n            tabIndex=\"-1\"\r\n            role=\"dialog\"\r\n          >\r\n            <div className=\"modal-dialog\" role=\"document\">\r\n              <div className=\"modal-content\" onClick={(e) => e.stopPropagation()}>\r\n                <div className=\"modal-header\">\r\n                  <h5 className=\"modal-title\">\r\n                    {modalTitle}: {selectedProjects.length}\r\n                  </h5>\r\n                </div>\r\n\r\n                <div className=\"modal-body\">\r\n                  <ul className=\"project-list\">\r\n                    {selectedProjects.map((project) => (\r\n                      <li key={project._id} className=\"project-item\">\r\n                        {project.name}\r\n                      </li>\r\n                    ))}\r\n                  </ul>\r\n                </div>\r\n                <div className=\"modal-footer\">\r\n                  <button type=\"button\" className=\"btn btn-secondary\" onClick={closeModal}>\r\n                    Close\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Calendar Modal */}\r\n      {showCalendar && (\r\n        <div className=\"calendar-backdrop\">\r\n          <div className=\"calendar-card card shadow-sm\">\r\n            <div className=\"card-header\">\r\n              <h5>Calendar</h5>\r\n              <button\r\n                type=\"button\"\r\n                className=\"close\"\r\n                onClick={closeCalendar}\r\n                aria-label=\"Close\"\r\n              >\r\n                <span aria-hidden=\"true\">&times;</span>\r\n              </button>\r\n            </div>\r\n            <div className=\"card-body\">\r\n              <Calendar tileClassName={tileClassName} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import 'bootstrap/dist/css/bootstrap.min.css';\r\n// import React, { useEffect, useState } from 'react';\r\n// import Calendar from 'react-calendar';\r\n// import 'react-calendar/dist/Calendar.css';\r\n// import { useNavigate } from 'react-router-dom';\r\n// import axios from 'axios'; // Import Axios\r\n// import './Dashboard.css';\r\n// import { useAuth } from \"../AuthContext\";\r\n\r\n// function Dashboard() {\r\n//   const [metrics, setMetrics] = useState({\r\n//     totalProjects: 0,\r\n//     completedProjects: 0,\r\n//     activeProjects: 0,\r\n//   });\r\n//   const [recentProjects, setRecentProjects] = useState([{}]);\r\n//   const [showModal, setShowModal] = useState(false);\r\n//   const [selectedProjects, setSelectedProjects] = useState([{}]);\r\n//   const [showCalendar, setShowCalendar] = useState(false);\r\n//   const [modalTitle, setModalTitle] = useState('');\r\n//   const [ongoingProjectsEndDates, setOngoingProjectsEndDates] = useState([]);\r\n//   const navigate = useNavigate();\r\n//   const { user } = useAuth();\r\n\r\n//   const fetchProjects = async () => {\r\n//     try {\r\n//       if (!user) {\r\n//         console.log(\"User is not logged in.\");\r\n//         return; // Exit if user is not logged in\r\n//       }\r\n//       console.log(user);\r\n//       const response = await axios.get(`http://localhost:5000/api/user/${user.id}/projects`);\r\n//       const projects = response.data; // Access the actual project data\r\n\r\n//       // Calculate metrics\r\n//       const totalProjects = projects.length;\r\n//       const completedProjects = projects.filter((project) => project.status === 'Completed').length;\r\n//       const activeProjects = projects.filter((project) => project.status === 'Active').length;\r\n\r\n//       setMetrics({\r\n//         totalProjects,\r\n//         completedProjects,\r\n//         activeProjects,\r\n//       });\r\n\r\n      \r\n\r\n//       // Set recent projects (filter for active projects)\r\n//       setRecentProjects(activeProjects);\r\n\r\n//       // Collect end dates of ongoing projects\r\n//       const ongoingEndDates = projects\r\n//         .filter((project) => project.status === 'Active')\r\n//         .map((project) => new Date(project.endDate));\r\n//       setOngoingProjectsEndDates(ongoingEndDates);\r\n//     } catch (error) {\r\n//       console.error('Error fetching projects:', error);\r\n//     }\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     if (user) {\r\n//       fetchProjects(); // Call the function to fetch projects when the user is available\r\n//     }\r\n//   }, [user]); // Fetch projects when user changes\r\n\r\n//   const handleCreateProject = () => {\r\n//     navigate('/create-project');\r\n//   };\r\n\r\n//   const handleCardClick = (projectsList, title) => {\r\n//     setSelectedProjects(projectsList);\r\n//     setModalTitle(title);\r\n//     setShowModal(true);\r\n//   };\r\n\r\n//   const closeModal = () => {\r\n//     setShowModal(false);\r\n//     setSelectedProjects([]);\r\n//     setModalTitle('');\r\n//   };\r\n\r\n//   const handleViewCalendar = () => {\r\n//     setShowCalendar(true);\r\n//   };\r\n\r\n//   const closeCalendar = () => {\r\n//     setShowCalendar(false);\r\n//   };\r\n\r\n//   // Tile content to highlight ongoing projects' end dates on the calendar\r\n//   const tileClassName = ({ date, view }) => {\r\n//     if (view === 'month') {\r\n//       if (\r\n//         ongoingProjectsEndDates.some(\r\n//           (endDate) =>\r\n//             endDate.getFullYear() === date.getFullYear() &&\r\n//             endDate.getMonth() === date.getMonth() &&\r\n//             endDate.getDate() === date.getDate()\r\n//         )\r\n//       ) {\r\n//         return 'highlight-tile';\r\n//       }\r\n//     }\r\n//     return null;\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"container mt-5 dashboard-container\">\r\n//       <h1 className=\"text-center mb-4\" id=\"heading1\">\r\n//         Dashboard\r\n//       </h1>\r\n\r\n//       {/* Metrics Section */}\r\n//       <div className=\"row mb-4\">\r\n//         <div className=\"col-md-4\">\r\n//           <div\r\n//             className=\"card text-center shadow-sm\"\r\n//             onClick={() => handleCardClick(recentProjects, 'Total Projects')}\r\n//           >\r\n//             <div className=\"card-body\">\r\n//               <h5 className=\"card-title\">Total Projects</h5>\r\n//               <p className=\"card-text display-4\">{metrics.totalProjects}</p>\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//         <div className=\"col-md-4\">\r\n//           <div\r\n//             className=\"card text-center shadow-sm\"\r\n//             onClick={() =>\r\n//               handleCardClick(\r\n//                 recentProjects.filter((project) => project.status === 'Active'),\r\n//                 'Active Projects'\r\n//               )\r\n//             }\r\n//           >\r\n//             <div className=\"card-body\">\r\n//               <h5 className=\"card-title\">Active Projects</h5>\r\n//               <p className=\"card-text display-4\">{metrics.activeProjects}</p>\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//         <div className=\"col-md-4\">\r\n//           <div\r\n//             className=\"card text-center shadow-sm\"\r\n//             onClick={() =>\r\n//               handleCardClick(\r\n//                 recentProjects.filter((project) => project.status === 'Completed'),\r\n//                 'Completed Projects'\r\n//               )\r\n//             }\r\n//           >\r\n//             <div className=\"card-body\">\r\n//               <h5 className=\"card-title\">Completed Projects</h5>\r\n//               <p className=\"card-text display-4\">{metrics.completedProjects}</p>\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n\r\n//       {/* Recent Projects Section */}\r\n//       <div className=\"card shadow-sm mb-4\">\r\n//         <div className=\"card-header\">\r\n//           <h2>Recent Projects</h2>\r\n//         </div>\r\n//         <ul className=\"list-group list-group-flush\">\r\n//           {Array.isArray(recentProjects) && recentProjects.length > 0 ? (\r\n//             recentProjects.slice(0, 3).map((project) => (\r\n//               <li\r\n//                 className=\"list-group-item\"\r\n//                 key={project._id}\r\n//                 onClick={() => navigate(`/project/${project._id}`)}\r\n//                 style={{ cursor: 'pointer' }}\r\n//               >\r\n//                 {project.name}\r\n//               </li>\r\n//             ))\r\n//           ) : (\r\n//             <li className=\"list-group-item\">No recent projects available.</li>\r\n//           )}\r\n//         </ul>\r\n//       </div>\r\n\r\n//       {/* Quick Actions Section */}\r\n//       <div className=\"quick-actions-section text-center mt-4\">\r\n//         <button className=\"btn btn-primary m-2\" onClick={handleCreateProject}>\r\n//           Create New Project\r\n//         </button>\r\n//         <button className=\"btn btn-secondary m-2\" onClick={handleViewCalendar}>\r\n//           View Calendar\r\n//         </button>\r\n//       </div>\r\n\r\n//       {/* Modal for Project Details */}\r\n//       {showModal && (\r\n//         <div className=\"modal-backdrop\" onClick={closeModal}>\r\n//           <div\r\n//             className=\"modal fade show\"\r\n//             style={{ display: 'block' }}\r\n//             tabIndex=\"-1\"\r\n//             role=\"dialog\"\r\n//           >\r\n//             <div className=\"modal-dialog\" role=\"document\">\r\n//               <div className=\"modal-content\" onClick={(e) => e.stopPropagation()}>\r\n//                 <div className=\"modal-header\">\r\n//                   <h5 className=\"modal-title\">\r\n//                     {modalTitle}: {selectedProjects.length}\r\n//                   </h5>\r\n//                 </div>\r\n\r\n//                 <div className=\"modal-body\">\r\n//                   <ul className=\"project-list\">\r\n//                     {selectedProjects.map((project) => (\r\n//                       <li key={project._id} className=\"project-item\">\r\n//                         {project.name}\r\n//                       </li>\r\n//                     ))}\r\n//                   </ul>\r\n//                 </div>\r\n//                 <div className=\"modal-footer\">\r\n//                   <button type=\"button\" className=\"btn btn-secondary\" onClick={closeModal}>\r\n//                     Close\r\n//                   </button>\r\n//                 </div>\r\n//               </div>\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n\r\n//       {/* Calendar Modal */}\r\n//       {showCalendar && (\r\n//         <div className=\"calendar-backdrop\">\r\n//           <div className=\"calendar-card card shadow-sm\">\r\n//             <div className=\"card-header\">\r\n//               <h5>Calendar</h5>\r\n//               <button\r\n//                 type=\"button\"\r\n//                 className=\"close\"\r\n//                 onClick={closeCalendar}\r\n//                 aria-label=\"Close\"\r\n//               >\r\n//                 <span aria-hidden=\"true\">&times;</span>\r\n//               </button>\r\n//             </div>\r\n//             <div className=\"card-body\">\r\n//               <Calendar tileClassName={tileClassName} />\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default Dashboard;\r\n"],"mappings":"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CA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAIA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAAA0E,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}