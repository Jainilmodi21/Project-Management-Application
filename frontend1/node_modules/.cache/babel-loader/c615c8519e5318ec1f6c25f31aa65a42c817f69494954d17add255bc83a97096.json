{"ast":null,"code":"var _jsxFileName = \"F:\\\\Project-Management-App\\\\frontend\\\\src\\\\components\\\\TasksPage.js\",\n  _s = $RefreshSig$();\nimport 'bootstrap/dist/css/bootstrap.min.css'; // Bootstrap styles\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom'; // For navigation\nimport axios from 'axios'; // Import axios for making HTTP requests\nimport './TasksPage.css'; // Custom styles\nimport { useAuth } from \"../AuthContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TasksPage = () => {\n  _s();\n  const navigate = useNavigate(); // To navigate programmatically\n  const [projects, setProjects] = useState([]); // State for projects where user is a team member\n  const {\n    user\n  } = useAuth(); // Auth context to get the current user\n  const [showTaskForm, setShowTaskForm] = useState({}); // Control task form visibility for each project\n  const [newTask, setNewTask] = useState({\n    name: '',\n    description: '',\n    status: 'Ongoing',\n    due_date: '',\n    assignedTo: []\n  });\n  const [teamMembers, setTeamMembers] = useState([]); // Store team members for the assigned field\n\n  // Fetch projects and tasks when the component mounts\n  useEffect(() => {\n    const fetchProjectsAndTasks = async () => {\n      try {\n        if (!user) {\n          console.log(\"User is not logged in.\");\n          return; // Exit if user is not logged in\n        }\n\n        // Fetch projects of the user\n        const response = await axios.get(`http://localhost:5000/api/user/${user.id}/projects`);\n        const fetchedProjects = response.data; // Access the actual project data\n        setProjects(fetchedProjects); // Set the projects state\n      } catch (error) {\n        console.error(\"Error fetching projects or tasks:\", error);\n      }\n    };\n    fetchProjectsAndTasks();\n  }, [user]);\n\n  // Handle adding a new task\n  const handleAddTask = async projectId => {\n    try {\n      const response = await axios.post(`http:/localhost:5000/api/task/${projectId}`, newTask);\n      // After adding the task, refresh the project list to include the new task\n      setProjects(prevProjects => prevProjects.map(project => project._id === projectId ? {\n        ...project,\n        tasks: [...project.tasks, response.data]\n      } : project));\n      setShowTaskForm(prev => ({\n        ...prev,\n        [projectId]: false\n      })); // Hide the task form after adding the task\n      setNewTask({\n        name: '',\n        description: '',\n        status: 'Ongoing',\n        due_date: '',\n        assignedTo: []\n      }); // Reset the task form\n    } catch (error) {\n      console.error(\"Error adding task:\", error);\n    }\n  };\n\n  // Function to remove a task\n  const handleRemoveTask = async (taskId, projectId) => {\n    try {\n      await axios.delete(`http/localhost:5000/api/task/${taskId}`);\n      setProjects(prevProjects => prevProjects.map(project => project._id === projectId ? {\n        ...project,\n        tasks: project.tasks.filter(task => task._id !== taskId)\n      } : project));\n    } catch (error) {\n      console.error(\"Error removing task:\", error);\n    }\n  };\n\n  // Fetch team members for a project\n  const fetchTeamMembers = async projectId => {\n    try {\n      const response = await axios.get(`http/localhost:5000/api/project/${projectId}/team-members`);\n      setTeamMembers(response.data); // Set the list of team members\n    } catch (error) {\n      console.error(\"Error fetching team members:\", error);\n    }\n  };\n\n  // Handle the form input changes\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNewTask({\n      ...newTask,\n      [name]: value\n    });\n  };\n  const handleAssignedToChange = e => {\n    const selectedOptions = Array.from(e.target.selectedOptions).map(option => option.value);\n    setNewTask({\n      ...newTask,\n      assignedTo: selectedOptions\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container tasks-page mt-4\",\n    children: projects.length > 0 ? projects.map(project => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card project-detail-card mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-header d-flex justify-content-between align-items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"mb-0\",\n          children: [project.name, /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `badge ${project.status === 'Ongoing' ? 'bg-warning' : 'bg-success'} ms-2`,\n            children: project.status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 15\n        }, this), project.created_by === user.id && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          onClick: () => {\n            setShowTaskForm(prev => ({\n              ...prev,\n              [project._id]: true\n            }));\n            fetchTeamMembers(project._id); // Fetch team members when opening task form\n          },\n          children: \"Add Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: project.tasks && project.tasks.length > 0 ? project.tasks.map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-12 mb-3\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card h-100 task-card\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-body\",\n                children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                  className: \"card-title\",\n                  children: task.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 121,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"card-text\",\n                  children: [\"Description: \", task.description]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 122,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"card-text\",\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: `badge ${task.status === 'Ongoing' ? 'bg-warning' : 'bg-success'}`,\n                    children: task.status\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 124,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 123,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"card-text\",\n                  children: [\"Due Date: \", new Date(task.due_date).toLocaleDateString()]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 128,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"card-text\",\n                  children: [\"Project: \", project.name]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 129,\n                  columnNumber: 27\n                }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"d-flex justify-content-between\",\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"btn btn-outline-primary\",\n                    onClick: () => navigate(`/task-details/${task._id}`),\n                    children: \"Manage\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 131,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"btn btn-danger btn-sm\",\n                    onClick: () => handleRemoveTask(task._id, project._id),\n                    children: \"Remove\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 137,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 130,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 23\n            }, this)\n          }, task._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 21\n          }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No tasks found for this project.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 15\n        }, this), showTaskForm[project._id] && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card task-form-card mt-4\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              children: \"Add New Task\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"form-label\",\n                  children: \"Task Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 160,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  className: \"form-control\",\n                  name: \"name\",\n                  value: newTask.name,\n                  onChange: handleInputChange,\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 161,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"form-label\",\n                  children: \"Description\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 171,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                  className: \"form-control\",\n                  name: \"description\",\n                  value: newTask.description,\n                  onChange: handleInputChange,\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 172,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"form-label\",\n                  children: \"Status\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 181,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                  className: \"form-select\",\n                  name: \"status\",\n                  value: newTask.status,\n                  onChange: handleInputChange,\n                  required: true,\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"Ongoing\",\n                    children: \"Ongoing\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 189,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"Completed\",\n                    children: \"Completed\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 190,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 182,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"form-label\",\n                  children: \"Due Date\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 194,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"date\",\n                  className: \"form-control\",\n                  name: \"due_date\",\n                  value: newTask.due_date,\n                  onChange: handleInputChange,\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 195,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"form-label\",\n                  children: \"Assigned To\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 205,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                  multiple: true,\n                  className: \"form-select\",\n                  name: \"assignedTo\",\n                  value: newTask.assignedTo,\n                  onChange: handleAssignedToChange,\n                  required: true,\n                  children: teamMembers.map(member => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: member.id,\n                    children: member.name\n                  }, member.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 215,\n                    columnNumber: 29\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 206,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"btn btn-success\",\n                onClick: () => handleAddTask(project._id) // Now specific to this project\n                ,\n                children: \"Add Task\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"btn btn-secondary ms-2\",\n                onClick: () => setShowTaskForm(prev => ({\n                  ...prev,\n                  [project._id]: false\n                })),\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }, this)]\n    }, project._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No projects found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n};\n_s(TasksPage, \"t97YcR4vVazTkXyuoRCugGznCbo=\", false, function () {\n  return [useNavigate, useAuth];\n});\n_c = TasksPage;\nexport default TasksPage;\nvar _c;\n$RefreshReg$(_c, \"TasksPage\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","axios","useAuth","jsxDEV","_jsxDEV","TasksPage","_s","navigate","projects","setProjects","user","showTaskForm","setShowTaskForm","newTask","setNewTask","name","description","status","due_date","assignedTo","teamMembers","setTeamMembers","fetchProjectsAndTasks","console","log","response","get","id","fetchedProjects","data","error","handleAddTask","projectId","post","prevProjects","map","project","_id","tasks","prev","handleRemoveTask","taskId","delete","filter","task","fetchTeamMembers","handleInputChange","e","value","target","handleAssignedToChange","selectedOptions","Array","from","option","className","children","length","fileName","_jsxFileName","lineNumber","columnNumber","created_by","onClick","Date","toLocaleDateString","type","onChange","required","multiple","member","_c","$RefreshReg$"],"sources":["F:/Project-Management-App/frontend/src/components/TasksPage.js"],"sourcesContent":["import 'bootstrap/dist/css/bootstrap.min.css'; // Bootstrap styles\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom'; // For navigation\nimport axios from 'axios'; // Import axios for making HTTP requests\nimport './TasksPage.css'; // Custom styles\nimport { useAuth } from \"../AuthContext\";\n\nconst TasksPage = () => {\n  const navigate = useNavigate(); // To navigate programmatically\n  const [projects, setProjects] = useState([]); // State for projects where user is a team member\n  const { user } = useAuth(); // Auth context to get the current user\n  const [showTaskForm, setShowTaskForm] = useState({}); // Control task form visibility for each project\n  const [newTask, setNewTask] = useState({ name: '', description: '', status: 'Ongoing', due_date: '', assignedTo: [] });\n  const [teamMembers, setTeamMembers] = useState([]); // Store team members for the assigned field\n\n  // Fetch projects and tasks when the component mounts\n  useEffect(() => {\n    const fetchProjectsAndTasks = async () => {\n      try {\n        if (!user) {\n          console.log(\"User is not logged in.\");\n          return; // Exit if user is not logged in\n        }\n\n        // Fetch projects of the user\n        const response = await axios.get(`http://localhost:5000/api/user/${user.id}/projects`);\n        const fetchedProjects = response.data; // Access the actual project data\n        setProjects(fetchedProjects); // Set the projects state\n      } catch (error) {\n        console.error(\"Error fetching projects or tasks:\", error);\n      }\n    };\n\n    fetchProjectsAndTasks();\n  }, [user]);\n\n  // Handle adding a new task\n  const handleAddTask = async (projectId) => {\n    try {\n      const response = await axios.post(`http:/localhost:5000/api/task/${projectId}`, newTask);\n      // After adding the task, refresh the project list to include the new task\n      setProjects((prevProjects) => prevProjects.map((project) =>\n        project._id === projectId ? { ...project, tasks: [...project.tasks, response.data] } : project\n      ));\n      setShowTaskForm((prev) => ({ ...prev, [projectId]: false })); // Hide the task form after adding the task\n      setNewTask({ name: '', description: '', status: 'Ongoing', due_date: '', assignedTo: [] }); // Reset the task form\n    } catch (error) {\n      console.error(\"Error adding task:\", error);\n    }\n  };\n\n  // Function to remove a task\n  const handleRemoveTask = async (taskId, projectId) => {\n    try {\n      await axios.delete(`http/localhost:5000/api/task/${taskId}`);\n      setProjects((prevProjects) =>\n        prevProjects.map((project) =>\n          project._id === projectId\n            ? { ...project, tasks: project.tasks.filter((task) => task._id !== taskId) }\n            : project\n        )\n      );\n    } catch (error) {\n      console.error(\"Error removing task:\", error);\n    }\n  };\n\n  // Fetch team members for a project\n  const fetchTeamMembers = async (projectId) => {\n    try {\n      const response = await axios.get(`http/localhost:5000/api/project/${projectId}/team-members`);\n      setTeamMembers(response.data); // Set the list of team members\n    } catch (error) {\n      console.error(\"Error fetching team members:\", error);\n    }\n  };\n\n  // Handle the form input changes\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setNewTask({ ...newTask, [name]: value });\n  };\n\n  const handleAssignedToChange = (e) => {\n    const selectedOptions = Array.from(e.target.selectedOptions).map((option) => option.value);\n    setNewTask({ ...newTask, assignedTo: selectedOptions });\n  };\n\n  return (\n    <div className=\"container tasks-page mt-4\">\n      {projects.length > 0 ? (\n        projects.map((project) => (\n          <div key={project._id} className=\"card project-detail-card mb-4\">\n            <div className=\"card-header d-flex justify-content-between align-items-center\">\n              <h2 className=\"mb-0\">{project.name}\n                <span className={`badge ${project.status === 'Ongoing' ? 'bg-warning' : 'bg-success'} ms-2`}>\n                  {project.status}\n                </span>\n              </h2>\n              {project.created_by === user.id && (\n                <button\n                  className=\"btn btn-primary\"\n                  onClick={() => {\n                    setShowTaskForm((prev) => ({ ...prev, [project._id]: true }));\n                    fetchTeamMembers(project._id); // Fetch team members when opening task form\n                  }}\n                >\n                  Add Task\n                </button>\n              )}\n            </div>\n\n            {/* List of Tasks for the current project */}\n            <div className=\"card-body\">\n              <div className=\"row\">\n                {project.tasks && project.tasks.length > 0 ? (\n                  project.tasks.map((task) => (\n                    <div key={task._id} className=\"col-12 mb-3\">\n                      <div className=\"card h-100 task-card\">\n                        <div className=\"card-body\">\n                          <h5 className=\"card-title\">{task.name}</h5>\n                          <p className=\"card-text\">Description: {task.description}</p>\n                          <p className=\"card-text\">\n                            <span className={`badge ${task.status === 'Ongoing' ? 'bg-warning' : 'bg-success'}`}>\n                              {task.status}\n                            </span>\n                          </p>\n                          <p className=\"card-text\">Due Date: {new Date(task.due_date).toLocaleDateString()}</p>\n                          <p className=\"card-text\">Project: {project.name}</p> {/* Display project name */}\n                          <div className=\"d-flex justify-content-between\">\n                            <button\n                              className=\"btn btn-outline-primary\"\n                              onClick={() => navigate(`/task-details/${task._id}`)}\n                            >\n                              Manage\n                            </button>\n                            <button\n                              className=\"btn btn-danger btn-sm\"\n                              onClick={() => handleRemoveTask(task._id, project._id)}\n                            >\n                              Remove\n                            </button>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  ))\n                ) : (\n                  <p>No tasks found for this project.</p>\n                )}\n              </div>\n\n              {/* Add Task Form specific to each project */}\n              {showTaskForm[project._id] && (\n                <div className=\"card task-form-card mt-4\">\n                  <div className=\"card-body\">\n                    <h5>Add New Task</h5>\n                    <form>\n                      <div className=\"mb-3\">\n                        <label className=\"form-label\">Task Name</label>\n                        <input\n                          type=\"text\"\n                          className=\"form-control\"\n                          name=\"name\"\n                          value={newTask.name}\n                          onChange={handleInputChange}\n                          required\n                        />\n                      </div>\n                      <div className=\"mb-3\">\n                        <label className=\"form-label\">Description</label>\n                        <textarea\n                          className=\"form-control\"\n                          name=\"description\"\n                          value={newTask.description}\n                          onChange={handleInputChange}\n                          required\n                        />\n                      </div>\n                      <div className=\"mb-3\">\n                        <label className=\"form-label\">Status</label>\n                        <select\n                          className=\"form-select\"\n                          name=\"status\"\n                          value={newTask.status}\n                          onChange={handleInputChange}\n                          required\n                        >\n                          <option value=\"Ongoing\">Ongoing</option>\n                          <option value=\"Completed\">Completed</option>\n                        </select>\n                      </div>\n                      <div className=\"mb-3\">\n                        <label className=\"form-label\">Due Date</label>\n                        <input\n                          type=\"date\"\n                          className=\"form-control\"\n                          name=\"due_date\"\n                          value={newTask.due_date}\n                          onChange={handleInputChange}\n                          required\n                        />\n                      </div>\n                      <div className=\"mb-3\">\n                        <label className=\"form-label\">Assigned To</label>\n                        <select\n                          multiple\n                          className=\"form-select\"\n                          name=\"assignedTo\"\n                          value={newTask.assignedTo}\n                          onChange={handleAssignedToChange}\n                          required\n                        >\n                          {teamMembers.map((member) => (\n                            <option key={member.id} value={member.id}>\n                              {member.name}\n                            </option>\n                          ))}\n                        </select>\n                      </div>\n                      <button\n                        type=\"button\"\n                        className=\"btn btn-success\"\n                        onClick={() => handleAddTask(project._id)} // Now specific to this project\n                      >\n                        Add Task\n                      </button>\n                      <button\n                        type=\"button\"\n                        className=\"btn btn-secondary ms-2\"\n                        onClick={() => setShowTaskForm((prev) => ({ ...prev, [project._id]: false }))}\n                      >\n                        Cancel\n                      </button>\n                    </form>\n                  </div>\n                </div>\n              )}\n            </div>\n          </div>\n        ))\n      ) : (\n        <p>No projects found.</p>\n      )}\n    </div>\n  );\n};\n\nexport default TasksPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}