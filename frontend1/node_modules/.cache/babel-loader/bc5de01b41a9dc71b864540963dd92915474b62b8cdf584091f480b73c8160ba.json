{"ast":null,"code":"var _jsxFileName = \"F:\\\\Project-Management-App\\\\frontend\\\\src\\\\components\\\\ProjectsPage.js\",\n  _s = $RefreshSig$();\n// import 'bootstrap/dist/css/bootstrap.min.css';\n// import React, { useEffect, useState } from 'react';\n// import { Link, useNavigate } from 'react-router-dom';\n// import axios from 'axios';\n// import { useAuth } from \"../AuthContext\";\n\n// import './ProjectsPage.css'; // Custom CSS\n\n// function ProjectsPage() {\n//   const [projectList, setProjectList] = useState([]); // State to store the project list\n//   const navigate = useNavigate();\n\n//   // Handle the Create Project button click\n//   const handleCreateProject = () => {\n//     navigate('/create-project'); // Redirect to the create project page\n//   };\n//   const { user } = useAuth();\n//   const fetchProjects = async () => {\n//     try {\n//       const response = await axios.get(`http://localhost:5000/api/project/${user.id}/projects`); // Adjust the endpoint as necessary\n//       const projects = response.data;\n//       setProjectList(projects);\n//       console.log(projects);\n//     }\n//     catch (error) {\n//       console.error('Error fetching projects:', error);\n//     }\n//   };\n\n//   useEffect(() => {\n//     fetchProjects(); // Call the function to fetch projects\n//   }, []);\n\n//   return (\n//     <div className=\"container mt-5\">\n//       <h1 className=\"text-center mb-4\" id=\"heading1\">Projects</h1>\n\n//       {/* Create Project Button */}\n//       <div className=\"text-end mb-4\">\n//         <button className=\"btn btn-success\" onClick={handleCreateProject}>\n//           Create Project\n//         </button>\n//       </div>\n\n//       {/* Project Cards */}\n//       <div className=\"row\">\n//         {projectList.map((project) => (\n//           <div className=\"col-md-4 mb-4\" key={project._id}>\n//             <div className=\"card project-card shadow-sm\">\n//               <div className=\"card-body\">\n//                 <h4 className=\"card-title\">{project.name}</h4>\n//                 <p className=\"card-text\">{project.description}</p>\n//                 <span className={`badge ${project.status === 'Ongoing' ? 'bg-warning' : 'bg-success'}`}>\n//                   {project.status}\n//                 </span>\n//                 <Link to={`/project/${project._id}`} className=\"btn btn-primary mt-3\">\n//                   View Details\n//                 </Link>\n//               </div>\n//             </div>\n//           </div>\n//         ))}\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default ProjectsPage;\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport React, { useEffect, useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { useAuth } from \"../AuthContext\";\nimport './ProjectsPage.css'; // Custom CSS\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ProjectsPage() {\n  _s();\n  const [projectList, setProjectList] = useState([]); // State to store the project list\n  const [loading, setLoading] = useState(true); // State to handle loading\n  const [error, setError] = useState(null); // State for error handling\n  const navigate = useNavigate();\n  const {\n    user\n  } = useAuth();\n\n  // Handle the Create Project button click\n  const handleCreateProject = () => {\n    navigate('/create-project'); // Redirect to the create project page\n  };\n\n  // Fetch the list of projects\n  const fetchProjects = async () => {\n    try {\n      const response = await axios.get(`http://localhost:5000/api/project/${user.id}/projects`);\n      const projects = response.data;\n      setProjectList(projects);\n    } catch (error) {\n      setError('Error fetching projects');\n      console.error('Error fetching projects:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchProjects(); // Call the function to fetch projects\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center mt-5\",\n      children: \"Loading projects...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center mt-5 text-danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-center mb-4\",\n      id: \"heading1\",\n      children: \"Projects\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-end mb-4\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-success\",\n        onClick: handleCreateProject,\n        children: \"Create Project\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), projectList.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No projects found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: projectList.map(project => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-4 mb-4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card project-card shadow-sm\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"card-title\",\n              children: project.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"card-text\",\n              children: project.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: `badge ${project.status === 'Ongoing' ? 'bg-warning' : 'bg-success'}`,\n              children: project.status\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              to: `/project/${project._id}`,\n              className: \"btn btn-primary mt-3\",\n              children: \"View Details\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 15\n        }, this)\n      }, project._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }, this);\n}\n_s(ProjectsPage, \"dxswrO9r68A6EIsOb8Vd+OeFmcM=\", false, function () {\n  return [useNavigate, useAuth];\n});\n_c = ProjectsPage;\nexport default ProjectsPage;\nvar _c;\n$RefreshReg$(_c, \"ProjectsPage\");","map":{"version":3,"names":["React","useEffect","useState","Link","useNavigate","axios","useAuth","jsxDEV","_jsxDEV","ProjectsPage","_s","projectList","setProjectList","loading","setLoading","error","setError","navigate","user","handleCreateProject","fetchProjects","response","get","id","projects","data","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","length","map","project","name","description","status","to","_id","_c","$RefreshReg$"],"sources":["F:/Project-Management-App/frontend/src/components/ProjectsPage.js"],"sourcesContent":["// import 'bootstrap/dist/css/bootstrap.min.css';\n// import React, { useEffect, useState } from 'react';\n// import { Link, useNavigate } from 'react-router-dom';\n// import axios from 'axios';\n// import { useAuth } from \"../AuthContext\";\n\n// import './ProjectsPage.css'; // Custom CSS\n\n// function ProjectsPage() {\n//   const [projectList, setProjectList] = useState([]); // State to store the project list\n//   const navigate = useNavigate();\n\n//   // Handle the Create Project button click\n//   const handleCreateProject = () => {\n//     navigate('/create-project'); // Redirect to the create project page\n//   };\n//   const { user } = useAuth();\n//   const fetchProjects = async () => {\n//     try {\n//       const response = await axios.get(`http://localhost:5000/api/project/${user.id}/projects`); // Adjust the endpoint as necessary\n//       const projects = response.data;\n//       setProjectList(projects);\n//       console.log(projects);\n//     }\n//     catch (error) {\n//       console.error('Error fetching projects:', error);\n//     }\n//   };\n\n//   useEffect(() => {\n//     fetchProjects(); // Call the function to fetch projects\n//   }, []);\n\n//   return (\n//     <div className=\"container mt-5\">\n//       <h1 className=\"text-center mb-4\" id=\"heading1\">Projects</h1>\n\n//       {/* Create Project Button */}\n//       <div className=\"text-end mb-4\">\n//         <button className=\"btn btn-success\" onClick={handleCreateProject}>\n//           Create Project\n//         </button>\n//       </div>\n\n//       {/* Project Cards */}\n//       <div className=\"row\">\n//         {projectList.map((project) => (\n//           <div className=\"col-md-4 mb-4\" key={project._id}>\n//             <div className=\"card project-card shadow-sm\">\n//               <div className=\"card-body\">\n//                 <h4 className=\"card-title\">{project.name}</h4>\n//                 <p className=\"card-text\">{project.description}</p>\n//                 <span className={`badge ${project.status === 'Ongoing' ? 'bg-warning' : 'bg-success'}`}>\n//                   {project.status}\n//                 </span>\n//                 <Link to={`/project/${project._id}`} className=\"btn btn-primary mt-3\">\n//                   View Details\n//                 </Link>\n//               </div>\n//             </div>\n//           </div>\n//         ))}\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default ProjectsPage;\n\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport React, { useEffect, useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { useAuth } from \"../AuthContext\";\nimport './ProjectsPage.css'; // Custom CSS\n\nfunction ProjectsPage() {\n  const [projectList, setProjectList] = useState([]); // State to store the project list\n  const [loading, setLoading] = useState(true); // State to handle loading\n  const [error, setError] = useState(null); // State for error handling\n  const navigate = useNavigate();\n  const { user } = useAuth();\n\n  // Handle the Create Project button click\n  const handleCreateProject = () => {\n    navigate('/create-project'); // Redirect to the create project page\n  };\n\n  // Fetch the list of projects\n  const fetchProjects = async () => {\n    try {\n      const response = await axios.get(`http://localhost:5000/api/project/${user.id}/projects`);\n      const projects = response.data;\n      setProjectList(projects);\n    } catch (error) {\n      setError('Error fetching projects');\n      console.error('Error fetching projects:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchProjects(); // Call the function to fetch projects\n  }, []);\n\n  if (loading) {\n    return <div className=\"text-center mt-5\">Loading projects...</div>;\n  }\n\n  if (error) {\n    return <div className=\"text-center mt-5 text-danger\">{error}</div>;\n  }\n\n  return (\n    <div className=\"container mt-5\">\n      <h1 className=\"text-center mb-4\" id=\"heading1\">Projects</h1>\n\n      {/* Create Project Button */}\n      <div className=\"text-end mb-4\">\n        <button className=\"btn btn-success\" onClick={handleCreateProject}>\n          Create Project\n        </button>\n      </div>\n\n      {/* No Projects Message */}\n      {projectList.length === 0 ? (\n        <div className=\"text-center\">\n          <p>No projects found.</p>\n        </div>\n      ) : (\n        <div className=\"row\">\n          {projectList.map((project) => (\n            <div className=\"col-md-4 mb-4\" key={project._id}>\n              <div className=\"card project-card shadow-sm\">\n                <div className=\"card-body\">\n                  <h4 className=\"card-title\">{project.name}</h4>\n                  <p className=\"card-text\">{project.description}</p>\n                  <span\n                    className={`badge ${project.status === 'Ongoing' ? 'bg-warning' : 'bg-success'}`}>\n                    {project.status}\n                  </span>\n                  <Link to={`/project/${project._id}`} className=\"btn btn-primary mt-3\">\n                    View Details\n                  </Link>\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default ProjectsPage;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}