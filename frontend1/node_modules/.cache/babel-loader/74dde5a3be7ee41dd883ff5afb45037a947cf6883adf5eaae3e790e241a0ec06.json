{"ast":null,"code":"var _jsxFileName = \"F:\\\\Project-Management-App\\\\frontend\\\\src\\\\components\\\\TasksPage.js\",\n  _s = $RefreshSig$();\nimport 'bootstrap/dist/css/bootstrap.min.css'; // Bootstrap styles\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom'; // For navigation\nimport axios from 'axios'; // Import axios for making HTTP requests\nimport './TasksPage.css'; // Custom styles\nimport { useAuth } from \"../AuthContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TasksPage = () => {\n  _s();\n  const navigate = useNavigate(); // To navigate programmatically\n  const [projects, setProjects] = useState([]); // State for projects where user is a team member\n  const [tasks, setTasks] = useState([]); // State for all tasks\n  const {\n    user\n  } = useAuth(); // Auth context to get the current user\n  const [showTaskForm, setShowTaskForm] = useState({}); // Control task form visibility for each project\n  const [newTask, setNewTask] = useState({\n    name: '',\n    description: '',\n    status: 'Ongoing',\n    due_date: '',\n    assignedTo: []\n  });\n  const [teamMembers, setTeamMembers] = useState([]); // Store team members for the assigned field\n\n  // Fetch projects and tasks when the component mounts\n  useEffect(() => {\n    const fetchProjectsAndTasks = async () => {\n      try {\n        if (!user) {\n          console.log(\"User is not logged in.\");\n          return; // Exit if user is not logged in\n        }\n\n        // Fetch projects and tasks of the user\n        const response = await axios.get(`http://localhost:5000/api/user/${user.id}`);\n        const fetchedProjects = response.data.projects; // Access the actual project data\n        const fetchedTasks = response.data.tasks; // Access the actual tasks data\n\n        setProjects(fetchedProjects); // Set the projects state\n        setTasks(fetchedTasks); // Set the tasks state\n      } catch (error) {\n        console.error(\"Error fetching projects or tasks:\", error);\n      }\n    };\n    fetchProjectsAndTasks();\n  }, [user]);\n\n  // Handle adding a new task\n  const handleAddTask = async projectId => {\n    try {\n      const response = await axios.post(`http://localhost:5000/api/task/${projectId}`, newTask);\n      // After adding the task, refresh the project list to include the new task\n      setProjects(prevProjects => prevProjects.map(project => project._id === projectId ? {\n        ...project,\n        tasks: [...project.tasks, response.data]\n      } : project));\n      setShowTaskForm(prev => ({\n        ...prev,\n        [projectId]: false\n      })); // Hide the task form after adding the task\n      setNewTask({\n        name: '',\n        description: '',\n        status: 'Ongoing',\n        due_date: '',\n        assignedTo: []\n      }); // Reset the task form\n    } catch (error) {\n      console.error(\"Error adding task:\", error);\n    }\n  };\n\n  // Function to remove a task\n  const handleRemoveTask = async (taskId, projectId) => {\n    try {\n      await axios.delete(`http://localhost:5000/api/task/${taskId}`);\n      setProjects(prevProjects => prevProjects.map(project => project._id === projectId ? {\n        ...project,\n        tasks: project.tasks.filter(task => task._id !== taskId)\n      } : project));\n    } catch (error) {\n      console.error(\"Error removing task:\", error);\n    }\n  };\n\n  // Fetch team members for a project\n  const fetchTeamMembers = async projectId => {\n    try {\n      const response = await axios.get(`http://localhost:5000/api/project/${projectId}`);\n      setTeamMembers(response.data.teamMembers); // Set the list of team members\n    } catch (error) {\n      console.error(\"Error fetching team members:\", error);\n    }\n  };\n\n  // Handle the form input changes\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNewTask({\n      ...newTask,\n      [name]: value\n    });\n  };\n  const handleAssignedToChange = e => {\n    const selectedOptions = Array.from(e.target.selectedOptions, option => option.value);\n    setNewTask(prevTask => ({\n      ...prevTask,\n      assignedTo: selectedOptions\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container tasks-page mt-4\",\n    children: projects.length > 0 ? projects.map(project => {\n      // Filter tasks specific to the current project\n      const filteredTasks = tasks.filter(task => task.project_id === project._id);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card project-detail-card mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-header d-flex justify-content-between align-items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"mb-0\",\n            children: [project.name, /*#__PURE__*/_jsxDEV(\"span\", {\n              className: `badge ${project.status === 'Ongoing' ? 'bg-warning' : 'bg-success'} ms-2`,\n              children: project.status\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 17\n          }, this), project.created_by === user.id && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary\",\n            onClick: () => {\n              setShowTaskForm(prev => ({\n                ...prev,\n                [project._id]: true\n              }));\n              fetchTeamMembers(project._id); // Fetch team members when opening task form\n            },\n            children: \"Add Task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: filteredTasks.length > 0 ? filteredTasks.map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-12 mb-3\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card h-100 task-card\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card-body\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                    className: \"card-title\",\n                    children: task.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 132,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"card-text\",\n                    children: [\"Description: \", task.description]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 133,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"card-text\",\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: `badge ${task.status === 'Ongoing' ? 'bg-warning' : 'bg-success'}`,\n                      children: task.status\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 135,\n                      columnNumber: 31\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 134,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"card-text\",\n                    children: [\"Due Date: \", new Date(task.due_date).toLocaleDateString()]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 139,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"d-flex justify-content-between\",\n                    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"btn btn-outline-primary\",\n                      onClick: () => navigate(`/task-details/${task._id}`),\n                      children: \"Manage\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 141,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"btn btn-danger btn-sm\",\n                      onClick: () => handleRemoveTask(task._id, project._id),\n                      children: \"Remove\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 147,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 140,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 131,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 25\n              }, this)\n            }, task._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 23\n            }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"No tasks found for this project.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 17\n          }, this), showTaskForm[project._id] && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card task-form-card mt-4\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-body\",\n              children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                children: \"Add New Task\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"mb-3\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"form-label\",\n                    children: \"Task Name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 170,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    className: \"form-control\",\n                    name: \"name\",\n                    value: newTask.name,\n                    onChange: handleInputChange,\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 171,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 169,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"mb-3\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"form-label\",\n                    children: \"Description\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 181,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                    className: \"form-control\",\n                    name: \"description\",\n                    value: newTask.description,\n                    onChange: handleInputChange,\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 182,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 180,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"mb-3\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"form-label\",\n                    children: \"Status\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 191,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                    className: \"form-select\",\n                    name: \"status\",\n                    value: newTask.status,\n                    onChange: handleInputChange,\n                    required: true,\n                    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"Ongoing\",\n                      children: \"Ongoing\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 199,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"Completed\",\n                      children: \"Completed\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 200,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 192,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 190,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"mb-3\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"form-label\",\n                    children: \"Due Date\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 204,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"date\",\n                    className: \"form-control\",\n                    name: \"due_date\",\n                    value: newTask.due_date,\n                    onChange: handleInputChange,\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 205,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 203,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"mb-3\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"form-label\",\n                    children: \"Assigned To\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 215,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                    multiple: true,\n                    className: \"form-select\",\n                    name: \"assignedTo\",\n                    value: newTask.assignedTo,\n                    onChange: handleAssignedToChange,\n                    required: true,\n                    children: teamMembers.map(member => /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: member._id,\n                      children: member.name\n                    }, member._id, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 225,\n                      columnNumber: 31\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 216,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 214,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  className: \"btn btn-success\",\n                  onClick: () => handleAddTask(project._id) // Now specific to the project\n                  ,\n                  children: \"Add Task\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 231,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 15\n        }, this)]\n      }, project._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }, this);\n    }) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No projects found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n};\n_s(TasksPage, \"O0tulzvSchrX2bmRNiJgtP64uao=\", false, function () {\n  return [useNavigate, useAuth];\n});\n_c = TasksPage;\nexport default TasksPage;\nvar _c;\n$RefreshReg$(_c, \"TasksPage\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","axios","useAuth","jsxDEV","_jsxDEV","TasksPage","_s","navigate","projects","setProjects","tasks","setTasks","user","showTaskForm","setShowTaskForm","newTask","setNewTask","name","description","status","due_date","assignedTo","teamMembers","setTeamMembers","fetchProjectsAndTasks","console","log","response","get","id","fetchedProjects","data","fetchedTasks","error","handleAddTask","projectId","post","prevProjects","map","project","_id","prev","handleRemoveTask","taskId","delete","filter","task","fetchTeamMembers","handleInputChange","e","value","target","handleAssignedToChange","selectedOptions","Array","from","option","prevTask","className","children","length","filteredTasks","project_id","fileName","_jsxFileName","lineNumber","columnNumber","created_by","onClick","Date","toLocaleDateString","type","onChange","required","multiple","member","_c","$RefreshReg$"],"sources":["F:/Project-Management-App/frontend/src/components/TasksPage.js"],"sourcesContent":["import 'bootstrap/dist/css/bootstrap.min.css'; // Bootstrap styles\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom'; // For navigation\nimport axios from 'axios'; // Import axios for making HTTP requests\nimport './TasksPage.css'; // Custom styles\nimport { useAuth } from \"../AuthContext\";\n\nconst TasksPage = () => {\n  const navigate = useNavigate(); // To navigate programmatically\n  const [projects, setProjects] = useState([]); // State for projects where user is a team member\n  const [tasks, setTasks] = useState([]); // State for all tasks\n  const { user } = useAuth(); // Auth context to get the current user\n  const [showTaskForm, setShowTaskForm] = useState({}); // Control task form visibility for each project\n  const [newTask, setNewTask] = useState({ name: '', description: '', status: 'Ongoing', due_date: '', assignedTo: [] });\n  const [teamMembers, setTeamMembers] = useState([]); // Store team members for the assigned field\n\n  // Fetch projects and tasks when the component mounts\n  useEffect(() => {\n    const fetchProjectsAndTasks = async () => {\n      try {\n        if (!user) {\n          console.log(\"User is not logged in.\");\n          return; // Exit if user is not logged in\n        }\n\n        // Fetch projects and tasks of the user\n        const response = await axios.get(`http://localhost:5000/api/user/${user.id}`);\n        const fetchedProjects = response.data.projects; // Access the actual project data\n        const fetchedTasks = response.data.tasks; // Access the actual tasks data\n\n        setProjects(fetchedProjects); // Set the projects state\n        setTasks(fetchedTasks); // Set the tasks state\n      } catch (error) {\n        console.error(\"Error fetching projects or tasks:\", error);\n      }\n    };\n\n    fetchProjectsAndTasks();\n  }, [user]);\n\n  // Handle adding a new task\n  const handleAddTask = async (projectId) => {\n    try {\n      const response = await axios.post(`http://localhost:5000/api/task/${projectId}`, newTask);\n      // After adding the task, refresh the project list to include the new task\n      setProjects((prevProjects) => prevProjects.map((project) =>\n        project._id === projectId ? { ...project, tasks: [...project.tasks, response.data] } : project\n      ));\n      setShowTaskForm((prev) => ({ ...prev, [projectId]: false })); // Hide the task form after adding the task\n      setNewTask({ name: '', description: '', status: 'Ongoing', due_date: '', assignedTo: [] }); // Reset the task form\n    } catch (error) {\n      console.error(\"Error adding task:\", error);\n    }\n  };\n\n  // Function to remove a task\n  const handleRemoveTask = async (taskId, projectId) => {\n    try {\n      await axios.delete(`http://localhost:5000/api/task/${taskId}`);\n      setProjects((prevProjects) =>\n        prevProjects.map((project) =>\n          project._id === projectId\n            ? { ...project, tasks: project.tasks.filter((task) => task._id !== taskId) }\n            : project\n        )\n      );\n    } catch (error) {\n      console.error(\"Error removing task:\", error);\n    }\n  };\n\n  // Fetch team members for a project\n  const fetchTeamMembers = async (projectId) => {\n    try {\n      const response = await axios.get(`http://localhost:5000/api/project/${projectId}`);\n      setTeamMembers(response.data.teamMembers); // Set the list of team members\n    } catch (error) {\n      console.error(\"Error fetching team members:\", error);\n    }\n  };\n\n  // Handle the form input changes\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setNewTask({ ...newTask, [name]: value });\n  };\n\n  const handleAssignedToChange = (e) => {\n    const selectedOptions = Array.from(e.target.selectedOptions, option => option.value);\n    setNewTask(prevTask => ({\n      ...prevTask,\n      assignedTo: selectedOptions\n    }));\n  };\n\n  return (\n    <div className=\"container tasks-page mt-4\">\n      {projects.length > 0 ? (\n        projects.map((project) => {\n          // Filter tasks specific to the current project\n          const filteredTasks = tasks.filter(task => task.project_id === project._id);\n          \n          return (\n            <div key={project._id} className=\"card project-detail-card mb-4\">\n              <div className=\"card-header d-flex justify-content-between align-items-center\">\n                <h2 className=\"mb-0\">{project.name}\n                  <span className={`badge ${project.status === 'Ongoing' ? 'bg-warning' : 'bg-success'} ms-2`}>\n                    {project.status}\n                  </span>\n                </h2>\n                {project.created_by === user.id && (\n                  <button\n                    className=\"btn btn-primary\"\n                    onClick={() => {\n                      setShowTaskForm((prev) => ({ ...prev, [project._id]: true }));\n                      fetchTeamMembers(project._id); // Fetch team members when opening task form\n                    }}\n                  >\n                    Add Task\n                  </button>\n                )}\n              </div>\n\n              {/* List of filtered tasks for the current project */}\n              <div className=\"card-body\">\n                <div className=\"row\">\n                  {filteredTasks.length > 0 ? (\n                    filteredTasks.map((task) => (\n                      <div key={task._id} className=\"col-12 mb-3\">\n                        <div className=\"card h-100 task-card\">\n                          <div className=\"card-body\">\n                            <h5 className=\"card-title\">{task.name}</h5>\n                            <p className=\"card-text\">Description: {task.description}</p>\n                            <p className=\"card-text\">\n                              <span className={`badge ${task.status === 'Ongoing' ? 'bg-warning' : 'bg-success'}`}>\n                                {task.status}\n                              </span>\n                            </p>\n                            <p className=\"card-text\">Due Date: {new Date(task.due_date).toLocaleDateString()}</p>\n                            <div className=\"d-flex justify-content-between\">\n                              <button\n                                className=\"btn btn-outline-primary\"\n                                onClick={() => navigate(`/task-details/${task._id}`)}\n                              >\n                                Manage\n                              </button>\n                              <button\n                                className=\"btn btn-danger btn-sm\"\n                                onClick={() => handleRemoveTask(task._id, project._id)}\n                              >\n                                Remove\n                              </button>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    ))\n                  ) : (\n                    <p>No tasks found for this project.</p>\n                  )}\n                </div>\n\n                {/* Add Task Form specific to each project */}\n                {showTaskForm[project._id] && (\n                  <div className=\"card task-form-card mt-4\">\n                    <div className=\"card-body\">\n                      <h5>Add New Task</h5>\n                      <form>\n                        <div className=\"mb-3\">\n                          <label className=\"form-label\">Task Name</label>\n                          <input\n                            type=\"text\"\n                            className=\"form-control\"\n                            name=\"name\"\n                            value={newTask.name}\n                            onChange={handleInputChange}\n                            required\n                          />\n                        </div>\n                        <div className=\"mb-3\">\n                          <label className=\"form-label\">Description</label>\n                          <textarea\n                            className=\"form-control\"\n                            name=\"description\"\n                            value={newTask.description}\n                            onChange={handleInputChange}\n                            required\n                          />\n                        </div>\n                        <div className=\"mb-3\">\n                          <label className=\"form-label\">Status</label>\n                          <select\n                            className=\"form-select\"\n                            name=\"status\"\n                            value={newTask.status}\n                            onChange={handleInputChange}\n                            required\n                          >\n                            <option value=\"Ongoing\">Ongoing</option>\n                            <option value=\"Completed\">Completed</option>\n                          </select>\n                        </div>\n                        <div className=\"mb-3\">\n                          <label className=\"form-label\">Due Date</label>\n                          <input\n                            type=\"date\"\n                            className=\"form-control\"\n                            name=\"due_date\"\n                            value={newTask.due_date}\n                            onChange={handleInputChange}\n                            required\n                          />\n                        </div>\n                        <div className=\"mb-3\">\n                          <label className=\"form-label\">Assigned To</label>\n                          <select\n                            multiple\n                            className=\"form-select\"\n                            name=\"assignedTo\"\n                            value={newTask.assignedTo}\n                            onChange={handleAssignedToChange}\n                            required\n                          >\n                            {teamMembers.map((member) => (\n                              <option key={member._id} value={member._id}>\n                                {member.name}\n                              </option>\n                            ))}\n                          </select>\n                        </div>\n                        <button\n                          type=\"button\"\n                          className=\"btn btn-success\"\n                          onClick={() => handleAddTask(project._id)} // Now specific to the project\n                        >\n                          Add Task\n                        </button>\n                      </form>\n                    </div>\n                  </div>\n                )}\n              </div>\n            </div>\n          );\n        })\n      ) : (\n        <p>No projects found.</p>\n      )}\n    </div>\n  );\n};\n\nexport default TasksPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}