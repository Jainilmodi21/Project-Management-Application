{"ast":null,"code":"var _jsxFileName = \"F:\\\\Project-Management-App\\\\frontend\\\\src\\\\components\\\\Register.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom'; // For routing\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './Register.css'; // Import custom CSS\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Register() {\n  _s();\n  const [email, setEmail] = useState(''); // Changed from usernameOrEmail to email\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [name, setName] = useState(''); // Optional\n  const [avatar, setAvatar] = useState(null); // Optional\n  const [errors, setErrors] = useState({}); // State to store validation errors\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    // Input validation\n    const validationErrors = {};\n    if (!email) {\n      validationErrors.email = 'Email is required.'; // Updated error message\n    } else if (!/\\S+@\\S+\\.\\S+/.test(email)) {\n      validationErrors.email = 'Email is invalid.'; // Email format validation\n    }\n    if (!password) {\n      validationErrors.password = 'Password is required.';\n    } else if (password.length < 8) {\n      validationErrors.password = 'Password must be at least 8 characters long.';\n    }\n    if (password !== confirmPassword) {\n      validationErrors.confirmPassword = 'Passwords do not match.';\n    }\n\n    // if (Object.keys(validationErrors).length > 0) {\n    //   setErrors(validationErrors);\n    //   return; // Prevent form submission if validation fails\n    // }\n\n    // Handle registration logic using a secure API\n    const response = await fetch('http://localhost:5000/api/user/signup', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email,\n        password,\n        name\n      }) // Send data to backend\n    });\n    if (!response.ok) {\n      const errorData = await response.json();\n      console.error('Registration error:', errorData);\n    } else {\n      console.log('Registration successful!');\n      // Reset fields and errors on success\n      setEmail('');\n      setPassword('');\n      setConfirmPassword('');\n      setName('');\n      setAvatar(null);\n      setErrors({});\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5 register-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-center mb-4\",\n      children: \"Create Account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"shadow p-4 rounded bg-white\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          className: \"form-label\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          className: `form-control ${errors.email ? 'is-invalid' : ''}`,\n          placeholder: \"Enter your email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), errors.email && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"invalid-feedback\",\n          children: errors.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 28\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          className: \"form-label\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          className: `form-control ${errors.password ? 'is-invalid' : ''}`,\n          placeholder: \"Enter your password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), errors.password && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"invalid-feedback\",\n          children: errors.password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 31\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"confirmPassword\",\n          className: \"form-label\",\n          children: \"Confirm Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"confirmPassword\",\n          className: `form-control ${errors.confirmPassword ? 'is-invalid' : ''}`,\n          placeholder: \"Confirm your password\",\n          value: confirmPassword,\n          onChange: e => setConfirmPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), errors.confirmPassword && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"invalid-feedback\",\n          children: errors.confirmPassword\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 38\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          className: \"form-label\",\n          children: \"Name (Optional)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          className: \"form-control\",\n          placeholder: \"Enter your name\",\n          value: name,\n          onChange: e => setName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"avatar\",\n          className: \"form-label\",\n          children: \"Avatar (Optional)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          id: \"avatar\",\n          className: \"form-control\",\n          onChange: e => setAvatar(e.target.files[0])\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), avatar && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: URL.createObjectURL(avatar),\n          alt: \"Avatar Preview\",\n          className: \"img-preview mt-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 22\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Already have an account? \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          className: \"text-primary\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n_s(Register, \"IJZl/5eRfP8faN8VH8hvyS5EJIA=\");\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","Link","jsxDEV","_jsxDEV","Register","_s","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","name","setName","avatar","setAvatar","errors","setErrors","handleSubmit","event","preventDefault","validationErrors","test","length","response","fetch","method","headers","body","JSON","stringify","ok","errorData","json","console","error","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","placeholder","value","onChange","e","target","required","files","src","URL","createObjectURL","alt","to","_c","$RefreshReg$"],"sources":["F:/Project-Management-App/frontend/src/components/Register.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom'; // For routing\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './Register.css'; // Import custom CSS\r\n\r\nfunction Register() {\r\n  const [email, setEmail] = useState(''); // Changed from usernameOrEmail to email\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [name, setName] = useState(''); // Optional\r\n  const [avatar, setAvatar] = useState(null); // Optional\r\n  const [errors, setErrors] = useState({}); // State to store validation errors\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    // Input validation\r\n    const validationErrors = {};\r\n    if (!email) {\r\n      validationErrors.email = 'Email is required.'; // Updated error message\r\n    } else if (!/\\S+@\\S+\\.\\S+/.test(email)) {\r\n      validationErrors.email = 'Email is invalid.'; // Email format validation\r\n    }\r\n    if (!password) {\r\n      validationErrors.password = 'Password is required.';\r\n    } else if (password.length < 8) {\r\n      validationErrors.password = 'Password must be at least 8 characters long.';\r\n    }\r\n    if (password !== confirmPassword) {\r\n      validationErrors.confirmPassword = 'Passwords do not match.';\r\n    }\r\n    \r\n    // if (Object.keys(validationErrors).length > 0) {\r\n    //   setErrors(validationErrors);\r\n    //   return; // Prevent form submission if validation fails\r\n    // }\r\n\r\n    // Handle registration logic using a secure API\r\n    const response = await fetch('http://localhost:5000/api/user/signup', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ email, password, name }), // Send data to backend\r\n    });\r\n\r\n    if (!response.ok) {\r\n      const errorData = await response.json();\r\n      console.error('Registration error:', errorData);\r\n    } else {\r\n      console.log('Registration successful!');\r\n      // Reset fields and errors on success\r\n      setEmail('');\r\n      setPassword('');\r\n      setConfirmPassword('');\r\n      setName('');\r\n      setAvatar(null);\r\n      setErrors({});\r\n    }\r\n  };\r\n\r\n  return (\r\n   \r\n    <div className=\"container mt-5 register-container\">\r\n      <h1 className=\"text-center mb-4\">Create Account</h1>\r\n      <form onSubmit={handleSubmit} className=\"shadow p-4 rounded bg-white\">\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"email\" className=\"form-label\">Email</label>\r\n          <input\r\n            type=\"email\"\r\n            id=\"email\"\r\n            className={`form-control ${errors.email ? 'is-invalid' : ''}`}\r\n            placeholder=\"Enter your email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            required\r\n          />\r\n          {errors.email && <div className=\"invalid-feedback\">{errors.email}</div>}\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"password\" className=\"form-label\">Password</label>\r\n          <input\r\n            type=\"password\"\r\n            id=\"password\"\r\n            className={`form-control ${errors.password ? 'is-invalid' : ''}`}\r\n            placeholder=\"Enter your password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            required\r\n          />\r\n          {errors.password && <div className=\"invalid-feedback\">{errors.password}</div>}\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"confirmPassword\" className=\"form-label\">Confirm Password</label>\r\n          <input\r\n            type=\"password\"\r\n            id=\"confirmPassword\"\r\n            className={`form-control ${errors.confirmPassword ? 'is-invalid' : ''}`}\r\n            placeholder=\"Confirm your password\"\r\n            value={confirmPassword}\r\n            onChange={(e) => setConfirmPassword(e.target.value)}\r\n            required\r\n          />\r\n          {errors.confirmPassword && <div className=\"invalid-feedback\">{errors.confirmPassword}</div>}\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"name\" className=\"form-label\">Name (Optional)</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"name\"\r\n            className=\"form-control\"\r\n            placeholder=\"Enter your name\"\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"avatar\" className=\"form-label\">Avatar (Optional)</label>\r\n          <input type=\"file\" id=\"avatar\" className=\"form-control\" onChange={(e) => setAvatar(e.target.files[0])} />\r\n          {avatar && <img src={URL.createObjectURL(avatar)} alt=\"Avatar Preview\" className=\"img-preview mt-2\" />}\r\n        </div>\r\n        <button type=\"submit\" className=\"btn btn-primary\">Register</button>\r\n        <div>\r\n            <br/>\r\n          <span>Already have an account? </span>\r\n          <Link to=\"/\" className=\"text-primary\">\r\n            Login\r\n          </Link>\r\n        </div>\r\n      </form>\r\n    </div>\r\n   \r\n  );\r\n}\r\n\r\nexport default Register;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}