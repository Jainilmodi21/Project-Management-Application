{"ast":null,"code":"\n\n// import 'bootstrap/dist/css/bootstrap.min.css';\n// import React, { useEffect, useState } from 'react';\n// import Calendar from 'react-calendar';\n// import 'react-calendar/dist/Calendar.css';\n// import { useNavigate } from 'react-router-dom';\n// import axios from 'axios'; // Import Axios\n// import './Dashboard.css';\n// import { useAuth } from \"../AuthContext\";\n\n// function Dashboard() {\n//   const [metrics, setMetrics] = useState({\n//     totalProjects: 0,\n//     completedProjects: 0,\n//     activeProjects: 0,\n//   });\n//   const [recentProjects, setRecentProjects] = useState([{}]);\n//   const [showModal, setShowModal] = useState(false);\n//   const [selectedProjects, setSelectedProjects] = useState([{}]);\n//   const [showCalendar, setShowCalendar] = useState(false);\n//   const [modalTitle, setModalTitle] = useState('');\n//   const [ongoingProjectsEndDates, setOngoingProjectsEndDates] = useState([]);\n//   const navigate = useNavigate();\n//   const { user } = useAuth();\n\n//   const fetchProjects = async () => {\n//     try {\n//       if (!user) {\n//         console.log(\"User is not logged in.\");\n//         return; // Exit if user is not logged in\n//       }\n//       console.log(user);\n//       const response = await axios.get(`http://localhost:5000/api/user/${user.id}/projects`);\n//       const projects = response.data; // Access the actual project data\n\n//       // Calculate metrics\n//       const totalProjects = projects.length;\n//       const completedProjects = projects.filter((project) => project.status === 'Completed').length;\n//       const activeProjects = projects.filter((project) => project.status === 'Active').length;\n\n//       setMetrics({\n//         totalProjects,\n//         completedProjects,\n//         activeProjects,\n//       });\n\n//       // Set recent projects (filter for active projects)\n//       setRecentProjects(activeProjects);\n\n//       // Collect end dates of ongoing projects\n//       const ongoingEndDates = projects\n//         .filter((project) => project.status === 'Active')\n//         .map((project) => new Date(project.endDate));\n//       setOngoingProjectsEndDates(ongoingEndDates);\n//     } catch (error) {\n//       console.error('Error fetching projects:', error);\n//     }\n//   };\n\n//   useEffect(() => {\n//     if (user) {\n//       fetchProjects(); // Call the function to fetch projects when the user is available\n//     }\n//   }, [user]); // Fetch projects when user changes\n\n//   const handleCreateProject = () => {\n//     navigate('/create-project');\n//   };\n\n//   const handleCardClick = (projectsList, title) => {\n//     setSelectedProjects(projectsList);\n//     setModalTitle(title);\n//     setShowModal(true);\n//   };\n\n//   const closeModal = () => {\n//     setShowModal(false);\n//     setSelectedProjects([]);\n//     setModalTitle('');\n//   };\n\n//   const handleViewCalendar = () => {\n//     setShowCalendar(true);\n//   };\n\n//   const closeCalendar = () => {\n//     setShowCalendar(false);\n//   };\n\n//   // Tile content to highlight ongoing projects' end dates on the calendar\n//   const tileClassName = ({ date, view }) => {\n//     if (view === 'month') {\n//       if (\n//         ongoingProjectsEndDates.some(\n//           (endDate) =>\n//             endDate.getFullYear() === date.getFullYear() &&\n//             endDate.getMonth() === date.getMonth() &&\n//             endDate.getDate() === date.getDate()\n//         )\n//       ) {\n//         return 'highlight-tile';\n//       }\n//     }\n//     return null;\n//   };\n\n//   return (\n//     <div className=\"container mt-5 dashboard-container\">\n//       <h1 className=\"text-center mb-4\" id=\"heading1\">\n//         Dashboard\n//       </h1>\n\n//       {/* Metrics Section */}\n//       <div className=\"row mb-4\">\n//         <div className=\"col-md-4\">\n//           <div\n//             className=\"card text-center shadow-sm\"\n//             onClick={() => handleCardClick(recentProjects, 'Total Projects')}\n//           >\n//             <div className=\"card-body\">\n//               <h5 className=\"card-title\">Total Projects</h5>\n//               <p className=\"card-text display-4\">{metrics.totalProjects}</p>\n//             </div>\n//           </div>\n//         </div>\n//         <div className=\"col-md-4\">\n//           <div\n//             className=\"card text-center shadow-sm\"\n//             onClick={() =>\n//               handleCardClick(\n//                 recentProjects.filter((project) => project.status === 'Active'),\n//                 'Active Projects'\n//               )\n//             }\n//           >\n//             <div className=\"card-body\">\n//               <h5 className=\"card-title\">Active Projects</h5>\n//               <p className=\"card-text display-4\">{metrics.activeProjects}</p>\n//             </div>\n//           </div>\n//         </div>\n//         <div className=\"col-md-4\">\n//           <div\n//             className=\"card text-center shadow-sm\"\n//             onClick={() =>\n//               handleCardClick(\n//                 recentProjects.filter((project) => project.status === 'Completed'),\n//                 'Completed Projects'\n//               )\n//             }\n//           >\n//             <div className=\"card-body\">\n//               <h5 className=\"card-title\">Completed Projects</h5>\n//               <p className=\"card-text display-4\">{metrics.completedProjects}</p>\n//             </div>\n//           </div>\n//         </div>\n//       </div>\n\n//       {/* Recent Projects Section */}\n//       <div className=\"card shadow-sm mb-4\">\n//         <div className=\"card-header\">\n//           <h2>Recent Projects</h2>\n//         </div>\n//         <ul className=\"list-group list-group-flush\">\n//           {Array.isArray(recentProjects) && recentProjects.length > 0 ? (\n//             recentProjects.slice(0, 3).map((project) => (\n//               <li\n//                 className=\"list-group-item\"\n//                 key={project._id}\n//                 onClick={() => navigate(`/project/${project._id}`)}\n//                 style={{ cursor: 'pointer' }}\n//               >\n//                 {project.name}\n//               </li>\n//             ))\n//           ) : (\n//             <li className=\"list-group-item\">No recent projects available.</li>\n//           )}\n//         </ul>\n//       </div>\n\n//       {/* Quick Actions Section */}\n//       <div className=\"quick-actions-section text-center mt-4\">\n//         <button className=\"btn btn-primary m-2\" onClick={handleCreateProject}>\n//           Create New Project\n//         </button>\n//         <button className=\"btn btn-secondary m-2\" onClick={handleViewCalendar}>\n//           View Calendar\n//         </button>\n//       </div>\n\n//       {/* Modal for Project Details */}\n//       {showModal && (\n//         <div className=\"modal-backdrop\" onClick={closeModal}>\n//           <div\n//             className=\"modal fade show\"\n//             style={{ display: 'block' }}\n//             tabIndex=\"-1\"\n//             role=\"dialog\"\n//           >\n//             <div className=\"modal-dialog\" role=\"document\">\n//               <div className=\"modal-content\" onClick={(e) => e.stopPropagation()}>\n//                 <div className=\"modal-header\">\n//                   <h5 className=\"modal-title\">\n//                     {modalTitle}: {selectedProjects.length}\n//                   </h5>\n//                 </div>\n\n//                 <div className=\"modal-body\">\n//                   <ul className=\"project-list\">\n//                     {selectedProjects.map((project) => (\n//                       <li key={project._id} className=\"project-item\">\n//                         {project.name}\n//                       </li>\n//                     ))}\n//                   </ul>\n//                 </div>\n//                 <div className=\"modal-footer\">\n//                   <button type=\"button\" className=\"btn btn-secondary\" onClick={closeModal}>\n//                     Close\n//                   </button>\n//                 </div>\n//               </div>\n//             </div>\n//           </div>\n//         </div>\n//       )}\n\n//       {/* Calendar Modal */}\n//       {showCalendar && (\n//         <div className=\"calendar-backdrop\">\n//           <div className=\"calendar-card card shadow-sm\">\n//             <div className=\"card-header\">\n//               <h5>Calendar</h5>\n//               <button\n//                 type=\"button\"\n//                 className=\"close\"\n//                 onClick={closeCalendar}\n//                 aria-label=\"Close\"\n//               >\n//                 <span aria-hidden=\"true\">&times;</span>\n//               </button>\n//             </div>\n//             <div className=\"card-body\">\n//               <Calendar tileClassName={tileClassName} />\n//             </div>\n//           </div>\n//         </div>\n//       )}\n//     </div>\n//   );\n// }\n\n// export default Dashboard;","map":{"version":3,"names":[],"sources":["F:/Project-Management-App/frontend/src/components/Dashboard.js"],"sourcesContent":["\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import 'bootstrap/dist/css/bootstrap.min.css';\r\n// import React, { useEffect, useState } from 'react';\r\n// import Calendar from 'react-calendar';\r\n// import 'react-calendar/dist/Calendar.css';\r\n// import { useNavigate } from 'react-router-dom';\r\n// import axios from 'axios'; // Import Axios\r\n// import './Dashboard.css';\r\n// import { useAuth } from \"../AuthContext\";\r\n\r\n// function Dashboard() {\r\n//   const [metrics, setMetrics] = useState({\r\n//     totalProjects: 0,\r\n//     completedProjects: 0,\r\n//     activeProjects: 0,\r\n//   });\r\n//   const [recentProjects, setRecentProjects] = useState([{}]);\r\n//   const [showModal, setShowModal] = useState(false);\r\n//   const [selectedProjects, setSelectedProjects] = useState([{}]);\r\n//   const [showCalendar, setShowCalendar] = useState(false);\r\n//   const [modalTitle, setModalTitle] = useState('');\r\n//   const [ongoingProjectsEndDates, setOngoingProjectsEndDates] = useState([]);\r\n//   const navigate = useNavigate();\r\n//   const { user } = useAuth();\r\n\r\n//   const fetchProjects = async () => {\r\n//     try {\r\n//       if (!user) {\r\n//         console.log(\"User is not logged in.\");\r\n//         return; // Exit if user is not logged in\r\n//       }\r\n//       console.log(user);\r\n//       const response = await axios.get(`http://localhost:5000/api/user/${user.id}/projects`);\r\n//       const projects = response.data; // Access the actual project data\r\n\r\n//       // Calculate metrics\r\n//       const totalProjects = projects.length;\r\n//       const completedProjects = projects.filter((project) => project.status === 'Completed').length;\r\n//       const activeProjects = projects.filter((project) => project.status === 'Active').length;\r\n\r\n//       setMetrics({\r\n//         totalProjects,\r\n//         completedProjects,\r\n//         activeProjects,\r\n//       });\r\n\r\n      \r\n\r\n//       // Set recent projects (filter for active projects)\r\n//       setRecentProjects(activeProjects);\r\n\r\n//       // Collect end dates of ongoing projects\r\n//       const ongoingEndDates = projects\r\n//         .filter((project) => project.status === 'Active')\r\n//         .map((project) => new Date(project.endDate));\r\n//       setOngoingProjectsEndDates(ongoingEndDates);\r\n//     } catch (error) {\r\n//       console.error('Error fetching projects:', error);\r\n//     }\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     if (user) {\r\n//       fetchProjects(); // Call the function to fetch projects when the user is available\r\n//     }\r\n//   }, [user]); // Fetch projects when user changes\r\n\r\n//   const handleCreateProject = () => {\r\n//     navigate('/create-project');\r\n//   };\r\n\r\n//   const handleCardClick = (projectsList, title) => {\r\n//     setSelectedProjects(projectsList);\r\n//     setModalTitle(title);\r\n//     setShowModal(true);\r\n//   };\r\n\r\n//   const closeModal = () => {\r\n//     setShowModal(false);\r\n//     setSelectedProjects([]);\r\n//     setModalTitle('');\r\n//   };\r\n\r\n//   const handleViewCalendar = () => {\r\n//     setShowCalendar(true);\r\n//   };\r\n\r\n//   const closeCalendar = () => {\r\n//     setShowCalendar(false);\r\n//   };\r\n\r\n//   // Tile content to highlight ongoing projects' end dates on the calendar\r\n//   const tileClassName = ({ date, view }) => {\r\n//     if (view === 'month') {\r\n//       if (\r\n//         ongoingProjectsEndDates.some(\r\n//           (endDate) =>\r\n//             endDate.getFullYear() === date.getFullYear() &&\r\n//             endDate.getMonth() === date.getMonth() &&\r\n//             endDate.getDate() === date.getDate()\r\n//         )\r\n//       ) {\r\n//         return 'highlight-tile';\r\n//       }\r\n//     }\r\n//     return null;\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"container mt-5 dashboard-container\">\r\n//       <h1 className=\"text-center mb-4\" id=\"heading1\">\r\n//         Dashboard\r\n//       </h1>\r\n\r\n//       {/* Metrics Section */}\r\n//       <div className=\"row mb-4\">\r\n//         <div className=\"col-md-4\">\r\n//           <div\r\n//             className=\"card text-center shadow-sm\"\r\n//             onClick={() => handleCardClick(recentProjects, 'Total Projects')}\r\n//           >\r\n//             <div className=\"card-body\">\r\n//               <h5 className=\"card-title\">Total Projects</h5>\r\n//               <p className=\"card-text display-4\">{metrics.totalProjects}</p>\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//         <div className=\"col-md-4\">\r\n//           <div\r\n//             className=\"card text-center shadow-sm\"\r\n//             onClick={() =>\r\n//               handleCardClick(\r\n//                 recentProjects.filter((project) => project.status === 'Active'),\r\n//                 'Active Projects'\r\n//               )\r\n//             }\r\n//           >\r\n//             <div className=\"card-body\">\r\n//               <h5 className=\"card-title\">Active Projects</h5>\r\n//               <p className=\"card-text display-4\">{metrics.activeProjects}</p>\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//         <div className=\"col-md-4\">\r\n//           <div\r\n//             className=\"card text-center shadow-sm\"\r\n//             onClick={() =>\r\n//               handleCardClick(\r\n//                 recentProjects.filter((project) => project.status === 'Completed'),\r\n//                 'Completed Projects'\r\n//               )\r\n//             }\r\n//           >\r\n//             <div className=\"card-body\">\r\n//               <h5 className=\"card-title\">Completed Projects</h5>\r\n//               <p className=\"card-text display-4\">{metrics.completedProjects}</p>\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n\r\n//       {/* Recent Projects Section */}\r\n//       <div className=\"card shadow-sm mb-4\">\r\n//         <div className=\"card-header\">\r\n//           <h2>Recent Projects</h2>\r\n//         </div>\r\n//         <ul className=\"list-group list-group-flush\">\r\n//           {Array.isArray(recentProjects) && recentProjects.length > 0 ? (\r\n//             recentProjects.slice(0, 3).map((project) => (\r\n//               <li\r\n//                 className=\"list-group-item\"\r\n//                 key={project._id}\r\n//                 onClick={() => navigate(`/project/${project._id}`)}\r\n//                 style={{ cursor: 'pointer' }}\r\n//               >\r\n//                 {project.name}\r\n//               </li>\r\n//             ))\r\n//           ) : (\r\n//             <li className=\"list-group-item\">No recent projects available.</li>\r\n//           )}\r\n//         </ul>\r\n//       </div>\r\n\r\n//       {/* Quick Actions Section */}\r\n//       <div className=\"quick-actions-section text-center mt-4\">\r\n//         <button className=\"btn btn-primary m-2\" onClick={handleCreateProject}>\r\n//           Create New Project\r\n//         </button>\r\n//         <button className=\"btn btn-secondary m-2\" onClick={handleViewCalendar}>\r\n//           View Calendar\r\n//         </button>\r\n//       </div>\r\n\r\n//       {/* Modal for Project Details */}\r\n//       {showModal && (\r\n//         <div className=\"modal-backdrop\" onClick={closeModal}>\r\n//           <div\r\n//             className=\"modal fade show\"\r\n//             style={{ display: 'block' }}\r\n//             tabIndex=\"-1\"\r\n//             role=\"dialog\"\r\n//           >\r\n//             <div className=\"modal-dialog\" role=\"document\">\r\n//               <div className=\"modal-content\" onClick={(e) => e.stopPropagation()}>\r\n//                 <div className=\"modal-header\">\r\n//                   <h5 className=\"modal-title\">\r\n//                     {modalTitle}: {selectedProjects.length}\r\n//                   </h5>\r\n//                 </div>\r\n\r\n//                 <div className=\"modal-body\">\r\n//                   <ul className=\"project-list\">\r\n//                     {selectedProjects.map((project) => (\r\n//                       <li key={project._id} className=\"project-item\">\r\n//                         {project.name}\r\n//                       </li>\r\n//                     ))}\r\n//                   </ul>\r\n//                 </div>\r\n//                 <div className=\"modal-footer\">\r\n//                   <button type=\"button\" className=\"btn btn-secondary\" onClick={closeModal}>\r\n//                     Close\r\n//                   </button>\r\n//                 </div>\r\n//               </div>\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n\r\n//       {/* Calendar Modal */}\r\n//       {showCalendar && (\r\n//         <div className=\"calendar-backdrop\">\r\n//           <div className=\"calendar-card card shadow-sm\">\r\n//             <div className=\"card-header\">\r\n//               <h5>Calendar</h5>\r\n//               <button\r\n//                 type=\"button\"\r\n//                 className=\"close\"\r\n//                 onClick={closeCalendar}\r\n//                 aria-label=\"Close\"\r\n//               >\r\n//                 <span aria-hidden=\"true\">&times;</span>\r\n//               </button>\r\n//             </div>\r\n//             <div className=\"card-body\">\r\n//               <Calendar tileClassName={tileClassName} />\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default Dashboard;\r\n"],"mappings":";;AAcignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}